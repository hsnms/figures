(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    605876,      13267]
NotebookOptionsPosition[    598936,      13030]
NotebookOutlinePosition[    599280,      13045]
CellTagsIndexPosition[    599237,      13042]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", " ", 
     RowBox[{"Cosh", "[", "x", "]"}]}], "-", 
    RowBox[{"Sinh", "[", "x", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6639545224620433`*^9, 3.6639546114695807`*^9}, {
  3.6640171449179173`*^9, 3.6640171674380555`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwd0wk0VdsfB/CTXvEKDSRkjivJkOGRsn8qipKZ6EUkU2QoQzS4xidkjkgl
IokMGW7GK0KhCPdKusZkuLlkSAn/3f+sddZZn/Xdv9/a+5zfET/vYeLARhDE
Gr7/PE84jHdSJ8wR8f9r68Gvzy3ODwioAIbiXVK2Jt/mnpgXAtp/PMpF6tF8
WXvTzY9kgK3FmKfPasof4M2+L2CGLTbUIrUBETwTiWuiVtgzTb05vKiTWRNs
R7LBdj7yji6OjO3fUOyS7f70Y/M334c0OpSLEgQu/OnHzJFSRbs1HzxpSHfE
vrt+pxBCnHkcD+dFXbCZ5bU52mie70qyVJYrNtkt+/pJ9Dnk820Lkjt2yWoV
3RjZL2W9ajDzxLa94FdogejyVuhsshe2ioCd+Vmk78BdOU+/jE3LzXOzQ9R7
Daq3BbyxgyXuSjkglQ9Xi6X+9cHO5XOydkFPOeTlatN9seezNgi5IxEYybVg
+GGbLxSVeqEEn7uSLFF/bK+NZTneaGP+qYz/7AKwYefGcT8UMMwmJJZ1DfuF
xr3r19A0PyWFMnoduzbU1TkQ2Rte4jEm3cRW21BBD0K9YRKxE06BQJDnZ9r2
hiISw3VDvRkZ59rbrhSGI1v/Y0dvL/yx2/fHTrdQGq94kFVyEPZpcRvzaNRd
uFwrpRaMnSKbFhCLuE/Sfs/SsckVhnlu8SgkKOpqpEAothY5VeoOqhVyLLeo
xCZmN0rvT0FLFVrzEv+GYT8YvmiditymFzyq0sOxL9ZwCj1AObc6Cv7T/A/X
T0krW2agQclnU6YMbK3Z5+Wlj5DZv7ZOTNFbeP3e6JqcxyhmUSObQsWmfihA
mjmoJX7HSKhdJM41JLePP0GaLW9thLOicP3X3GfXn6Gr9tnpE0ejsR+HejgV
oJLVwL6y0T/ebhTkXIhIqqoWBqQYIAbnZF7Ti5Ftx5YkwWZssZUCWC5B91wn
O8ecYnEe+ZOxtxRxdL7PqTOLw/U3KLcKy1G2SM1rqWxsYpKXdwMFHXHLG41a
+JMzN9U7vUTX2cMkLJPj8X5DUsjm1UjA/PLh2jFsshv/9qEaVJ55zlZSLQGv
T2RvDKhDM5oaD2bo2BmJIQ1u9eiCN0vglkAS3s+zAzVSr5Hy+oSAEk9s6k/F
aM0mxJag8ulTMzY5prfHphk9LPRPl/e9g/u9mAuofYPckdDK6XbsQUUd6ZW3
6FB7rXWQZDLe7we2GZ021De5XrT7Azb5e+DVxXco1z8ncEUmBa/XidVW6EB+
HHqDpCDsjtq5Z+MdiJcU88hf4S4Qtnv6x10/IEM7fknR6FQgZn4bGJf3IJGZ
ylDdEWwtbdeIFBpi3rT+4qWRBsTWahvqTTqKTM/MaRzHtu0rCDn3ETXS98lc
1EnH9cKSMW6fUaLj+1uJ6dhF9xTZyAx0fsFrsnoOW3HgE3/aAFrbXvFsS+Z9
3F8qAGYHkYbBYfmy1QdA6KYdUrIfQRyfR2IY5g+BsPw8Es8xiuiu4Sz2Auwi
u/rE4lFU2ehgWSCXAYRRSmIO9xiyHM4TIPqxtdKadi+OozqZ32+S2B/h818y
Lno5gUhepwJklLHJdb8VgibRwhqrzyQSW5FTdr8QEyUIq6Znq2fi/dMkLUJY
6NeFcH2NC9iWQ1dblWeQXT7997tY7IhbY1y5M0jxYID10hh2xw0erpRZ1G5Z
J3LyThb+HrxngmPnEEeS3qOZ2cdAqO8aK5v+gZbVh5YfCWbjXFb1+LUlNP35
qoXpUWwxy/5ff/9EXdK5m8uTsv+834KPcr/Qg6qNvtfUcvD6bS/HY38jlZGG
ExtvPAGi16T8yiAB0hH/ZldkYxNJFk3q60BQbm7N+R126ITAyYR1sOYrUdYq
mgsEJ5/unC4bvN0UJBr/CltM4cePxvVgq4Tmd3HkAcFhZprxcyOY0nsM2hWx
CWF/Tkd2OHb90tObVth/Mapbu9hBtindZigPm5zw+eQLDli0Wm7JOfUMf/96
iA7eBNFBlPv7E/OBKE3y+WTPDYEko6XhKmznkmnPMW643PrVJGkU22w+NODi
Fji9YyfHD9UCIFafSPof3AoST30uV/diaxf+ohltg4oOpePHRQqBoBzcsD2D
B2ImmLr7jmFP7+78PsUDjmxPTmxzxx7kO5Gszgt8KrsMPtVgL82TZLp5oao1
KK9Cvgj/f2vNqbx8sEvhYvHJd9jqxZHkKn4IP3hcCQ1jR9wZIHgF4PtxyReK
i9j5q16mlwTgrS2jdIdIMRDePcpXJAQhIMGEMnAJe8nalZK8C/oWNOqucJUA
MV5RpJwrAsfY+LUcxbGXhJ/qc4tCCfcC1VIVW3/r5eM+ohApXfhK0xqbdlZu
TkIMNKx2N7EXYKM2h+9LYpBavbn9nv4LIDIP7xuolADLkP6+hqhSIJ4vcH9K
JcHWQdI+p0fY8nweyUMkeHPI68amCmxmw5YJGWnQWNwgZjyMPS4QZ1EtDbtc
FBwY6mVAnL30y358DzAMgllLX7BL+ya7rGXhguCev+S1KoDY7CCnZKcIQn6X
zTvNsVO9zEViFaGnqzrH2xVbVG2HbY0iHLttrFeVjI323vsiuB+kiWsxut+w
qY+urevbD5Nf2vnt0yj4fFcuvnJWBo/iK3J3518C8cxR9O7bf2D60FDXG45K
ICQHzVfW/gG3FoOAZSHsnUtNZapq4Dwg02yjg93EYS2eqQa2XIO2UsnYnzl9
Jm+qg5GLflKJWhUQ/VsO3tDVAEVxqeW2gGogCiiRbsIInucnPFqNwaZk7aqw
RrBPndBVzMLmOf+39QMEeww/JSW2YhtOrFWJAYjdiJc/I1QD5I686jFeLdj2
ccXua00Nno/wzirSYfgeR2tZt64OiCqL+5buR6HarRhG+bDjkuuyU47Cf7rR
5U37sIVWzOTqj4IQceRxlGUd7ucVyOTVBh2PgsAdRTgfiLdRqNOGNtKRe0kK
VCCu6WRPiRwDsQ0CJrkM7F9+gXacerDhSvjt1AnsmZ8ppzT1YHJwriVyHjti
ysLfXQ/Kqt/BpU31+P9pcI/r1IMT3qFySv9gj627U592ArxHWBzVt7F9y1TM
DuhDS31T3ftDr4Do+1Vpk2sIOW2/R28f/+O65tBBQwijK23SN3kF5Bz2NF9O
Izjy7YFZixO2eeXoER0jqOb3m6AmYP82FL5EMYIiD2meknHs/BEXgWxjuCsc
4ZiU1IDnlWvt37um4LunNsrkYQOQ9ePMqiimYK48X7Q1D+fXbUzRR1PYrme7
HF2Hc26F9EJBM4j2Vo8Lm8QuXQo7/NAMyK3jL321GoEcf4dPpdAcXPz1uKyY
jUD8I7t3YPI05O3aZm2ziB3t9fQslyUwa3rz7YnXQHxjnl5WsAR3Nmd9d15s
LoGQdB9L8I4Kjwo59BrI1/1pHmxWEHi/4e/n0dgM3SRniTNwp15z43q5JiDO
maXyXD8L9X8rreVfagZqeuDJb222sMdMsSLyajNo8Rwcdhi1hbgH8h7OIc1A
9FRbzy/bgq2y7MDuVJwnhu8zlbWD1bOSdWmNzUBe73ZSIMoONIr4AiN2tQAx
Zfyow+A8lFosr9q/aQGt2HXmKl/tISercVVQ6i1ocafI8tk4gWeY2RAovAVC
5bmak78THHQabbhwAOdJfOntSU7QsfevW89PYU9+jO1rdYKfxUd5jvi+BbK6
0rZFDWfQp76SdmnGJo4xNYRdYK6falTh0gpaBVL31L5fBC2+mkzT521A7em5
0TfgDn/d2eGhQ2nD80WpFCE8oIXH/aDaqzbQ2vziP38xDzDcJtotSGsDcpjG
98t2HmDDGbRheAXXuxdO+Yx6wDU2HWfPU+1AzC5T7fw8oXy6Te42sx0ybloy
z0R6gVxzP6Vp73sY5HwTyOi6At1aptNPpzuAStslLOzrD26bXD/0KH4A6jmL
A8NpgdDae7qGO6YLyN6DRNeTEDA9Zjk0OtoNtj6JiZJsEfBPRtTpDEkaDIaq
TfDcj4bB1cRu50A6nrdrx46KxsMXvfdZfA29QI6WH1felgRFqQP+neJ9eL4/
TylkpEB2xPpbMgGfgHq10Mo65B4s2J+ZdKzqB89RL9eR4IewWTvcpHgnA+Ke
BLcsS2TC9a1fOIfODkDGQ2cl3oTHwFkrS9BPDYKn6ZlWrr1PQNPXcKXhF7Zw
hmCheh6kP47O2p0+BFvl5jZqGhWAjblK+98nh2HwxNPyZb8iKOtxSKxdHIYZ
xmE+gwslcKCtiG0seQTuZrnXfjMuBTEdx4VE7VEQy8h86hhXDqoqqvGlY6Ng
aRw8MfuOAgPfb7/JCvsCYgTJ5aZ0FTCVjcMElMYg91ucZAqjBkhTcpPrusaA
vyv5dZUuFRolfT54Bn0F5x+8H/fT6yG2u8feRHIcLki9Ecs+3wAsU2o8W+M4
JI3tOLJ9pRFKzHccPeA1AXE3RWozupsgqz3k/vD2ScgPl+C1zWmBH81nr21/
NQnjr9nCuKvfwmB83cJW9ykgT2SPnBtrg8XOgwLB3Ey4QDsTGMn+HjyTJKj+
1Uw8Pw7a8lUdsLNdYuuozTfYMy3up/+tE0x78n8LrX6DbitG2ak9XfD93CO3
/rxpmBd6u90wthvqbAvDuPVZQL2ts/gXqwcq37udZBiwQFt8bVB/oQfK0d5t
z41Z4N3Lzp+83AP5Qtnpp06zoN+uznUfBw3SetNeRJ9nAW9d93NncRr4GIUP
bfJnQZHVzjZRMxrIallrsuewYGZ1+smtShqQCgXX03NZwG9h7btMpYGESG9L
zjMWUEImkt2bacD/28TsWDELyDf43lt202AjRdc1rJoFbZVDYprTNBhSUEld
38WC3KGjV3Qk6ND/YNamqwebGe7ftocOvVyFklm9LBj3onWbKdDh3ZRM0REG
7geno1wO0aH6iWhz0AQ+rx77SqYFHSh8n6ONmSxodOwpUrGmw4uwNBNxFgu6
STJVzfZ0yLPfwaDOs0AlWKR71pMO2R8+ZMX9YEFvpshIhB8dMg7Hudj+YoG+
l52e+E06pBedUlBcYUHEIT72qlA6pIhuXlhbY0GcpZuQRRQd/gcnGUZi
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {0., 0.3678794171877451}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6639545905709753`*^9, 3.6639546138915625`*^9}, {
  3.66401715240263*^9, 3.664017170094429*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"Sinh", "[", "x", "]"}], 
     SuperscriptBox["x", "2"]], "-", 
    FractionBox[
     RowBox[{"Cosh", "[", "x", "]"}], "x"]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.00001", ",", "0.1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6639546738743477`*^9, 3.6639547539301586`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwV0H0w1HkcwPFvik0qT1Gh2p6O0zSko0zqu2gxh/J0cdxdxtO5FlGSHq7W
EeuplrBYm98PsV2eSuwarg9NjYcijOau6LJ5jLWtEa7xdN/94zvf72ve35nv
w+6g816hagghdzJUcwA3Y6Xr68gJskQtCy+fFkm2P4nzUseE3NlI+dMsU5cv
dnV6KrcsKv57mn727BYqeLfKTK4FA3iL58p6myxVtnp22hBSOqIjJn9lqcwe
/rAfkmsv9swf9yBmjcxWWIPGvktqy2aBqs5fSmeDzmTeP8KX0cR7HPtCzsDr
HAPGB0U8cVCwY3EgNOoF+JbEcolXmmXKULCUNWkGtycR9xvI6zmA3lZV2PTx
MOLW/PxdRjTMnbHcl2+VSXqHuvnli6AYpqPYwMcocFqS6BMHmw59Ybm0ZJPe
6ixAV4DVelstW56DEUsnIGTsGuwcm7Ednc3DaGisearwBlxKEmmvmcknXaYu
p7gwFJrVH7xdiBHfex9L9w+YH3DX7jERYcQsSZoJT4RduV62ia7FZD9zMOF9
EsiGX3NXJRRGUtzOdk0GXtu7Xc8kNLHxRBiVAo2vUm3MukrIfuXNcL1UYJns
WK/fU4pR/Kh7GycNPDJ9POmJMowmel4xPqbDjmO1n/SX7pP37nx+3TMTWIeV
dlrL5apeckp8G+Ru/YxyfTFGlN/yms18UNQWZb7Y+oCc17spvYkPVZ6pQR2G
f2JUdNWuOjQL5vSNaqIPPMTI7e9tJ3dmw13mnYaig5UYrVvQ53VmQ9MpsXUE
uwqjL58T8a27UNw4upbpV43R+sHmLLsceBvFyPTzq8HoqI80azwHukvGnIyO
1GJkKbLXoHMhoK6prFNKvNk12OxUHjh/3GM+feQRRk6fv44s5MHC7p84slbi
2lmHrbUC6EtmbMh3eEzu7/5wPiAfLiwlhTC7iS0TJG6GBXBcEGvC8ajDqFAo
Pv28AMI85hdNe4g1gk5MRxWCj9H3ggb/Jxg5JICamRAiNXX4jEHiyYGM5/1C
cNUUnzQPr8do2yPv1TtFkGLax4QZ4pbqW2+cRaA4F+VveKEBo7gGL99ZERjB
4Gm8TJxWneZddQ9ijv5VYn5TgpGV8/pF/2L4psdiB2+F+HfH0ntqFFDxsd4S
nhSjt371y79QwHY6MC7WbCSdvc6qnoJ/lb0PJrSIrUVzjxsoiBPGR5htJhab
jh+WUlCufDFToUf8pr/TuokCDWHgUrkxcRs/x7aVgvbPubr3DxJvuXvIvosC
1wJkR3sSs2VZHqMUjDhWrAx5E/sWpPaOUXBd4d7KPEMsTUrwmqCg0lHoRPkT
x8/F+ExRsFFh7VkcTHwO/+A3Q0G3AydMdInY5Mr+wGUKwqZ1v31/mdgmnClb
oWBFIJ0yuUo8nmYchGiwmFaPKbpBvJejF7KWBr6AuiZMIb4uUAvXpMHMwfnE
QCpx397ViQ00tMinkXEGsWx48beNNCjtjyUX8oldVuc42jTw5DKXd9nEFf6z
ch0amAKellGu6j8+KSP1aJDaW3T/KFC5UqHQp8FT/oZfUEBcXSo/b0DD/3XU
Tig=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0.00001, 0.1}, {-0.03336667789139014, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.663954730277659*^9, 3.663954756242777*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "x"}]], 
     SuperscriptBox["x", "2"]], "+", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "x"}]], "x"]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.00001", ",", "0.1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6639548152583537`*^9, 3.663954840026822*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0.00001, 0.1}, {0., 7968.463738223666}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6639548437301407`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Integral]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "x"}]], 
      SuperscriptBox["x", "2"]], "+", 
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "x"}]], "x"]}], ")"}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.6639559372646427`*^9, 3.663955947580085*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "x"}]], "x"]}]], "Output",
 CellChangeTimes->{3.66395594944433*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Integral]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"Sinh", "[", "x", "]"}], 
      SuperscriptBox["x", "2"]], "-", 
     FractionBox[
      RowBox[{"Cosh", "[", "x", "]"}], "x"]}], ")"}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{3.6639561193587666`*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"Sinh", "[", "x", "]"}], "x"]}]], "Output",
 CellChangeTimes->{3.663956139105048*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"Sinh", "[", "x", "]"}], 
       SuperscriptBox["x", "2"]], "-", 
      FractionBox[
       RowBox[{"Cosh", "[", "x", "]"}], "x"]}], ")"}], "2"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.00001", ",", "0.1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.663956330843875*^9, 3.663956332461965*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0.00001, 0.1}, {0., 0.0011133351935077836`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6639563345320005`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Integral]", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "x"}]], 
       SuperscriptBox["x", "2"]], "+", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "x"}]], "x"]}], ")"}], "2"], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.6639566609199286`*^9, 3.6639566617955112`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", "x"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "-", 
     RowBox[{"2", " ", "x"}], "+", 
     SuperscriptBox["x", "2"], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "x"}]], " ", 
      SuperscriptBox["x", "3"], " ", 
      RowBox[{"ExpIntegralEi", "[", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "x"}], "]"}]}]}], ")"}]}], 
  RowBox[{"3", " ", 
   SuperscriptBox["x", "3"]}]]], "Output",
 CellChangeTimes->{3.6639566648185263`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Integral]", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"Sinh", "[", "x", "]"}], 
       SuperscriptBox["x", "2"]], "-", 
      FractionBox[
       RowBox[{"Cosh", "[", "x", "]"}], "x"]}], ")"}], "2"], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.663956693744811*^9, 3.663956694341209*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "-", 
   RowBox[{"3", " ", 
    SuperscriptBox["x", "2"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["x", "2"]}], ")"}], " ", 
    RowBox[{"Cosh", "[", 
     RowBox[{"2", " ", "x"}], "]"}]}], "+", 
   RowBox[{"2", " ", "x", " ", 
    RowBox[{"Sinh", "[", 
     RowBox[{"2", " ", "x"}], "]"}]}], "-", 
   RowBox[{"2", " ", 
    SuperscriptBox["x", "3"], " ", 
    RowBox[{"SinhIntegral", "[", 
     RowBox[{"2", " ", "x"}], "]"}]}]}], 
  RowBox[{"6", " ", 
   SuperscriptBox["x", "3"]}]]], "Output",
 CellChangeTimes->{3.663956696776836*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Integral]", 
  RowBox[{
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "x"}]], "x"], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{3.664019867342584*^9}],

Cell[BoxData[
 RowBox[{"ExpIntegralEi", "[", 
  RowBox[{"-", "x"}], "]"}]], "Output",
 CellChangeTimes->{3.664019869637281*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{
    FractionBox[
     SuperscriptBox["\[ExponentialE]", "a"], 
     RowBox[{"1", "+", "a"}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"a", " ", 
       RowBox[{"Cosh", "[", "a", "]"}]}], "-", 
      RowBox[{"Sinh", "[", "a", "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F", "=", 
   RowBox[{
    FractionBox[
     SuperscriptBox["a", "2"], 
     RowBox[{"1", "+", "a"}]], 
    SuperscriptBox["\[ExponentialE]", "a"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"H", "\[Times]", "G"}], "+", "F"}], ")"}], "2"], 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "b"}]], "2"], "-", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "a"}]], "2"], "+", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "b"}]], "b"], "-", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "a"}]], "a"]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox["H", "2"], "\[Times]", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"Cosh", "[", 
        RowBox[{"2", " ", "b"}], "]"}], 
       RowBox[{"2", " ", "b"}]], "-", 
      FractionBox[
       RowBox[{"Cosh", "[", 
        RowBox[{"2", " ", "a"}], "]"}], 
       RowBox[{"2", " ", "a"}]], "+", 
      FractionBox["1", 
       RowBox[{"2", " ", "a"}]], "-", 
      FractionBox["1", 
       RowBox[{"2", " ", "b"}]], "+", 
      FractionBox[
       RowBox[{"Sinh", "[", 
        RowBox[{"2", " ", "a"}], "]"}], "4"], "-", 
      FractionBox[
       RowBox[{"Sinh", "[", 
        RowBox[{"2", " ", "b"}], "]"}], "4"], "+", 
      FractionBox["a", "2"], "-", 
      FractionBox["b", "2"]}], ")"}]}], "+", 
   RowBox[{"2", " ", "H", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"H", " ", "G"}], "+", "F"}], ")"}], "\[Times]", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "b"}]], " ", 
        RowBox[{"Sinh", "[", "b", "]"}]}], "b"], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "a"}]], " ", 
        RowBox[{"Sinh", "[", "a", "]"}]}], "a"], "+", 
      FractionBox["b", "2"], "-", 
      FractionBox["a", "2"], "+", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "a"}]], "4"], "-", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "b"}]], "4"]}], ")"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6641071006305695`*^9, 3.6641071894685917`*^9}, {
  3.664107267846115*^9, 3.6641074895208926`*^9}, {3.6641075825416217`*^9, 
  3.6641075873230977`*^9}, {3.664107665006571*^9, 3.6641081163458543`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox["a", "3"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], "2"]]}], "-", 
  FractionBox[
   SuperscriptBox["a", "4"], 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["a", "4"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"2", " ", "a"}], "-", 
      RowBox[{"2", " ", "b"}]}]]}], 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["a", "4"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"2", " ", "a"}], "-", 
      RowBox[{"2", " ", "b"}]}]]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], "2"], " ", "b"}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "a"}]], " ", "H"}], 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "a"}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["a", "3"], " ", 
    SuperscriptBox["\[ExponentialE]", "a"], " ", "H"}], 
   RowBox[{"1", "+", "a"}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["a", "2"], " ", "b", " ", 
    SuperscriptBox["\[ExponentialE]", "a"], " ", "H"}], 
   RowBox[{"1", "+", "a"}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"a", "-", 
      RowBox[{"2", " ", "b"}]}]], " ", "H"}], 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "a"}], ")"}]}]], "+", 
  FractionBox[
   SuperscriptBox["H", "2"], 
   RowBox[{"2", " ", "a"}]], "+", 
  FractionBox[
   RowBox[{"a", " ", 
    SuperscriptBox["H", "2"]}], "2"], "-", 
  FractionBox[
   SuperscriptBox["H", "2"], 
   RowBox[{"2", " ", "b"}]], "-", 
  FractionBox[
   RowBox[{"b", " ", 
    SuperscriptBox["H", "2"]}], "2"], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["a", "2"], " ", "H", " ", 
    RowBox[{"Cosh", "[", "a", "]"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "a"}], ")"}], "2"]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["a", "3"], " ", "H", " ", 
    RowBox[{"Cosh", "[", "a", "]"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "a"}], ")"}], "2"]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["a", "3"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"2", " ", "a"}], "-", 
      RowBox[{"2", " ", "b"}]}]], " ", "H", " ", 
    RowBox[{"Cosh", "[", "a", "]"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "a"}], ")"}], "2"]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["a", "3"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"2", " ", "a"}], "-", 
      RowBox[{"2", " ", "b"}]}]], " ", "H", " ", 
    RowBox[{"Cosh", "[", "a", "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], "2"], " ", "b"}]], "+", 
  FractionBox[
   RowBox[{"a", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "a"}]], " ", 
    SuperscriptBox["H", "2"], " ", 
    RowBox[{"Cosh", "[", "a", "]"}]}], 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "a"}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox["\[ExponentialE]", "a"], " ", 
    SuperscriptBox["H", "2"], " ", 
    RowBox[{"Cosh", "[", "a", "]"}]}], 
   RowBox[{"1", "+", "a"}]], "+", 
  FractionBox[
   RowBox[{"a", " ", "b", " ", 
    SuperscriptBox["\[ExponentialE]", "a"], " ", 
    SuperscriptBox["H", "2"], " ", 
    RowBox[{"Cosh", "[", "a", "]"}]}], 
   RowBox[{"1", "+", "a"}]], "-", 
  FractionBox[
   RowBox[{"a", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"a", "-", 
      RowBox[{"2", " ", "b"}]}]], " ", 
    SuperscriptBox["H", "2"], " ", 
    RowBox[{"Cosh", "[", "a", "]"}]}], 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "a"}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{"a", " ", 
    SuperscriptBox["H", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Cosh", "[", "a", "]"}], "2"]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "a"}], ")"}], "2"]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox["H", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Cosh", "[", "a", "]"}], "2"]}], 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"2", " ", "a"}], "-", 
      RowBox[{"2", " ", "b"}]}]], " ", 
    SuperscriptBox["H", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Cosh", "[", "a", "]"}], "2"]}], 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"2", " ", "a"}], "-", 
      RowBox[{"2", " ", "b"}]}]], " ", 
    SuperscriptBox["H", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Cosh", "[", "a", "]"}], "2"]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], "2"], " ", "b"}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["H", "2"], " ", 
    RowBox[{"Cosh", "[", 
     RowBox[{"2", " ", "a"}], "]"}]}], 
   RowBox[{"2", " ", "a"}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["H", "2"], " ", 
    RowBox[{"Cosh", "[", 
     RowBox[{"2", " ", "b"}], "]"}]}], 
   RowBox[{"2", " ", "b"}]], "+", 
  FractionBox[
   RowBox[{"2", " ", "a", " ", "H", " ", 
    RowBox[{"Sinh", "[", "a", "]"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "a"}], ")"}], "2"]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["a", "2"], " ", "H", " ", 
    RowBox[{"Sinh", "[", "a", "]"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "a"}], ")"}], "2"]], "-", 
  FractionBox[
   RowBox[{"2", " ", "a", " ", "H", " ", 
    RowBox[{"Sinh", "[", "a", "]"}]}], 
   RowBox[{"1", "+", "a"}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"2", " ", "a"}], "-", 
      RowBox[{"2", " ", "b"}]}]], " ", "H", " ", 
    RowBox[{"Sinh", "[", "a", "]"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "a"}], ")"}], "2"]], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"2", " ", "a"}], "-", 
      RowBox[{"2", " ", "b"}]}]], " ", "H", " ", 
    RowBox[{"Sinh", "[", "a", "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], "2"], " ", "b"}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "a"}]], " ", 
    SuperscriptBox["H", "2"], " ", 
    RowBox[{"Sinh", "[", "a", "]"}]}], 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "a"}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{"a", " ", 
    SuperscriptBox["\[ExponentialE]", "a"], " ", 
    SuperscriptBox["H", "2"], " ", 
    RowBox[{"Sinh", "[", "a", "]"}]}], 
   RowBox[{"1", "+", "a"}]], "-", 
  FractionBox[
   RowBox[{"b", " ", 
    SuperscriptBox["\[ExponentialE]", "a"], " ", 
    SuperscriptBox["H", "2"], " ", 
    RowBox[{"Sinh", "[", "a", "]"}]}], 
   RowBox[{"1", "+", "a"}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"a", "-", 
      RowBox[{"2", " ", "b"}]}]], " ", 
    SuperscriptBox["H", "2"], " ", 
    RowBox[{"Sinh", "[", "a", "]"}]}], 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "a"}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["H", "2"], " ", 
    RowBox[{"Cosh", "[", "a", "]"}], " ", 
    RowBox[{"Sinh", "[", "a", "]"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "a"}], ")"}], "2"]], "+", 
  FractionBox[
   RowBox[{"a", " ", 
    SuperscriptBox["H", "2"], " ", 
    RowBox[{"Cosh", "[", "a", "]"}], " ", 
    RowBox[{"Sinh", "[", "a", "]"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "a"}], ")"}], "2"]], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["H", "2"], " ", 
    RowBox[{"Cosh", "[", "a", "]"}], " ", 
    RowBox[{"Sinh", "[", "a", "]"}]}], 
   RowBox[{"1", "+", "a"}]], "-", 
  FractionBox[
   RowBox[{"a", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"2", " ", "a"}], "-", 
      RowBox[{"2", " ", "b"}]}]], " ", 
    SuperscriptBox["H", "2"], " ", 
    RowBox[{"Cosh", "[", "a", "]"}], " ", 
    RowBox[{"Sinh", "[", "a", "]"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "a"}], ")"}], "2"]], "-", 
  FractionBox[
   RowBox[{"2", " ", "a", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"2", " ", "a"}], "-", 
      RowBox[{"2", " ", "b"}]}]], " ", 
    SuperscriptBox["H", "2"], " ", 
    RowBox[{"Cosh", "[", "a", "]"}], " ", 
    RowBox[{"Sinh", "[", "a", "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], "2"], " ", "b"}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["H", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sinh", "[", "a", "]"}], "2"]}], 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], "2"]}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["H", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sinh", "[", "a", "]"}], "2"]}], 
   RowBox[{"a", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["H", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sinh", "[", "a", "]"}], "2"]}], 
   RowBox[{"a", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "a"}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"2", " ", "a"}], "-", 
      RowBox[{"2", " ", "b"}]}]], " ", 
    SuperscriptBox["H", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sinh", "[", "a", "]"}], "2"]}], 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"2", " ", "a"}], "-", 
      RowBox[{"2", " ", "b"}]}]], " ", 
    SuperscriptBox["H", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sinh", "[", "a", "]"}], "2"]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], "2"], " ", "b"}]], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   SuperscriptBox["H", "2"], " ", 
   RowBox[{"Sinh", "[", 
    RowBox[{"2", " ", "a"}], "]"}]}], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["a", "2"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"a", "-", "b"}]], " ", "H", " ", 
    RowBox[{"Sinh", "[", "b", "]"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "a"}], ")"}], " ", "b"}]], "+", 
  FractionBox[
   RowBox[{"2", " ", "a", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"a", "-", "b"}]], " ", 
    SuperscriptBox["H", "2"], " ", 
    RowBox[{"Cosh", "[", "a", "]"}], " ", 
    RowBox[{"Sinh", "[", "b", "]"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "a"}], ")"}], " ", "b"}]], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"a", "-", "b"}]], " ", 
    SuperscriptBox["H", "2"], " ", 
    RowBox[{"Sinh", "[", "a", "]"}], " ", 
    RowBox[{"Sinh", "[", "b", "]"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "a"}], ")"}], " ", "b"}]], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   SuperscriptBox["H", "2"], " ", 
   RowBox[{"Sinh", "[", 
    RowBox[{"2", " ", "b"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.6641075904326153`*^9, 3.664108141856205*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%7", "]"}]], "Input",
 CellChangeTimes->{{3.664108172732688*^9, 3.664108174264017*^9}},
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"8", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], "2"], " ", "b"}]], 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", "b"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "a"}], ")"}], "2"]}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "b"}], ")"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"4", " ", "b"}]], " ", 
      SuperscriptBox["H", "2"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "+", "b"}], ")"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "a"}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["a", "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", 
          SuperscriptBox["\[ExponentialE]", "a"], " ", "H"}]}], ")"}], "2"]}],
      "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "b"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["a", "3"]}], " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "a"}], ")"}], " ", "b"}], "-", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "a"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"3", "+", 
              RowBox[{"a", " ", 
               RowBox[{"(", 
                RowBox[{"3", "+", 
                 RowBox[{"2", " ", "a"}]}], ")"}]}]}], ")"}], " ", "b"}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "a"}], ")"}], " ", 
            SuperscriptBox["b", "2"]}]}], ")"}], " ", 
         SuperscriptBox["\[ExponentialE]", "a"], " ", "H"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["a", "2"], "-", 
           RowBox[{
            SuperscriptBox["a", "3"], " ", "b"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["a", "2"]}], ")"}], " ", 
            SuperscriptBox["b", "2"]}]}], ")"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "a"}]], " ", 
         SuperscriptBox["H", "2"]}]}], ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.664108148528398*^9, 3.664108179826765*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%3", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", "b"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "b", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "b"}]]}], "+", 
     RowBox[{"a", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", "b"}], ")"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "a"}]]}], "-", 
        RowBox[{"b", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "b"}]]}]}], ")"}]}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["a", "2"], "+", 
      RowBox[{"a", " ", "H", " ", 
       RowBox[{"Cosh", "[", "a", "]"}]}], "-", 
      RowBox[{"H", " ", 
       RowBox[{"Sinh", "[", "a", "]"}]}]}], ")"}], "2"]}], 
  RowBox[{"2", " ", "a", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "a"}], ")"}], "2"], " ", "b"}]]], "Output",
 CellChangeTimes->{3.6641076050426846`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Sinh", "[", 
     RowBox[{"100", " ", "x"}], "]"}], ")"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.664115957681662*^9, 3.6641159659789343`*^9}, {
  3.664116008843485*^9, 3.6641160529824457`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
mgKxX8I3/Gk5gyL1S0+qz1Kg/abuv6jXZ5HJ+O6RG4sUWLqr+cvpVBLa8oL7
quNfjv9P+hXnl5LQmqzPdnwrFNBwt3jonZ2MOg39miJ4qHAVki6ovklBlSKa
ETv4qZz/pvjQD79UlEv5vWNckAqtj1Aqn1Aacs/JLtwrSoVOk0mHoBPpiE5v
iFOTo0IHpeCYWMRF9LE5ddfPTVTwe/D24HdCBqrKc2Re38I5v1n2dcOWTBRl
QT3Io0SFc+vG+1uYl5C71BOxJhUqHN8TpX9sKAuZsU9/CNtBhRbX2xlKvdmI
J1/McEyLCvpV11fFfuQg+snhyWs6VKgpzuFjxOaij1b3H9jrc+bPcp+n811B
ef8zkWk0poJ45mlK4K48tA0FzF8lUKEndIunWts1NJrUHytPpILYlZD0LSev
o4JmwlLZHipQfd6JuWzIR+v1FVefO1KBp6zYXCHpBuoOzUu22E8FPUnz3ZLm
BSjzMTfvBxcqSNu93je3WoDWKI4LDrpTIX450oxQUIRavPdd8j1MhdVaA/4N
IcUooahFhOVFhYXm0IU7diVobv1NiSU/KujoF83Vyt5CNC4PeflTVGiqv8qf
L1CK7pp13ioLpQKfjqljcm4p8o4zUtCMoEJG2NDJxs130cCUjIpFLEf/p7WZ
xegeytt5vqL9NBVeqH5eyh6/h/YFzqvvS6SCd2epnndSGeoY+6btm0yF1IrH
DQZf7qO0jTbPmKlUeK34ZuXy2QfI0u2Zfvh5KpgotUgF6ZWjxq5c45RLVIiT
tNzlXl2BHjXvtSm7ToXzuGQVTT5GAYvN7zUKqFA8+yljoLsSKepr2D4vosJ0
ZH5+1IsqVPJYaG/7bSrIvgjveVX8BLkzTn9xvEsFK251xpRDDZJSZO3/XkYF
Nx2UtvKlBmUXfXBjPqSC7uHJ2evkp8huYPdQWCUV7LPNuPwiniF+iQeH/1RT
YTlNXfsZfy06m5HmK1RHhV6Kp1u4eR0Ki7MK0mihQthee48qxgukUVczUddK
BZWS7wX9t+sRc2prqPk7Kmjc9Drd7tWAjgSuRDp2UEHqbtmNV78a0ZZ7pxYG
PlLh4bXTNsrNTWh4bDTOp4sKu07apctefYmc3V6eCeulwq81iv9Fu75Connq
XH/6qJDS7OblaNWCPnUVpiR/p0LQ3dGVy/qvEQHFXcgbpcIYV3aCfGErMtA3
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
3/DsXBzKspgSf8OAA338iaqSV7BWcFp0yTsG6Nq3vZC+eQVXhYul1HZw+iy5
ZkaxJQ8/SlQuJvUygGlZlSxgfB2fWA1SONXPgK6jM3mx1OtYLaWmfPE7AwzL
E9KcrufjBxdM68R+MMCu4YLB/wQKsL9QsknxTwZoORAzhD8WYKXs9lYVMgPE
q/z/2ecV4nt5+7vMGRy9O2pfzRgUYz/pGy6dLAa8WbJqebO+BG8vGB06MMHp
f81lz6S5EnznZiD95H8c/kttB6q/3MIlFWdWC/9y9J123VMTXooP73yXrrzC
gCuXAtWLVkrxxmpB4adcTLAuvO++kHMXF9Zele3gY8K5+rKT+a33sPvuoVsu
gkyoqgnJV/Ytw7KNW5R/CjGBsV286hXvfZzf8lBnQYwJB0Il8iu9HmBXq6n6
ZAkmpL+1K3OXKMdSbfoWItJMUDGV29nwuRzndb62U9rIhOGkJQd7l4c4p6//
qLMSE96umFzcUVWJs85mK/WoMAHzd5vr5VbhTDVE27eDCd63S2Os46txemJd
wF4tJgjpv36npluDU1SCVT/vYkLYelmy37ManPRVkWmnx4Tt5ln613Y/xQlK
V0/YGjHBmL+d97D9MxzXbaf+wYSDf1oDdEef4Zi4Nb+QORNmhrJ2p4XX4vDP
4cE21kzoXFx1Un1UhwOjnEItHJgw59INeQfr8bEtgrteOXL0erMsfcUbsF/H
62nT/UxQp0QF0LobsJe8doSxGxM0wC79k1cT9min6za4M2GRkWJ2Sesldg+7
Nbv7MBOK9DIfveZrxi5tItH6vkz48MW/9kDHK+wU8t6g1o8JzTU3nbfVtWBH
2TMLOv5MCN498HF3+Wu8J3giVjuICf8SzJNkelsxSH2KV4/inJdhe3JzvcNm
LSmmD2OYUDmSPBCS/w6bHDf5p3qaCcl+VbapOm3YoPnhGeWzTEg6pppjEPMe
6wYcsShLYkJxaH3ytm3teJe43Or2VCbk7X/y0uFLO9557GLStotMOBHzqUnc
ogOriVpa3c5kgo+kbMnqcgdWafjNvSWbCbdedK0fe9eJFYQDUzflMYHr4hp1
Vb9PeEMdOi9TwgTz4K0iwZPdWMp7GV+/xYQ3vTziTpQvWELwuYBUKROIsWqx
lNCvWMRTKWP9A07ep+vjtON6sBD/6J7cCiaEhM1/PbumFwvWXBUSe8wEveQE
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {0., 8.641748618364644*^35}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6641160192440453`*^9, 3.6641160557325497`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Cosh", "[", 
     RowBox[{"100", " ", "x"}], "]"}], ")"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6641167483238816`*^9, 3.664116749157543*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwUV3c8V+8XNzISFSJKyN5USMK540NIsioKkR1l5GuVUEJImcnKTlZG2Xtv
PvbeRFlFVuLn99d9ndd5P+9z3u/n3nue5/wDWy0zMhISEltKEpL/P1XNFohV
i7cUkngOA5I1+J59+8EEqyTYVpgTlknXgPlYX1A+KwE+lDSZf6Nag+KK5zbO
fOognB7Zqke/BmJXTqXEsupAide1+lH2NSBhXAw94NCDgaqeMFRiDYhL5S+M
+QxBiTbkYaDiGmiaNBcZRxiDpbW4RY3hGsh2XcoJYTWFdfPlmMWna8AtH/ep
NsYc2G+x0B+NXQPadOqPGxxWYCtaVC5QswYbzE8ieJOsQVPtWajmzzUYezn2
5jbfY9iOmX76huUXmGwn1dTq2AFkR937rvILBsT0FPQj7OGzIi+TtccvqIqu
lXrD6gjkElKpPFu/QLLbJZf33n9gItui5XzlN3ymFhOtiHGC1HLMX9TzN4T8
F8mzyuEKR5U5Wo6eXQfKzBvxvsZuoLqZfe6W7Tq4TZOxcSY9hYgwx2j1pnUw
ufmIUZPvOVzN9VtL9NuAwVdcbxctPGA4ao9FZG0D+MatKap1PMGygoW1Sv8P
RJ0676UX4QVRiXOODoqb0PvlbwXv5RcQ5vNguKl6E45f79/7NfACDHLiZKLw
LXjpFeDiz+oNf3a+K4robkMFm3nB7RJvoFcPfyv+cxu2C5ENrnuvYMdJ7fQl
7x2wWfljWxrjA0JaB1WdTbuQ+rory1feFy5vG54odPwLkzwZP7XHfUG9xoTq
Kv8e6NwzsljieA10bRaBDfH/IGhTNqWo6jX0rXJQCFruQ1Mw04y3sT98Ve49
NS59APJNLYbnkgLAhWj2xPs/EoRPSuq2Ol8Q8L5U3OO+S4YYdZ0IO9MYBD15
Rcu042RItPUP4rzFW1hVLKL1MidHqImdqZU674CtaMP07asjSAp7eT1vyjuo
3kQqH7NRIJhN+mzAn3fALzz+waSIAnlG9YpLNyIYJt973uAloUJYbzmgFfPB
8OBd0yk0kwopSLxvxHM5BBaZF6+fNKRG1uRl49YGQmBi37r0v56jiKnjKutr
1jBwoNL9Z05Dh1wiD3HLswsDnvk/4WJ7dAhZiOTISGMYMAXTjzlsHkc+fnGN
EXMKBz7qheTGFyeRxwps/+60h4OWaLzGczp6RK69wsCLJwJYF7yiqGPpkeEf
5By93RGwl7excbWVAUlzTfX4J/gePGk+BMk+ZEScqVUm+bzew4FG7Vrh8VPI
Kb6gBFfxSFCqW5j9YcmE3DRm4eEI/ADtFCM2uRYsCPtaibfyzAeYbP5eeFaG
FVl6bjBnLxsF30bs9D+fOIP4xySm1i1EQXb3rR6evrOIrrAi1QpEA63ME5LQ
WjaEv+S7xen30dCpPWvEW3IOqRsQEXyoGANkCm+Uuqo4kFDzztehMTFg7zzd
Vm7JiTz4Y/+jbD0GSnJXHIr+cCIHDIUZJxJjYf/UYKY8Oxciq46KfduPA0T9
QEs+mwehHpsJGr/1ESbLr/taGPEiA9Y+q1RZH+FUKNenOBY+pKTOTDdLNB72
E1L2KWL4ES7aQmpMLx6cTc+MJVkIIK+1qYv7veMhvSefUUhWENGdTmclGY0H
2CVdmNgQQioF95rDqBJAxuZXT+CYMMJnf8NN8FIC3H32e4CtQwT5c7A6rOWf
APFWBt3bjWJIyDmpmBSZRBgcnrDTCb2A7Jr6qMmaJkKOJsOvS8IXEePMgb2O
t4nAnRq2fLnpIiJx1c1gez4RFlxuJxgxSCLvX7TSvWFIgopy99bpSklkv5mt
4rxCEszGXHYgPJFC2nUr2a+HJ4H6Je0jT5akEcn4k50TVUnQ5tWXm553GYn5
buzhuHS4Xtjk+XsPGeSh05HJWDwZFkbdH7mJySLUYSoJa7+SgZytgVP+uzzy
V2bqb8KZFJBbWGn2GFRAVsZcbmvjKWD0sPr4fSIgPfxpxwrCUsC8Iszrv2UE
aWgDc4vyFDh+h/cSrROKFNkPVLHMp4BhwtafX2QYEldK6fT0cioYXMsfkRbC
kWCjuC4Ro1RIPBE2Ml6HI94U0sLjfqnAfze+yMKUgFjdNJtEhlPBT5a1uiRP
EZGcqVWldP8Eq7ZjnUeClRF+v3sphSmfQK7L01j1jgpyRnT9wLLjE3hTS3Z2
casiB05c31o50kAVWS+07rqO/D5bcsJdOQ3CXIW2FnPUkNkqzYdi9mmQ4z/1
9VnkDaSFxosjuCYNfth9omtwv4mUf2Fxw36mQf2fNsldeQ0kRyend53xM5To
5tgzVmsg4XETr2+bfQbsba93R48mYnRRYeMsdTrwOcYdXBTXQbQH+tTbJdLB
XNryB0e3DqL07NHn53rpoP1kllvC7RYi3BBjOJWeDiTqk9+Mh28j7NaSxSE9
6VB123prKOQOcvJkGyNhLx1q6C7acmvqIpt6f5tSb2TA75Y7Gt8n9JDF/RBu
XacMkLTr5KzLuYuMJgk9P/oxA2iM9+gu+91Dqpf1LtmsZQBoZYV/u26ABHoV
xV4IzYSgA1LNz+FGiAefxvZ0aSasUr66/fqsMeLQ+l0rbDYTrlg5nE5MMUbu
MJ2m3pLKgtyrDmJUjQ8Q1ZLsB2mGWYBYm65EGZogcveVyvV8s2BmkOPm5q4J
wvX5P4eywSywWbT2/IiZIafU6dofkWaDhuBVEYUVM4RqPZmfQygbetoJuNJH
c2RJrnfU62k2/G3ZI2IMlkhh18Vr19i/gHeh1AIdao0ELS4piyh9geaF5Nws
FhvEnOyTKv3jL4dzP/rJ1qYNwix5Vn2k/At4OMmaGzQ9RlbU+m5WzX2Bh0xC
O99LbZGZvMa0bsockO3Nyn12zw4pbfVKLxTLAWs2gonGA3uEf9BQOB3LgQVr
qYKhn/ZI6OzVzJjbOXDK1EUiydUBsf73J8vreQ40G5oIPk98gpwVf5h7vSMH
3ljJsiqKOiE+V69dVJjOgcZ2xsbiUSfk9zWefInNHLB7+CY2KtgZaTEa/8rE
ngtrZ63zbtC6ItKPSqWoL+aC54/xGtduVyTRNbJgVzEXPASNvtXHuSFuIVpF
E49yIdNOIcRT9RkyHyd+pdsrF3I1ilZ1hNwRrQzakrrwXLAVfy16iv45IlTX
UPq5PBc6IuLnxDc8kOE/spVP6PLAztuMLenYC0SJjAUxP58Hah8E5C2jXiB5
x/9U6UrlwdGnJ5YiRF8i/vxfauQN8sCY5WpGubE3snkpEJewz4P3Nn+J+2Sv
kAeIVR3Xqzw45StSf/XzK0RWj7uBKisPKuyKD65R+CKpZiTXdqsO+XbJe61K
fREGh7HGpd48eMZ0IVHE2Q/54f++mbiXB2HLDdnKJP7Ih7Jj7dFq+TBSehDJ
YPgGOdK8cCPIKB9UQEbNWikIseur7/B0zIeV01zob6m3iPKKR5dZTD7INEtt
F4a/Q77u6mvq5uTDSVHljhWWYISTSrZbte4wb89Yfyk+GNnm2OgRX8qHlnEG
S6vSEMRUhKjDRfIV3jzWQWJvhiJdMtl9p059hQ+oboLZQiiSpmk5sHP1KziX
q55QEghHdF+ODtcGfAXyAYN677n3yMlJPhGLhK9gRl7FNpEXiTTL2bvTFH6F
UvNGLnbfD4jsJgWn5vRXuFliIHRFMRr5raVhv7H1FRwpHmUFi8cg6V+iat7T
fYP6nakjTedjkbNW4mbjMt9AjuPt6Dj7R6S33rXAS/0b1MaLFvMxxSOBXHVU
vKbfQONm9ul7H+ORvRHddOu33wDbXEjur05AxtVfrG7PfQMZrd/0KXgyEpHR
hsT8/QaGlaEJTb+SkZvUp0OAvgBOupck1aWkIFXVGZI+cgXwgDIm9iTnJ8SF
ffOVoFYBvMkjF2qZ/4RIPEUG2iwK4ARZja341zQkQbLPlTG0AGimg41mTdKR
u8EcrQVpBVAxZeiXqZSBMKxYsd2tKIAjJFHe9BcykRef9iviFwtAyWt+sPhc
NmJ6RuCIGFIIjzjvsJ4Tz0XYnB1uEW8VAuV/ru5NNblIX09ZqqN1IfTp5o1Z
3stDlN5oqpRGFII/6WlTyZh8ZH8xOsowsxB8l3wZiglfkQKl+Z+kNYUAiRHz
c7+/IvwkT4OUlwshNciIcc+oAJnUr5/4SVYEnPomkdfPFyKRxScuvGUpAiOZ
00UnFgoR6ifJPX14EVQoafr3vS5Gfsy1s5hEFcF3weLkKZ5yJBFjeUiZUwTX
P947qcNRgdz9+KD0c30R6BsHZ4lxVSKtulsGa2tFwMzD85sjoQrx/oZ+CaUs
hlAeBWEqiWpEjiGQ5DJbMUQqUFiX1FYjma2cSe7XiqH0cyhBeLcGMRWw3uA0
KAaX9r4XEFuLnHv1TbHOoRhu8i0KtCvWIUEKqgs0ccXg9UvMhiGtHrHNfSIa
uVEMhJhNj66CJmRFbqqnmboELt84udL2rBmxaVJ3+8tWArwUebZ/lVsQywnB
RkPFEghLLKwt2GhF5h++f/ROrwSM0jPeZvS2IaabR07VPCoB2RtBTxNL2xEj
ukkj3ogSOOUgQe36sRMZj7xBdSe9BC6E73FZqHch+jylWX4VJfB0R8SdmtiF
6F6N2P05XwLx3CzmX6aJiIaVWlje5VKYfvjX59rVXqRjo1h29nop3L5GdXB3
rBdR8+SfYjIqhR9yOmOe3n2I8nsyMVe/UkiUNoj8NN2PNHDZ9abHlALl4mjI
vw8DCCF7zG00pxS+dfXhJ+8MIkh9USMMlcKILQc978wQUqHB99h+uRQqgiz+
880bRuRGQ08lkZaBrqzHZQu/EURm/bExpVAZ5HDVPbRTHkMkzvP+bXMrg6UN
Mu2pt5NIdmZIwn5QGZx5/+vy21NTiIgMibJEUhnM7RmSm8ZOIQI3R8JCW8tg
l3XLhLpsGkkdVr5aP1EG/IKVqee0ZhAe84KpzfUyqCqQkJtbmkE43YPF7rKV
gw7txjHuC3NIHPVBb4BEOQh2Zp1eGJ5D2MJsnpYTyuF931GRf6/nEZaMa02c
j8ohxLedpHb7O0I/9M/4e3k5RKoF3ig99xN5Z2pNzdpdDkYlGWN/Nn8ix9cG
s1Xny2GyoTttr38JoaH6+jfreAVI3mp0Uc1cQfxCzidOcFVAobhQCHniKkLJ
/laZ/nIF+OPl4QU31xAyqYfhjvcr4JK2BCuv3i/Es2rgauqTCmB3zr7FMfsL
2b+uOD3gWwFZNFeWHZ78RnYfcIpfzamAVAX+hLyP68jvd/1NpKSVgBxcUUy/
uImU2eTCLHMlJNWENCWsbyK+yoEFDSKV4CXbXsNXuoWwkWDJAbqV8O/av5kK
wx1kfoTt7OPHlTB7t7RP5eouklO4FazhXQnpOhybmhx/EUXbLA+mnEpYSBIz
ntzfQ05e99vcqq+E2zh9+OruP2SYz+TR8EglMFay/3pzsI9ctg3M6iSvAj/r
du7uYBK0jQ+LDhOvglixcuuDVTI0N+xL/yvZw3jgM//HMHI0guwcg7NiFfy+
OLTVp3AENR7f8tO7VwWD8VRjbckUqJKaWZ2qeRWM3HjGs25EiYqUdB9cta+C
WW41MnduKnQzPMuJ3bcKbrW+DYwuo0ZHyM/mnQipgjLry5QpoUfRKnu/ZZLY
Kkh12SX+tadBA26YmM7kVUGoVbNtsCItyknBqpU2XgXk+TdplvlPohRPfN58
WKwCBMKLDL+eRH9Mrjf5b1TBm/Ux5XBFevRbWQc8oqmGxyrP1badGNAoIbmn
hkzVoOX6bvXpaUbUM/JzwU3Oagg7c7DkUM6Iqjp6i16UrgbaVP4zbmeYUPHp
X5bcaDX0X5ZaXSYyoac07iefUqsGdp3iVzFvmdEJYdmzW8bV4KE59tCbnQV1
nFmlLntTDS3of03T786iepoGhKzIargTJ2Lj7cmGKlS2eMQlVYNMaoaYiss5
9Gh0yqZncTWs6etY6XlxoCvUjBcd6qqhOVewO0aFE+118nxk0lkNR+PY71wa
4ETjtO7NKs5VQ+fax0+bJFzoy6omjstr1XDfI/8/l1gu1FJM+p7A32ownXjb
pArc6CUa+m4a+prD+6T63ehQHrSpuqGyU64GKGOD4+9786OpbXuzb67VwGk5
x/QjNwTQVwMXadS0auAnH0eYHpsgii3H6TRZ1MB29kvunU4hlHO719XHoQbu
OZWmlX4VRg/Ijn0kuNfApNbX5XMJImgZi/NiVUgNnNHnZ2gKFkOjuLOOe8TW
QF2GWGxkhDjqKjZzST6tBur9bl+k05JApQk3nxeXH/KzVpqIPbqA5tjyM+Yt
1IA7TpxTG7+EBrkZyNit10CS9GxAl68k+uhVqIHYfg0ok/9x3pWWQoWiDz6l
M9ZCdtaWP/knaZQ6Vardkr0WZNJFt69ZXka/51j/5hOshXDKJu1/4jJocsOA
XJJCLYgGzD6L7LmCviDSPTBWqQUn9nfVv77IosajuC+HTi3YTRSRJYVeRdl/
fyFGW9VCGoJL0DjIo5Hn/MzDwmohyMcigK8ZQZ0EKgK0PtbCKrOMooEuit66
tJFzMr0W1FaiJ/WWUJRBxehvYGUtlEwq/lXmxtE17QjO6y21sNWvRhPcgKOd
hm2KR/tqYVxk44KqLQENdJR59+pHLUg2sB9vJSqiDz0ef8P/1IK8Z8LNjQAl
VMU/eZiUpA4ynkePa6pdQynjT/I+Z6oD4UhdM49JZdSzdaHYCamDX/7bZZP6
aqhhP/uE5PU6CPP/GTmmfgOVn9I5sn6rDk5esDn5U1kd3d2sUre1roOIfY9M
PmENdJB064moUx28PmJsyPpNAy2kFf3w07MOPP5FH0nBNVFHrg8zFhF18IxL
yYTXVgvVEu2k5ks45Fdh8bGh1UYvyFCIzWbUgSF7kd+vbG105Ya9i1F1HTx0
K3xjdeQWauWqQqe3VAeJ6xbetzfvoOln6Q0MN+vgMXFEs/erLrpUPphpQlIP
T38wOsm56qGPySzVHp+qBwpXF63Xp+6hOcniMU/Y6yHgQrp318976C+lrZ8u
AvWQl6zA2tisjzoG+AS8lKsHTPVjUmSUIVogqj7ip1QPbiS1M9Nv7qNbnUzC
QRr1QFzqiDIgGKFup1JaIk3rQSFX+dSR68aoR2zt0ezAeiC9e23ieIAJWgUB
evkR9bDhzGBhzWeKkk1rfS6KP+QX1yKJbjBFvfmmlWu/1oNa+DPS48zmaEPT
58iminoQTUVKEurNUSpr+4X2pnroXjS/8tnNAvX/QuI3OFoP2yoMeM0fS7RN
s2lgbL4e3Fm7gsXKrFC6jbf8M2v1wPSdTbHO7yH6ToajcflIA4RsJNy4IGWD
hlfLU5KLNsDdeYnfnZO2aL8JxW3qyw1gdbqi8pytHcpC2Z5ChzYA9weBnppf
dmiUqr4iy60GIP/zeUuX3AEdXeIOP3e/Abrnia8DQhzQc29/znJZNQBMvHWT
4HuCxve4eYu6N4Cx9d2t+/cc0en/sN6Lvg2gmeboL/nPEeVmoeGRCW6A/ZSd
6BPJ/6Gp+h9qsZQGWKP0IbiROqMZc4Vkuu0NQFOnHNt14Iou+XpoGQw0QKIe
445HhxsqJnQt8cFUA2xOaVtEJT1Fcx73o4/+NEANh5jAuLE7+vtkXLDDQQN8
MJnVdrj+HL2UbzblfLQRqtrHDa7JeaAFWxueL841AsMJUwX1KE90+0NZly9/
I+i3knxWZfdCr8h5c7650Ahd7c81jVK90DJPxqr3io1g0uObf7f2BVp99OJB
5qNG2FmUDDGQfIUK6EgU+rs0glKHEGr68xX6Lk7M1vJlI1zv4S6KSPNBjS4J
T3B/aITsg7NDt6T90CZ3wfekyY2gt/vUXYvqNSrexH9zIrsRoqT59+9OvEb3
9Xkqo+oa4TLV6UXvlADU/BOXs0tnI/i87xXnCwtE239xit8ebgTZiA7xHv83
aIzPuY/0a42gSev7zDL4LSqbw+zhd7YJSLZKLQYpQtDE3VOXzfmaQD/sZaRl
Qgh6VJFxFb/QBI81Vl9dxkLRwaET9w+UmsBwKlBSOSwMRXiOnx7TbAKd6Vqu
RcVwNO0xbWeJfhPojjlivv/CUWfyo+Dk0ARjmFR0gMd7dPwG1Za2exMUsyp6
GapGokqRFF8u+DXBb3lLemq2DyizKBnHcmwTFBV4Krf3RqFfb//dN2luAve4
aHLmpDiULWGnAO1tAuqbcQq+GR/Rlz+3HnNMNMHHJ0Ee9obxqJbnxvjwRhNU
3DWAJvcEtKTld0TRQRPIOZIcqTmViJ5n+qUeQdMMLhXqS905ieja5+UKTc5m
eK95zuTndhKqu/HTSVy4GRqszmrcTElGKxV+iNFJN4Oyf/Xll3dS0KCe+bim
682g2lh5i7cjFRX9N/EcnJvBqe+SgTxNOhp2bVz63ItmoDgwzyf5mY7uBY+u
7AY2QxyeT6/bk3F43hkyLEhshr7Wu1UtpVmopP0Ac1hWMxjnnQuzLctGo0v7
OuyLmmG0xyO2tP4L+lCjW0G0oxk4p0aul+7koN1RXZs0Q80gZJmkhAbmolfm
OrIXZprBjf34ViF3Hkrt1sqevNMMmaZ7rtwP8tHUpLr9M7wtIPUo/fbu+QLU
7pXOFIi3gE23+yBHbwF61WK21vRKC5hnOqITAYVol9CR19k3WoA7KOP1FG0x
GkUbZt1zpwVMxrYmXvQXo6Yr3Orbxi2Qm5vF9TS1BN3JxRkxpxaw867mVrhb
htaF9vwx92yB3os07U8UytGg/0wGA/xbgPZJu1a/YAXKdeVlbF9cy+H85TZ9
dawKVauq4bdqbIF33gx0ewI1KHOiFk0QsQUgiamev7QGnXo5vZQ30gLeeNWR
Jc1a1OkaWd7eagtkFJrK9bypQxHBkLDzu4d8JfUF+KV69NgxLmelI63QyJbQ
9X2sHo3vQOXesbTCul515hO8EX2YQ2T/xtUKBkfOCObvN6JSIcakwyKtILUW
1dFX2YS23PJq4EZbwTrw7MeXOi3o+miVRqFVK5T20hWcbG9HKyo0Lo0+aQUK
TQPO1bIO1C9+kon0eSuclHMG3a+dKJspyYhqSCu8lRpPvz/Whc4rviu3jWkF
Mg9NYDcjorn8nPFhqa0w/dvD9vwvIqr0E8zGS1oBmZI578ncg55s77xGXt8K
ice6YrlzetCR7PtCAp2tILE7Wx6t3ovaOXis2s+0wprV3bTUqD40aqfClYK2
DeQMc2gKnwyipiPq+kLMbUCs1wvwlRlCxcvHFW5ytgElk46UH/kwWue5T/5B
sg1mTEeI05kjaNCDoPlyhTboFIg8nxIwiuoS2JunldvAICH+saX9GLpMpRAk
YtAGr+66K/ZpTaBFi+12mhaH+DOXnd34J9EXrQbaTvZtcC93dcvz8yTK/Nad
pepVGyAc+tG/i6dQhLk8UTu7DY4E0WTznZxFj4Qz2SoWtYGTVOyKVfYs2sT4
+Orlmjboosz98EZzDr1Jz9F7pr8NAouYFOg/zaMM75zjaSfbYF2upKJa7zva
f7zLZn+xDRYI3q3r9AuoIa0XxfS/NvDbi4oOCF1EuQKGiD1U7TB4h/K6msEP
dO7oxbh6+nZAqRUdCaI/URuqGenPvO2Q6ftjPH5yCX1Kpmhpd6Md/A/IXpje
WEMVvGIlH9xpB4Fq82v/2tdQMpJNEh3jdmjdOOcYqPUL9f+X+uHyf+1Aey+U
lNbyN6r+7MBM0KMd9pvuEuV3fqP0f+9cPPu6Hcr3//xZCFpHI7epW/dj2qFY
Mff5laYNVN/Z+P1aajuUac7UCtj8QTk3i02mc9phtMnlAi/TJvpp/eFefV07
uNPwcM87baEFK22ib5baYdk7OuLS813U7RHv7vPNQ33VS2riN/+iCkvuDXYk
HSBx1tYnmm8PrV8Uu69zqgMsbgMesvgP9bP0FVZi7wBfYgWbb98+qvZ9Yuuy
QAfoBc8pVDcdoL2z796dleuAy9u3FDenSbBIk0V9OqUOMKojmxayJMX0p1HB
g5sd8G92FnH7RYrNTPyunjbpgJnTyo0/T5Jjv4d11j8HdMCi2nuuOR8KrEAv
qzI6vANuvlRx+ipBibkNUgS++dgBz4orVSsnKDHS/gIe+/wOMGub7xVVp8bq
dE78elDeAUwsx39/pzuK+fVYlOs0HuIPFJ/49xzFThJZbsuMHNY/s+9KsD+G
9d605xKa64D69uk35Sq02PuO5pWzqx3ATZV4ZVqADmNvc/M9IOuEdEZ7W7K9
45ho42hRg1AnpF0jvz7rTo8xr1gvv5PqBOmZ/0xaGRkwEqa/5+8hnaB/t5Sr
MJsB633AGrB6qxNUVD4dU91gxCpep1UWG3UCf/d2+PWPp7C0nMsbL6074e7W
6wRKDSbs2f4tAxavToicbT5nW8uMmfPOBU8HdILjF820lz6nMQ01x4bMiE7w
/251hFODBeOJChFHMztB3klqhbjFirVJdZI+HOiE406z4vkfz2EF+obSktOd
8MjMtjoklh2Lf7n8cH+pE942Gu3/SuLAShYoHqqQdsHrpPGP6XOcmPizG97Z
lF1wNPyEkKvTeSz5RHgcI20XhPILfuGk5cKCpHl6xpi7IOmcjWyiEjdG3mK9
jLF1wYBncVDPT27MxSCfKu18F5S2PQkJjODBHnhjcg4iXXBx1alT5x8vJtVt
lEKJdUGJyuLJXiZBLN0srdL6WhfMKEi/6FgSxNh3Voe61LqAkKRx/W+LEEbN
6XE8+k4X0GUpps3GimDu+Q0CJAaH9RaHB7lCRbHfSsdxsweH/MFZFRHvxLDR
R7HO4o+6wGdDvzhWSwLTJJ0LDnPogstmj497jktgDWEimTvOXcD/9I0Yve0F
LKe0dLL2RRcw6B3Nnoq7iHkfHVbRjeyCr84ffTflpbCdmPOm5bGHfJahd0g3
pLDHElbPuZK6IJeXSZ4nRxrTvbOdt5TVBdQPLVa9r8pg7T+gXTO/C26rO7hL
HLuCYc99vxcUdcF/hlvVnVNXMJEUZjav2i54e2KybCj5KpYgYyg939QFcr+P
pFUHy2HMbSka1zu6wPHCQt97H3mMZF3yFdNQF3gL/2A7/xqwXkR75fNKF9AI
W1D27aHY7seZ2Lz1Q79uur95EYhh5w+e3Cjd7oLlLJeiDE4ce1weltlGRgTk
ZpY26R0CFsbGq99HRYSLKZ/qXHYIWMnTb8fGaYlgPiW4TJqgiFHJ9j9cZSbC
U67yuKUDJUzsg/mZ7bNEOKNst5VYeA3T2d5sJjlPhBu/Hpee+k8Ziy84Lcgg
TITVr7GnZ0hVMdlLet8lgQhmT8XSX1vewIxCFiPkCURI0X3/zk5bHfP95aqk
pEIEbJynLkPxJtb7JSrljjYRdE0fvn4Vr4HtHhe+ZaRLhNsdA/M6vJoY5+PS
I1YGRMi3MWZVydbEHomMmrhZEAHPE7LhbdfCwgJsGF/aEA//992TWibaWMmP
vZoAeyKwPOKbFd/Xxig/n+OKfXpY3/GMy1vsFhbPe3+y8i0RXkqbOinT6GIN
3qtvm8KIcMRn7L56iy62POMBxA9EENSsZdZ6p4fJJsbHTScR4azpp0FG8XuY
EekF9Z9pRDAw5DkvTa2P+RhV/1vPIgK9pGIL+4I+1sM+rU9RRISb17+Znis3
xHbdHWiPlx+u/4d9Sc67j3GOkZUx1xBhUVo47McdI8wmmvusQBsR1o0/C54y
NsYoWcyGVCeJQOiUUptONcFEnP/4ac8RYdJBa2MYN8W0+1/J6P8gwsJxHtvi
OVPscPi/f7RBBG8az+B6GXOsYV36mtMOEf5cvyGk+MMcW9Jq3Hy+T4QHgtyB
6gkW2BX6hVvvqLvhFTPVQQ6nFWZk50Lxga4blO68LjJftMJ8Oqm/JTB0w469
ceL9oodY9xvBU/ls3ZA9y5Y1a2WD2dBYd/dJdMMweWx64Ek7LLWcuUBVuhvo
dJisu6PtsAm7mg+VV7uhxLLlfaewPaY1wGr8Wakbnuja8IffdcAC/esJ7Grd
UPr19qv8HQesXt5eIFSzG565zhhIxT3BZJKbVp/pd8NEgtsvjm1HzOGOY88v
426QM6dd+JH1H5ZBw1lobtENRhmSS2NWThi7vfNzDYduMESMHzL+ccaOKPDR
8fh1w1BK2XHq+08xhV/Etcg3h7Eft4+22jPMOdm9ly60Gx5Q1V5OQ92xHzR9
0Vux3YDTSWr5KHpgPBWeHjZJ3eDBO8qmKeSJGdiLmEyldcMCyKJOBZ5Y18BL
odb8buBBTqTyjXlhNAHix5HibjhR8COcwuUFhiuM/PpacYg/tirCzfISK0i+
WBzX3A3pE0KlREtvLMZ+6prDRDfYsrQ76Wn6Yv08b4S/z3bD1IXWCs+zftiJ
QZkT+j8O/ecOifRc8sNeKLzrV/zTDRnhidY7Sf5Y2a+rJSW73TDY03xh1T8A
+5P8PVacpAfIROaVCl0DMctjYMZ6rAeyHH7OddoGYYkVP5SDTvaAsq8hxRfn
t9iIfYQIOXMPTGhkzigQ3mHqg8vrS5w9cK3j3V16k2BMMiXmRZV0D3i3Ppu6
PRaKPdZVNpeS64ExeR25oNdh2KdjGyrpaA/EfXkdF3U1HDvjcJ0+TK0Huik+
P97PjcB0eLc2qLV6IMiSSazK6T32ZjBx0P1OD2C/mQqEsUiMBHY/WjzogRrH
dt7F5Q+Y7O+Ul6MWPYD+efbqa0cU9iRF00LzUQ+AnEQVW2E0Nn/ss9hVlx4g
HpMl7fgYi7UO3ik/HtQDb1NyHygsxWMvhr8zPQztgf4l3nzZZwmYzKjz4/rI
HuiQSGYhoU/EkifeczxL6gHrW1t3/VWSsLtT/C4DaT0gbeBZnbychJ2cKey6
mN0D7M2zFpfeJ2PP5ge8Fot6oL1RJc7ybwp2ccFimFDRA5473hl2BanYwuLW
xfjaHjBAKulynD9hOsunZ2939MCMfen5dLrPmOjGHaW6mR5gypfzaHiTic3+
+R7HsdgDGWzu5UWeWVjUlvOW20oPrN87d6LiaTZG+fd92oWdHuDnfeAVoJiD
le3xk77Z74GFu7rP/nXmYA77hXoL5L2gopxsefR+LjZOOkjz8XgvaCV1/g0M
yMPCyC1Ndhl7QVmjdeq2YD6mSrFdeou1F8jyBm7cb8vHCqhZHtHy9AJy/EX2
BNc37O0J3U7XK71wbZ9DcJK5CFOiX+DvU+gFuwTihf6ZImyPwcVTgtALMb+r
2WIKizFL5sgL39V7QWx6Ud/LsRRjZxHwx3R6oU+V578zhmVYL2vRdKxeL8xT
bzI73yzHkHODoTqmvWDjcdH0lWoltsluufTFqhfk9L//MBKqwjI5twnHbHth
nz+n+md+FcbCw7JZ7doL4wH6bBO91dgvIV1d8be9wLyuVZKhVYeliSzk+If1
gs7mnY3wgzrMUMzl6PyHXqgSj7WAvHqs5UJkSUzyoT8ujRLhgo2Y5yUBxu3P
vYBTUyFpK42YtFSRtfaXXsg4qndauaQJS5QZZKMp6YUeebqZ4+YtmK6s5X9m
lYf6DKl+piu1Ysflttur6npBO1qdrEKsDXMDFg/nzl6g+ycYoMLcgWkr6U7N
zvbCM3vDYhleIlbCeKFzZrEXKtsp/NmziBjX1NHy6ZVeMLnv4HXlSjf2+2lp
5OR2L7CZNGuHG/Zgd1XCfCb+9QIV+S1ytu0erJr5keM4WR9UvvINNYnoxd7l
smuM0vbBv4BbUu1Tfdj28y35Efo+aE56LqTwth+7r9YlPMzcBxjzhWE6bAAT
++5FNcjZB4ZWFHuORYNYG9tcRY9kHxzcPrC+vzyCSf4oz+y+0gfl6yvFJS2j
WHRhRBRRoQ90RnsD1rLHsIdayk6dyn1AHRP5tSFwAuvmOG/acaMPTvFMm9rg
k9iV5R3Ndq0+YI5Uddepm8So/TJEW/X7YMx82Ve+ewqzu+V9tsW4D843zRY/
vz+NDXAZHG027wONI45+HL+mD+fD8bkGuz5YZ+YtPMY1ixHW7WNqvPvgUfjU
07iKeSyzStW/+nUfyE/9yZ5z+I4xBnG7VAX1gb+/Tnu1yAI2LdCnXRHZB4rK
glw/cxcx1c0stDy2D14uYH/D3H9gubU+4mWJfaD9d/fMm5s/MU9DmWMlmX3w
62JW6gWqZWxBmH6nKLcPlsheFistL2M3dxbnCwv6gGv0vevT4RWMPSy65ltV
Hzje4e0INVvDypv3XXN7+6Asg1LzlM9vjOf9gEXOUB9QRRHW51nWsUDTnFtf
xvsgUctCRzFnHdM/ML6QtdAHG1NywdLLG1hdmyxH5nIf3MjJHz8V+gcTjmKk
y/jdB+GJgZNMCpvYrmT9QtreYX7XjpkneQt7QBbX/4m0H2ZWIl/53N/Gmjud
6lIp+4FiOeVSAecOFvlQID75ZD+kKamlS3/bxaTjA+7E8/RDetnlLg6RfSyn
2sP1mFA/1CJMHwfFDzDhmSfRTuKH+YOhQD52EpyTT39CTbYfPAvyeNVkSPHo
axqkRdAP3MNKL33aSHFmKwI3t2I/2Pxd6yozI8OPZYpY7NzsB7WkeNWWT+S4
Tzvna9Nb/bCQ9iDlr8YRnGT1VEbn3X5YfLFhPnZwBN+88G8lxawfGoIDU51t
KfHJwnYnraeH+HPSou3RR/F7Q9WR5Z79IHfe/ry8Cw3ev/utRMCnH34qx0Uy
6x/DW+Xj9vff9cPL77nWVFfpcKX7IZwPI/ohMOjYXLL0cbzK0wfri+4HieVW
tEj2BF5Q+9gnI7Uf6iMnL+Vnn8Ql5h6kMWce6ou9xH1DgR7PoLzT4pXbDwnn
z4iXdtPj8SpwXLesH0pyf+ClNIx4QOeJiCPdh/3+sJ67UMaEU/4iL7Id6Aez
6+UCqs7MuCfD9tDwaD/4RystZcqcxp1uTZ7L/d4P24N+D0Q6WfA1p8Nvefmw
3pGgxZJkVtw6ssnY93c/mEThxc5eZ3CjkZwUg3/9EMko7vOfJhs+spfc2EQ2
AHW4uL2M4jn8NvuHxUvUAxAR2p8sirLj1429RGkYB2Bx5lWFmSAnLv1d81uB
wAAsEDyuhjpw4TnUSgPnxQbgkXTxlCE9Ny4sJLsTeGkAMj//eez1jRvnfMQl
b6IwABzBfxK9j/Pi0UHM9zvwAWCKNpivr+XFmXNovK6oDEDyCQ4zDg8+/Nj6
77oTOgPwwKgzd4VaAPc59X3eTW8AhA5cG7oHBHAS6RHqecMBYBvsr8nIEsQ3
XWrVyqwGoKOi+5+orTA+uR/aa+kxABd+Cyy80BDHaZe6Apy9D+uhMd8XeSVw
mSE63Of1ADCrxPa++CSBv8v3zU0KHYCn3BRvKQov4GXxdZZ5kQMQ/Dw38oLi
RXzhDSlndewA6GT6J3cPXMQRy6dB458GoKy+cJP8mCRuc6tIcTlzAB7TFYpO
ZEjikdifvb+5h+tJX9yt15TC19hsrVnLBkDSeK3sVpY0nkB8oKzTNQAnMvKP
KqVdwTsqPh486BsAzyspRyWcZPHdjNEC++EBgCMGMUGqV3Etn9u8b2cHYGic
+5YblTz+/EnoaOziANBbSFE4rsnj6UZdoZkrAxDzJtCpdFIBJ7uqStayPQD3
bt77c8IGwcUEfIsH/w3AsYDIsZFVBL/LVGf3nWwQtOvOvGx2RvG8VfmJI3SD
UJnVmf82DMMfJF8og/ODEF/d+zyDQhEPCn78RJ1vEJQknuo9yFbES55nCBkI
D8JApK2sib4SzqDH+8FNahBYfpwWX2m6hisoPdB4LTsI78IYLhB9lfGHlz5S
RcIgCEdHCeeoqeC1dKxO31QG4csJs0/ci6r42u4t0Tr1Qdh9NtXAVn0dZ1sI
me3WHoRhip+XRj6q4Y41tNprBoMwFB9C8dJBHedxJpEQdhgE0XR7cdsrmriG
qfz3K86DUJRcopFRq4k/03SLU342CN94REfktLTwXuENWnOfQdAplDReeqaN
k7BeqHMMGIRIeTFZbVYdXITy8dOX7wbBumBSOaFEB/ee/L4YHzUIg5/k04Np
b+M57TwJXz4OQkxS6SOf8tv4aImxbkXyIGzwFuhTOd7BJcNHGkayB2HkgOyK
8W9dfE6lM4m59tBfmc2NrCv6OE8A/9vgpkEIfPJ9/Ym4AW7a5uFG2zEIC/Jf
qSNEDfFpdQlNsqFBkD6TTUvDZYSff+cn5z5+WG/g5HvvbCPciDjJvz0zCA6N
MvcawBgf1w7eX14ZBHPmu5bX7B/g58IXFy03BkGNgevSOL0Jrt+P9s3sDMIm
l4HOz0ITfET3d8bQkSEIvlLmIsBkhg8aaOvVnxmClH9Xz7SyWuKnP2YQEM4h
GKX7sJj60xK/PUkuUco7BD8ifjOm1lnhvQ++UuZKDMEZVXLpo2+sccZk2t/C
0kPwWM/s++ozG1xrznQs9eoQiFoFBB44PsKJFkxfY5SGQOalh3bRc1v85OdH
H0+rDYEmccbhqbIdrvGj3j9Ecwja/7SUEvrt8A4bJ2M//SFQvVd33pXEAW+x
Hzju6DAEXwbusEqGOeJH88V3V5yH4JCRYHbtP1x5w3fOyn0I7u2K12STOOGN
TjJl9/2GQGpnu9PIxxmnLHr3afjNECQ8OX8go+2CK+0shNwKHYIPqdST1Pyu
eN3TD1bX44aAUb7nP+9ZN5y8/JdOQ9IQ1H1tqvvS8RTH9lUQ9PMQpFaLsndX
PTv8v+8yX/46BE9pHxUxVjzHy1/dq+NqGYJYuc+D+iFe+F5D/pfYziEwTCOE
Gwq/wOWoaaNZ+g71zrslhjW/wEv8y+yPTw5BWQ7Xcx1mb3yn9ZTB67khCPgj
HSNf743L0D1SPvJzCP6YutSzur3CC96e49j9MwSnqQIkn2364H+6/qP57+9h
P3O/H9tW+OKSDB1/VkmG4UXOjzLxN354ftjztrljw4B+UXKlRPzxnA8TrsTz
wzBAqm93lCwItxFkG77IPwzWrqVCHmRvcYFiXdkwkWHYUFnWq6F4h38cJO7e
vjwMtFSbgpfYgvG7lsfvFckNQwn1FtPj7GCceVu1lBUbhho8odJfMQQPOl33
dFRtGMqtE0PpX4biqp9IRuW1hsE4l8+qRzAMp7wsL/fxzjCcspp5yNcfhj+/
XbBn/GAYosPIhgGJwB+Fp7l/dx4GqfmiLyP3P+ACvHNjyu7D8GbpzWihTBQ+
+/W8QvqLYci/G2lJZInG9Xuj9m3eDMP4Sp5owWoMzmI6YNgRMgyeq2cekn+P
xXvXGSvFI4ehwu+GRMh8HK7G+Mbjd+IwvHYlujR5xOPUSc0T2mnDkCvNGdlC
m4DXXaREvmUNg1iSUq9XXAJ+VcuDxKVoGJ60Wi/kdiXiQsH2Xv/ah6GZZkqw
3zEFn+fMnjLsGQaWHH92aZFUPDHnB1o1OAy3BPoI3xZT8TNdJmQvZ4ZB6cWU
yKxzGt5/P/7B7MKh/2ZF46Qqn/GQ1dEaxZVhEEz/WnXmfDp+9MTtl9Q7wzAs
y1Iq9j0Dr4sLmbHaHwZD4+sXP/Vl4p5inXgr+Qj8XRssZmrLwrdvKB8JOj4C
fwwXLL4Tv+ALgbKvGHlGgOIY3UwOTx6ezOY85yg4AmE+fGhVZR5ulJmv2C82
AjXsoT179/PxgVYRyg9XRiDJ6AFlTs5XPOSelfmuwgjYn+CJfWn8DVf/mdJw
jzAC3u8THiuwFOANNBy+7DdHAJFEQCqyEH8Rde+7h84IKJy3Q0eMi3AFochr
U3ojsJxSkSB3sRgvUKGnTjYdgb65Sn/WhRI8xY/8taDbCJjLlUeQf6nAGWb9
not5HOoJ/Ur2IKkS94Tjjpe8RyBg4ubNrJtV+N1NlvvyQSMwfirjqu+darxR
M04HCx0BFuQdkjxVjUtmcateixyBNOv0K3R2NfgJUzEpzcQRuHGrdkctqhZ/
VpkvdPvTCHz9dMHaWroO/3HmCue9zBF4GLIkbTZQh9cR8WNmBSMQgSm1+Ag0
4K6gN+XSMgKZOcQJGtpmfD5qvN+9cwRqt2UVX/U04zqbJm0vekeAZsLrtmRC
Cy6W9bgwcPzQv/Txwq2bbXg09UZm8MwIrLIMvn5yoR2nNnVNjFg4xOvd4lln
7cBnzni/if89AutJ8U9sSbpwDaejL1O2RqCqiZJ60qMLryAGuaTvjcDAsbNv
r5ET8Ui/DyZfKUcB8/Aud2Puxm9sZl9pOjMKgZf2tHkdevESTUnxdo5RqBzM
bNk91YcLZBXzdPOMwmSZGPNUWR9OZlp3YlRsFOyYX7e/YBvAbStVKKYujcKx
wYjCkN4BfPRM5+6czGF+WdRXP2QQLyQOza1io9C0GJbZxzGM84jeH9m4NgpL
F9y9Z1eH8RC/2a4dtVHwSWIwsGkYwW1gtZT8zihcXJYaK/Adw89nHQk5bT0K
C2IuIgk5k3gQtb8vm90ovL/I+i9QagrfMznhfv6/UXDs2LKIrpjC+8+csRT2
GAUDLp6O5LFpHHf6aCDhPQoTwsI1s09m8Bwij7bU61Eo5PlPi3h8Fg/wE1eA
0MN+XMR0lbTn8O2Zr5cIkaMwc0u6ju3fHG4OsoIqsaPQvfmo7WrmPI5sEk5p
fxqFoTparX9nFvA/Jnd/mJeOgldciLQ7/MSdGP8yDlaNQpAl1QVG4SV8syZa
XqVhFOZu5NDEsS/jm+fH3gkTR8H0guPQJ/ZV3InoXhLTf6hXESkaYVrDtzzZ
Z+lGR6HibOXnlfg1fHvi/uW1+VHoGgt01Kn/hbu8JTE2XhqF9lSTuR3D3/i2
QoJ/969RoOd8X9P57ze+Ezs99nVvFB7zs5ZVX9/Ad++ZebsyjMFd0ldKR8W2
cLdjlNk/To+BOEo67rC5hf8tSR24d24MSBLmZBLqt/E91gUhBYExYLb5rCzj
uos/a/bT+SI6BlyIHRWb4V98z0XwOeelMeg9Ll5VorqH/xt4SCRTGAPTFrRE
Wm4ff+577O8TfAwk19m84tEDfF86k2dOeQxuzt+RXeUnIeyHLzs3ao8Bw+SI
GQWBlECiY8ceaDUGO1ZL2wxF5ARPcnrlf4/HwNHfOPDdgyME0vxc+8eOY3Cc
YVSsi4GCQMawXqfhMQYJ9xkcDF9REl5Uh65Ue4+BlviRCiZlKgKZvSTLJf8x
GBLaDjSipyaQd/1nzRQ+BgvPt+giio4SvD2Yw32ixoC8LF51O4KGcES8sGLr
4xhUMaqhY8+OEY4EbdMPp49BPGnIDSkjOgKl2tOiuKoxsMvwQ0waThJ8/p6d
PtEwBj7TBs42d+gJlBllx7xax4CQN5R2b5meQEWzb2jSPwaIhRsxQoCR4Fcc
59c7cuh3E9ZztYORQG0FeYpTY8BnxrHv4nqKQN3kSSGwNAYhf6l/Pp9iIvg5
nxf/8GsMxlyzDLPimAlH+Wt0abbGQKFD/Sk8OE2g8SHPXCIdh+zKYu9H/1gI
xwg+Wrmnx+FB2065oz8bQa7Slr6BbRyynFitI+3OER7L6nUNnx8Hh03tnr8G
7IRuCRH1IyLj4F4XV17Az0k4kslEx3phHKzehJ39+5mTIM1/0CoqPX54n7Kc
1pM4T4g6161yBxmH0DtWdEsqXIS2yFJqG8VxEHbRaTAd4yLsM6Y0eqqOw45a
VuKL/7gJxjQuiuk645CUcaGB8JWHILB1Dv1nOQ6VJ9t+XLPjJ9x1oCJheDwO
jsEU8tdEBQiBy2sVfE/GAY+J9pddEyCsztTKabiPg6qlZ2yFnxCB837WX9MX
42DZ4r6TbyhM0BqOKHH1HYeBgJ0I86sihIIuK5mk4HEwW2LMGD8qRli4rr1V
GDEOAjNqpMx7YoQzjXIFbdHjwD2DOa78ESe4l5+Q3EwZB76ws3fLSS4QCOnf
xFVKxmHlUppeDFwiOPF+XDGoHIf7H/8T7x6+REiL98tyqBsHLm+rtz/dJAnH
3t8TjukYh+6VwWGLFimCHIPij5yecbhD/874nJs04fEbsc/1g+MQuX21/J74
ZUL3S1L+1enD/fg1OMaXIUM4cvBjjnxhHG61/eGjd7hCkHbrTWZZHoe1GjNT
AFnCB7tPXNjWOHh/SrC6tHyVYGRwgz382ARkSL/WsogFQsig9NjnkxMwY2N+
TUgdIdRpc8ZUME3AiEd3XjIRIfCrrrMucEwcvv+6//HPoQTd+tHBPZ4JuFoj
nvTkP4zgjzS8pxeagKPtXvrXaXDCivQHpquSE5A5w3HxAkYgcOa96L15ZQKM
/3ScCZwjELREbUJNFQ7x7p9kaYMUCd+4gT5IeeLwfDhvwr2qRHh2co52Sn8C
TqiFVQZsqhCEhvOQUeMJaAi3zi2uVSUMJXk6DphPAHFBnV3+/XWC9GW20Xa7
CVA8ZSx6XOsGYZbkx4nm/yaAZL8pqu6KOiG0pRCvc5uAuq6nFxMFbhLWDLQz
SrwngOP8JcN7QRqEOP7zE99eT0Axjw/5RXpNwo1fKwy5QROAzD5KZojUJKR7
+7t9ipyABOvHLxzytAgmGdUqYZkTYJV3XvbhuVsEhv/eur/NnQDJKom+a3W3
CFUKBrn+BRNwQ+Mll5rdbQJb9zaLV9UEqB5d+WEzeIfQEt2g9qx+AoKiCj6O
h+kSXM3CPJ1bDv0pVA86f0eP0L8tvvCodwIW6M9Z9i7fJXjX/DtrNTQBLLSW
Ick19wiXAltvmo5PgMm6QwBlnD7hHYdF4d2FCcCpUsU1rQwJqkpxPtf2Dv3c
PW1wTMSYsEclbZBAMgnFVzRFqvKNCb1LbFvs5JNg8O2qbQo8ILwo+CF0hnoS
Jtgpa31MTQh60cS69zSTMMXoyd30z4Qg4VlkyEQ3CU/MlT7VRZsSxlV8Qk4y
TEJ7y+P2V/NmhG9ij0SCTk1Cnezmt8hQc0Igo07DsdOT4DEcZUSuZEG4OnZ+
l5JtEm7PMor5l1oSIu3Kjf/xTsLcI311jRVrgu2t5L9uApNw4e222bFWG4KS
bED4ttAkaFyMHY/IfkT4Q67XvC4+CbTtDGTb/raEtgUwsb84CQqkJZIcmB0h
uZ3v34rkJOwz9D+IrrEjaL3fkPhxZRJcLpYofOi0Jwg+G2mxkDvsf38s7K6+
A4HEuMZ0TmESRLSkFB2XHQhfhN5FTuKTcLrJnP3qOUcCbYUwycCNw/jZRSJb
oRNhWY3zq7/GJNx8+BBhc3MmdIycslTQngTWy+8TUnAXwtudf50pupPw15Un
SeanK8HO7/dLvXuTUN1PIl/U7EbQOP39Mp3hJPAmpIxmfXlKYJDq+uhocsj/
fNX7X4g7Yb22TlvAfBJU482Ext89J/RqFVONWh7qN62TxN57EMLtEm3xx5Ow
7e790WDCk8CS6QgMrof8F3tQX+QlYUfWar3+6SRwUzWNt869JAw3G3xyfT4J
o5Qcl6PfeROivyudmHo5CW1ZRvsftl4RnjldrQ3zOdxvs4sPRb/6EPQpJJyV
X0/C/Xy6T4zOvgR2btaJL0GT4E5x1y//5GvCQS5dqEnwJKwjyfjE99eESYTs
2umwSVCRtz+HNfgTEgx/Zj//cNiPtCDZpw+BBJ6o8uc3kidhQwO7c07zHYFC
MO8i6adJYHoZ9Fx87B1hvjB1/uvnSTg79I1x41Ew4VPfW3W2L4d4WXOhy3Eh
BD9Tb7Ku3EngzLr2vwaqO57r548TIZFdlJadjOwRXsb77lNIIiNZKZRkh6Iy
IoqIiKgoRYUUZSSpJCoqIbN89sgPXyup+H3+vMe97p7zLkjYIpc4OhP7LLmO
yydwb6UJNZdQl/Db9LNxDP5uCur0t8gjVpe49txsHoOWwADXN7N5xLiWXarT
yzFIFbc9YvE4n6iy159obOPu91q98jUvIHakCbSkfRoDnhmFe6kVRYTEuj/h
Zj1jkHhMbmo2r5iYvjupPNU7BqvdI0IPXLpB1L4ZyHQbGoNrYtHNslm3iKtO
XVarR8dAevPANd69JUQU+dVcyw9uvnPP7vIOlxCGyw+8VOhjMNQ/mgK8t4l1
l29JDDHHwLRewP5T0W1iQf7q20zOGKADAvTMnXeIJtMzmnOTYyB7KG+l3aUy
wjx67783i2PQLOBcyhdeTswHseJ2/xsDTvev3QUaFUSNT+Ji9/IY8GP0d9VE
BaGwu/bXID8Z2s0l7lglPyBGzO2jfQTJwAOXxo65PSTydOmztFVkSKmN+6Kn
W0kIya+bnlzDXT8TeJ70t4p4LV4TdlKCDJVDaqPR49VE3Mrdk4tSZMiea9/y
k/qImJg4Pb5SjgxxXWd5FOdqiN5X3xkbFMnwpinkBlOzlrj8LMa/VJkMp+v4
Nx16V0uQHorTVNTIIL7jdfM9/zqi6ao1WUeTDHTShIzO46dEVPqwT702GT6w
Mk3bvZ8RmmejvpvpkiHZwti/Q6KeKAm8N0wyIsPit7je12kNhIcneHSZkMGt
Okxk7Z5GQmrfwICTGRlKGw1JGeuaiFRT4X4vKzJsHq94Xv7yOREsGvI50o4M
LlWlol5+LwmVFYJ7f+8hg5TWhG+rVivxY/5W11lHMmgpi4tCTSvhNPblfboL
GZYe+pxKfPmKEOkL2i3mToasohb+C3teE287+TquepDB0Oi00L8frwnjWoO3
t3zIULT0rapTso2YLu+2UfYjg0pIaGNQbRvxsDjw9YMjZHC66aEoceAtsSm1
8OXTY2TgMIyFxevaCf4D/xo/RJKhzLIiPqOqk2jZk2+8L5oMl35m3RSIe0/E
WGvX98eSwd/q7PK4wweCs/1QHfkMGSQPuT7qEu4iyrYs6gYmkIE88rJcb6aL
8JLJfTyeRIaVwfb2o5Ru4vNSW/WvC2QQfMq/EBH8mbg446V55iIZniLagR+T
nwkb1vzDFZlk0ElS8w+M+UI8+6J2XzSHDGuO0f465PYQxWUZdxSLyTDcuaTr
tqKP8LHRM/txkwwxslaMjoY+QoEy2Hu9lOtPQMxM0Ml+omKzqoBkORm6uxpY
sisGiOMtXTe77pNh1cRYX17PAKHlFWWUXkkGq/wgkvKDQaLu+qujPE/IsLzk
ERMZOkzEmBzlba4jw+E4ca9arxHCdGDN9Zh6MqjqXTEV2j9KtMp4fpho5vbl
55HF1R4/iI/Z85qj77h8TwzdIbPJRJb2jfaC92T4yfeoIDyFQjh12/js7yJD
14Ja9C4VKjGw+kr2hx4yjEl7tifH0oiiB0bbLvRx38fKjdd2qdMJ793fX1kP
kCHotaCaDIVO0FK3zzSOkmEoXrSz4AiTKFfuuXRyjAx2ar0LL7RZRFBbrJIO
lQzVxvGkd7xsYoq33aWCRQbWzeHymOcc4l+8b0P+DBmYK+4Oe2dMEK0bBPc5
zZPhzI5zO8vzJonzTVVs0d/cfL4GPvjlPEUILyyuT1kiw4jL6QXPqP+IrvzS
WkteClxM+H1kavU0kW2wy/4vHwUa37dvqKiYJtZG5p2JXMXdL6OlGk/PEIMS
Zmu1RSig8UB4a+itWaK4hlLNWUOBwljOzxSnOUJhQnvskDQFbPqfsbZ+mCe0
jr23dtxMgRUfivNlRRaJ/wTDh1crUCBqcPmK7cQiUXdvXdQ7JQrAuT/9agN/
CFPakbsW6hRYO6ck9OvNP+Jf0mqLRQ0KdO57JRXZvkS0bn3S/1SbAuY1Lz/V
flkmsM+yoKYBBWa/LFoO8/KiVUt3S1hGFPgXtdk+I48XfSy2NykzpUBokCsD
tFYgp6HCoA2WFAh88d8u71A+5O2i37XKjgJcll2FBgLId8OekoY9FBB3ccmi
TgugQ2T/yEBH7rxVVuHpZ4LoyIlrcm9dKPAm9anqsX2rkL9ezXikOwVkBXqT
dbYJo4DfHS8VDlJA93LaLzWh1ehYyqJ/gi8FMkIk5YpHRFCQnZSJ9mEKpHhm
BxX0iKJgCQ2R7/4UiGnZZfH28xoUcsPryc7jFOAXJS0ciRRHUU9bl+ZPUiBi
gHAeaZVE0XGDX+7GUoBR/i/9sa8UirGaLtsfRwFFm+p/Ayul0ekuRbsnCRRQ
N9p/oc9XBsXlmm06lMzV92s7Y9W6tSj+gMt/YqkU4GvnaO79uhado6deO3GJ
Ahvjxv6NeMuihIe3guQvU8AxaadyjpYcSgpvMP+QTYHckcIrOivXo/P/2FS1
fAroW81MyHdsQBdl9uyglVDgdma3/bWHm1HGsD9f7h0KfF4X/vSV5xaUWXq2
3+oeBdLLxwQMWVtQtmZN/K2HFNgzG0PXE1VAV2Y69jpUU2BKsp4pWq6AchrJ
Cv9qKMD5cFtDECuiPCTV6fGMAuSoM1cEryqh/NUaxasaKaAndPpYkI0yKvhC
hDY8p8B/NiGiZQvK6LpXtMzaVxRodzwQfuSkKio5OXjoywcKWN2zujn/Qh2V
7pzWT+jm+t+utpJSuh3d5l0tpP2FAteiSmcPZ2qgu5lm1Rn9FNi66zSxI14L
3XN2Sdw5SIEa6Y7zKxK0UYVcyH7OMAVO7ztWaI53oAd3by2SyBQo0GQUEL46
qPJ4Q9c8lZuHcWWt56wOqtL5UnKXwfX/j86yX6YuqnmxgsQ3ToGiuaoyarce
etrnn9syT4FXJp8yK64aomxeRR34TQF/nDE9TzJCQZpj3S//UGBpRYdqH48x
2pTiIfyKhwqf3auFZ5JN0ELNugorPipYDIXqZTmYop6RXvR6JRVaWueMozbv
RKn6exPfCFNhjDeGn9Jrhnx9RTYTolQY0k6w/dpojkwzOpvbxKjg5Oeb+v2u
BZqg2iy8labCkcigdVK2lsg11zi0YxMV/Ns371x91BrteDknsnsrFQ5uT12n
v2iNhH8+edCpSIUT4rFZ9Gwb1GKtyXivRgVT1lRo5EcCFYRwku22U6GOvWBa
FI5QxPXyrR81ufNj2bGUDRipTG/16tKlAs/uUhSZQEI8m34s7jGggsDD13yS
O3ehod3FBd1GVAg9vvne6T+70OXStb2fzKjw4Xcc2e+yLfrluNquB1Ohqsr6
6jSvA+qJ72A57aaCftjeZNMpB1RZkZL61Y4KQWXVWQz6XuTLw/O615EKAQeu
vd8+64hMNV74uDhTYcP1rU0fTu9D0u6n//W5UOF+13xlwUon1PFo1vibBxW8
HQswqDmj28OP+928qGD3YtTTu9UZxQuGRg34UEFuYN7fwGs/2uHDfjR4hApl
Hv87cPuuCypY811lJITLv9haY+SkO4owLWrzDKcCZ53+nXXGB5B9gLvfaCQV
jJyuhB3g8UA8LT03vsdyz69xYtbcOYiG2Fk7feKoMDVzrUX9nCeqk9kz+OMM
FTKk/vlEHvJCR0+8kyYnUUFtSotju9MHWReef3IohQrbBP4m3ZXzRfJvrRwp
F6jQIBpheLbQF32Wb75EzaBCm0L1Q/27h5DJx5oVjHwqmNj9dLOdOozkb8c1
FRdSIeqnwrRB8RHEE4sjnIupcKxG438/9/ijDsURcmspFZKP7Dqe8CYAVf6+
VxhTxsXbzaa+uxCIsj6F79Mq5+bn++vtQ6ejyDVO8FVRJRXOJM7Vaf07hkz3
9cQ6PaLCiF5KPhoNQhtVb+xY9YQK5WrBlay244jWo1sSXU+FsGn2r8GHJ1CE
uve5fa+5+Kqn3gtPhSFXnm1GQm+pcMf+kc7apHBk0j8z0fKOm4dOy4iIXATi
SUr31uiiwtk1AtKBrpGI5rZ/LfUTFYq+VnQq/otEHZqbuwt7qDA6zK999n4U
yhqsMxccoIJvjoznJ6loFPHo3NyLISrs3EBMbu+JRq4ptlVRo9y+qjbS/8uP
QZt0xuQpFCp0JYf+LdA/hSrTVv9t/h8VKp177g+0x6Ns7/7ayCkqxHwKX/e7
5QyK1C89rj5DhfYbun+jXp5FpmOGw9cWqLB4W/On44kEtOkZb67DH67/j/oU
5xYT0IqMj7Yrl6ig4W5x3zszEXUa+TVF8NEgFxIuqL5KQpWimhHbBGjc/6bo
wKhfMsqm/to2JkSD1gcoeaXweeSelVm4Zw0NOk0n7IOOpSAGoyFWTY4GHdSC
I2IRaeh9c/KOHxto4Hfvtds3Ih1V5Tiw8jZxz2+Ufdmw6SKKsqC58SnR4Nzq
sb4W1iXkLv1IrEmFBkd3R+kfGcxAZpxT78K20aDF5Va6Uk8m4ssXM/quRQP9
qrxlsdEsxDg+NHFVhwY1RVkrmTHZ6L3V3Xt2+tz5s7ypjJVXUM7/TNc2mtBA
/OIpauCOHLQFBczlEjT4ErrJU63tKhpJ6IuRJ9FA7EpIyqbjeaigmVgs200D
ms8bMed1+UhCX3H5qQMN+MqKzLcmXEPdoTmJFvtooCdlbihlXoAuPuTlf+dM
Axnbl3tnlwvQCsUxoQF3Gpz+F2lGFFxHLd57L/kepMFyrYHAupAiFHe9RZTt
RYP55tD5EttiNCtxQ3LRjwY6+tdna2VvIjqPh7z8CRo01ecK5AuWottmnTfL
QmmwUmenQ2J2KfKONd6qGUGD9LDB440bb6P+ybUqFjFc/R9WXSxCd1DO9tSK
9lM0eKb6cTFz7A7aGzinvjeeBt6dpXreCWWo4/tXbd9EGiRXPGww+HQXnV9v
84SVTIOXiq+WLp+9hyxdn+iHp9LAVKlFOkivHDV2ZZskXaJBrJTlDvfqCvSg
eY9NWR4NUnHxMpp4iAIWmt9qFNCgaOZDen93JVLU19j19DoNpiLz86OeVaHi
h8J72m/RQPZZ+JcXRY+QO/PUJ4fbNLDiVWdO2tcgaUX2vm9lNHDVQeeXPtWg
zOvvXFn3aaB7cGImj/IY2fYbDoZV0sAu04zHL+IJEpC8d/B3NQ3+nVfXfiJQ
i86mn/cVrqNBD9XTNdy8DoXFWgVptNAgbI+dRxXzGdKoqxmva6WBSvG3gr5b
9Yg1uTnU/A0NNG54nWr3akCHApciHTpoIH277NqLn41o050T8/3vaXD/6ikb
5eYmNPR9JNaniwY7jtumyOY+R06uz8+E9dDg5wrF/066vEBrctR5fvfSIKnZ
1cvBqgV96CpMSvxGg6DbI0uX9V8iAsVeyBmhwXeezDj5wlZkoG9wpY5Bg5Is
um5+x2u049pahx1sGsRpDZzK93yD1Bd/CVf+pIEcaqYrzb1BW1qbzt+ZooFy
cPNAvP5btF6x2GrzDA2iP7xKvDL8Fsmknlm6PkeDyUjju+8vtCNhe8vYnEUu
/+ng6j1T79DKR1sN1vyjQaZjif94ZQfikeSbTl/m8s9TcjgQ2onmvr09nshP
B80HKtKuAh/Q2GE7n7A1dEjjPDpmlNSNhto15MfF6dAsuf349YhPqG/bmsFA
KTrYLru26hh8Ru8nPzv5yNJBzi4nPN34C3rr9ERseD0d7gZtKTZp/YJan+Z+
dN1Ih41zBsy19j3oaZwrdlCggxVlY9Jo2FdU892I770SHVT6H9WuFu5FD6zk
WpEqHRiiZwanyntRieCIibkGHVZmkVpOTvehi7mHNDUM6XDrTN2GtvYBdH7e
mlNuTAe9Dd53/qYPonMHlMoVd9LhRCHN28h5CEVtZm7ZYEmHtmVfHLEwjEKT
Okbzrekwuas3o693BAXR71+XRHRYvy3MmbdhFPk8DJYWtqXDdcnRT+m5P5DH
GocvKfZ0SC08qrcdj6H94dqXeffSYZ6wqfJvH0O2RtOCv53p8Gj8YPvnHjLS
fxPzh+lFh+8Faf5Cm2lIW+VAw2FfOsgP+7FyXtCQerrpyR9+dOCUexUv+dLR
5r3/JvoD6dBw/P4V6XoGWv/k+0OnIK5/GWUOYkFMJC3TerQ7mOs3Dz8pQ4GF
hIeTKG/D6TC15vT352VsxG9x5JZVFB3cNnke6AzhoOUS5Pkimg4LHYUja+An
mg0Q6q+Lo0OiaOlZwZlx9GM6s/NOCh3wn+gThm5TiLYcX+KSRodNNlrX1lOn
EEskOEbwEtdPVRmPysj/0JSKrfLxbDp42Z3VP31nGs3qmfyVz+XiaSicFLaZ
QQuWal+787jroPSGKeYM4jkokKhbRAfDc3MXYqznEP/ROTfaDTqM7qdLxi7M
IaGTNK38EjpouAg0Xq6bRxJZr0d+36XD/06bJXyGBaTw5qzxqxo6eCga8b6v
+INUPp8Qi6ylg37BRrmreX+R+qgnQ+kZHeh5P5x3X/yH9H6ZXk17Tode2cmb
qRnLyJhf/bhpCx1e71i64rCHB5tJyFmPt9JBsfbExOgADya2/5rc204HByct
utISL95lzGjn7aRDuKtMi2bBCmyP+m7UfqCD3bMcwsuID7v41Nqt+0KHH7oW
xpQUfhyQG1r+fZgOjY4U7WdHBXFQiffZ7O902FZh5rJRRwiHVO1xsSZz+6xF
lzfmWYVj3m3nu8egw+/hyT+htcI4vnf9kBubDlnkNWUrC1bjBPKqx6vG6WAp
6qljeV4Ep/1hep/4jw4rutZMPoxagzOEvhlsnqVDQH1GWcApMZwt0y7yZZ7b
p1Wv6oNtxHGBdlmT/l9u3olftl/0lsD3D/uu/SvAgJ9uRc/7Pknh6rC9/6ta
xQBvtedO4aek8ZMzFm0+Igx4L3WX3aAmg5uuyUe8kWDA/Y3uU2KFa3FL2erd
J6UZoPSaJyjFYx1+/Xhxs+o6Bqiwo6UiFWTx+w8DXRflGUAxph3Ib5fD3QPv
ysw2MyBAfrOH5Z31uIf+LG5iKwMeT4yH2V3YgIeXr25zUmUA71JITXLARjyu
ty9FTpcBncPSRjFtW3DnPZrKDX0GlKS1m4LtVnxPLrZjixEDzNWHb+v2bsW+
yzdXq5kxwD3nf01b5xSweYRu1UMLBmyb3SJ7OEMRr6e/ddC2YkD17CRxUE0J
f30/fsUQM8BGcXelYKgyrjFP0GvaxYBHOaNVwutVcEaNVJ+5HQNcQ7Zu8Xuv
gnG+qSxyZMB+3vg3jTvVcNOhtJvOHgzYFFecLRSwHV/r3WD5zZMBz3db/L5t
qYGjSI/IHj4M+NFwKl1UQRNrafYr+R1hwEaqm7XWohZeXXKsnR7AxTt6Fbn+
p41Zkv8Cjx1jwIET6VvkYnfg2wuKD8NCGLAzd3BqKUkHnztebz8bxgDQNN1S
v0YXe363nYiJZMDMmTHp9zd18dq2cJ1zsQzQ8cr3zPioh9OzXtZnJjFgOuit
R56fIQ5Y4XxAIoW7f+lBnraMEbY+yVi8eoHr3+L5Lx5dRvivh6hFcQYDdkd0
7l+31wQPdpX82JzFgLDJ6NKVcqb4maV+4p0rDOg2FhMHtikOUznY9iCfAR5i
2i1eN8zwnsIJf61CBuRX+26rTDTH6iJJgk+KGKDB1lSVPWGBaf9V2DaWMICq
Iz+8VtMSu7+Y//zuAQNcXqlX/9ltjQ12XIywq2LApUnpZOawNZa8s1H60yMG
HPVIKfCJsMEf0wi3/joGnDkm8iG1isD3/3xbOFDPAIb3b2aiE8KpIcevjzYy
YOxPsFvpX4Rhf84orYWLh0Wzpn1JWP6d8rmjrxjw0dyROL1hF14wadwy/oYB
hULLpj3Du/CTzWOHZzq4fUCPmVUhtljlpyaH9ysDhPx8S85T9mARoU93n/cx
oEW0VdqV7oBnlMIOnRxgwK2B1avYU3txq/eTAdYoAxIG1R+8ltiH78U5X709
xoAPRUFrrt3dhzMLZvd6Urn86hqbjls4YY8ew3efWAwo22l2u+2cM7ac/JaU
/pMBfT8sJu+o7ceqIqcsbCYYcNC/5ZXJt/14Fj1/+myGAY6vT2c4Yld8uRHK
biwxYPXryDc8EQdwVP+YjxsvE647nzjq4+CBD84kbpDgZ4J1bdwVXd2DWE2z
Lef8Kias/TVHNpXwwmts/R0sRJhwsH7Xh18i3nguQEB4YQ0Tgo1/UYwlfPDr
kl2Jx6WZ4C4gc8X4ui+ueME2U17Hvd/B9hGv+iGcNXRx4bscE8wcM8UqWg5h
T+muUKfNTKjuCUgx/OWH5y7s8zZRZ0LCeI+30wN/PFI2LTejwQRZ45dHZv0D
8OtXuX2V2kyoPWgSNKkaiC//6bPfYsCEqvVWBt0vj+Io2RihISMm+L0du6Kc
fwwfNJBtyzVlQmT8rNmLyCCsFuqxU9CSCQVb731+gILxmow/863WTJAUDWs7
b3oCz1UUPzmNmHD5fbh1uVEIfk35vm3Clgm0SZVbM8ph2NP1sGyfCxMcmi43
HomIwNaR/L2X3ZkgvfefnKpkJN6WfTdr10EmPDifK7WvPhLPdzIFmn2ZwKbs
uV0geRKPMNJenzzMBKEfZbdlO0/iN3zqZ7UDuHihJ7TepkTjbPPgudvHmcDr
11oQJxmLoz1EH3uGMMFS5DttjhKLvWKqg9eGM+FPWlj9maZTWP3xFDU9mgkv
3dfurzwXh9uUTvaEJTKh86vLcOOxczi5vMn9bzJXX//RhBd6CdhanefHhVQm
+Ptn/bv5LAG/0r708+Ylrn/Xo+SYHYk44cnncPXLTNj0r/XsFfckbGmwduFp
NhM+fnMMbhtPwi2mpfxdeUxoiTFKdlM8j8+8YFx0L2DCfduJIP7289jMUkOC
dp0J3e63gr6eSMFNqH7jn1tMSJuaHj3blYrrHbsMtz1gAn1HaSD7SzqO/ir5
oq6SCcb7DN3ib1/Ehq7uNpaPmBCRU6ZYduoSrjtI3etWx4S8Qz/up5ll4sjv
av2UZ0wY+7i3u07tMtY9FOIZ0sgENZljrfvls3BNwO+jKS1M0BOI8g3PzMah
bItJ8VdM2N8rEK8qdQVrBZ8/WfyGCbp2bc9kblzBVeFiSbUd3D5LrZhWbMnB
D+KVi8g9TGBZViUKmuThY8tBW0/0MaHr8HRODC0PqyXVlC98Y4JRedx5x7x8
fO/CzjqxUSbYNlww+J9gAfYXTjQt+sEELXtSusj7AqyU2d6qQmGCeJX/X7uc
QnwnZ1+XOZOrd1vti2mDIuwnc825k82EV4tWLa8kirFCwcjg/nFu/2sueybM
FuOSG4GM4/9x+S+27a/+dBMXV5xZLvzD1XfKZXdNeCk+uP1NivISE65cClS/
vlSK11cLiTzmYYF14V33+azbuLA2V7ZjJQvO1Zcdz2+9g90NB286C7GgqiYk
X9m3DMs2blL+IcwCpoJ41Qv+uzi/5b7OvBgL9odK5ld63cMuVpP1iZIsSHlt
W+YuWY6l2/QtRGVYoLJTbnvDx3Kc0/nSVmk9C4YSFu3tnO/jrN6+w05KLHi9
ZJq2raoSZ5zNVPqiwgIs0G2ul12FL6oh+t5tLPC+VRptfboap8TXBezRYoGw
/ss3aro1OEklWPXjDhaESchS/J7U4ITPiixbPRYomGfoXzV8jOOUco/tMmaB
iUA7/0G7Jzi221b9nSkX/5QG6I48wdGxK34icxZMD2YYng+vxeEfw4NtrFnQ
ubDsqPqgDgdGOYZa2LNg1rkbctzq8ZFNQjteOHD1erMtfcUbsF/Hy6md+1ig
To0KoHc3YC957QgTVxZogG3KB68m7NHO0G1wZ8ECM8nsktZz7B52c8bwIAuu
61188HJlM3ZuEz2p78uCd5/8a/d3vMCOIW8Nav1Y0Fxzw2lLXQt2kD0zr+PP
gmDD/veG5S/x7uDxGO0gFvyNM09Y29OKQfrDafUo7vm1HE9enjfYrCVp5/1o
FlQOJ/aH5L/BpkdN/6qeYkGiX9WuZJ02bNB8/4zyWRYkHFHNMoh+i3UDDlmU
JbCgKLQ+ccuWdrxDXG5ZIZkFOfsePbf/1I63H0lL2JLGgmPRH5rELTqw2hpL
q1sXWeAjJVu8/K8DqzT84t2UyYKbz7okvr/pxFtFApM35LCAJ22FuqrfB7yu
DqWuLWaBefBm0eCJbizt/Q/n3WTBqx4+cUfqJywp9FRQupQFpBi1GGroZyzq
qZQucY+b96n6WO3YL1hYYGR3dgULQsLmPp9d0YOFanKFxR6yQC8xTkfmSg/m
4+fLEKlhwSofvsu3nn/FPNVN9peecPUfmwofcuvFS24RosJPWdCPvlpwFnrx
74fky4JNLJC/tvBWwbYfTzq3XlnRxoLNNvqWkZqDeL48Jbi+nQX2w7wnZlYO
4aU/tqTgThZkndu6q5E+hEXK+v72dXP7Mq6MJJtHsNTC9W8Xv7BArXbvN7Xa
Ubze3vcJ9HL9Oyu+MePJd6w2ywm8P8iC9xm/HCv9x7D2rhpr7xEWBOgU/Pdw
egwbFp/cKPWDBf6XN/IdPU/GBMHzNZ7GAtj360XjMwr2vSpj4TjJgnXhLx5l
H6TjQNaQ7MppFny/+VfcWIqBQ8xKZhpnWbBDoLxK+AsDx9PU7ysusuBxY0C2
oC8LJxtPJQ/85eoNaXYp1WHjixlPvTOXWfDwqkoUEubgAn1L6V/8bDhhIzNR
8uUnvpW2cvKhIBtkgk+nf2sdx/dG3nf6CrMh5zqxdV3D/3DdeZdz78XY8MVm
4te7l5P4c28Q58Z6Nhw4G/RGeNM0/qa2463TRja4fFbb0Nc4jb/Hz90S3MKG
QvEbMsMeM3hcKcElXJkN66PjI/dWzeKZWLRDRY0NyRoVx+V95vDiR+HVw+ps
2Kl3ypaydh4LncxrJXawoUQ7nqxa+AuLdXoU/dZlg0+E+SWpIwt47cYt0dUG
bGB9Hpf/bPAbK719sF12JxvYydcOVUwsYiuZ1vyfiA3bMve7tjQv4V3HUsJL
drHhuKv8QdG3y9jxha29ix0bxDLbczcd5yF5+/fxvnRkQ0igYLLJRV6Sf+P1
kUhnNtR6O78T2bqCFCzqW6/myoatiQF/p5pXkE4/5QTnHGTDVbWhqSJ+flLi
qhoSyZsNAdoOVi01/KQ0r5MKf33ZULyMWyr8VpLyV/IM+Adw50cVOm8OCJCe
uMjYmISz4aZ6yP2fksKkHLFzrJeRbOip8W/9jypMiuhkZeJoNhxNaziX/Hw1
Sce8ecA5jg0bjZ0SNp4TJYn/Uj47dIar9/xAde7xNaSpmizFQwlsOCT+53S4
jxipRulwSEgKG3wv1hdveyROyv7+UWruApePeOIbtr4EKazAsDHuIhuUKPGK
Qy0SJG0RYf70LDY8EE7i9PyQJFXP1BTeKWSDTeD/+qQ9ZEiXq9aDejEbtmj0
q1muXEsKCTxPq7nJ7cMak6p3T9eSNIfdtFvusKFqYev5AlVZkkjeq17iHhta
4PTwTrYsadxh++kPFWzwLBpKnqyRI1W+XmobqOLqiU9psXPeQMqIPxrkU8OG
j5X3VDy05EnBhj1ijCds0JUhlRHiG0nbH9z1mKlnw1eaZPYl9ibSgyv2U6Kv
2bDB3ctcPX4r6aLds7yrbWww+N/zTy5CCqSglVt2bnjHhpP+4xL0AgXStlMz
KWofufnKHU5ofqdIEtLz2v6omw1zAoJHHAKUSKzx9s8GX9iw+vO22G+rlEkV
vtc32PSzYWVOxMNQXxVS2nr+V50DXP3NSto9Uqqko70nAhyH2bCrrqm156Mq
SXWX1WOvMTYIBz6/dthxG+meNgvHcthQrnXdTeSOBimVvW98aZwN15v3ud5M
0yQF3Hl+JWWSDU27qbW+J7VIyuuyRnJm2SD1pj30ke4OEv+XhUS5X2yYkLpc
l163g0S76Kda8psNdD7OdJSpDqlsySCiaon7Ph79esvrrEs633BrnT4vh3v/
TBmTrks6ErHqRRMfB/6da1AIPKNHUmKMCHYIcWCNs0nZuyZ90p2u5BsUSQ48
f7FF3i/SiJSh88fzlgwHPosenfcGY1J0XoS8pywH+GujjGwlTUi7vA4V9W3k
QOItd+UfXaYk3VcDHjlbOFDFT7kpWL+TtEHZcf1eRQ78+PvVTL7CjDQxblHY
ocaBWR4V+uY7FqRvjs/cU7ZzILpu8/dbVUBqrdOUtdbiwNZiCd5rvpak3Hj5
a8/1OPA1vREdSLIiGYssXq224IBdwJZFZz6CtDUsfP9xKw6EGZwrOvaYIAn3
sqTUCA4YFSqnHvNHpNGibzmluzlAz/Z89+sHJrUvOzh523Pg6dv1+6fvkUg1
h9slNuzlwM+CoKePonaRkrY/zb66nwNHTjnp+ypz//osDcd9bhwwn03l/SRk
R3KZuSO2xoMDaZJk5YUZO5La85zLF3w4kMquuZVG2UPqsg3LOB3End8qHrpL
eh/pWTXTzugEB3aK3F09WLGPVCLps3o2lKt38ercSWsnUsTQnosnTnJAYpVh
b0qKM8nT4u1u9VgOpNttVXDR3k9Ct81WMU9zoO2N1UX29/0k2aDtab4JHBBY
Ctmi4ehK4u2+TdqYzIGLucEjNpJuJI7OesGhFA588qganxlyI734LZTqfIkD
PFe0T/InHiD5pTOScT4Hvv1x4atU8SLZ/c/Lhq+QA6qqntcslLxJ+vv6VrQW
ccBeLpgaou5DEpRrSzQp5cChIp4zPyt8SVPxO63m73Cg//aATr/JIdLQ2BOe
2nscqHgaGFv16RCpsqL0nEYlB5z6B5O7hQ+T8kXkgF3NgaPSEV4RNYdJ58Ky
l+4+5sCO5p+r6w8eIa1uDDb3q+VA9aDoBWrXEdL/Ae0e/7E=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {0., 8.641748618364497*^35}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.664116752846204*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"(", 
    FractionBox[
     RowBox[{"Sinh", "[", 
      RowBox[{"100", " ", "x"}], "]"}], 
     SqrtBox[
      RowBox[{"100", " ", "x"}]]], ")"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.0001", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6641168010882444`*^9, 3.6641168117439365`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
QhpbYXSOmTyc5ivaVh/fUNTdCin2uM/rD19R+S+tVGRzrZDmkGDUnZyLcphw
eocwtgFTKsU4JWM+OqAlca6YrQ26JEbW3n/LRz/gSo3jPG1A1NQkihgWoCS8
dkfOSbXBw6dF6+q1hWgRs0+yMtoG5stZ5MIuRagN2acbNspt0CLFP1t9rRid
mmrwLr7fBs6LFIEz3SVoZPfouYmHbSDshXN1JJaimtVrjWT2bSBUfIRTwqUM
rYk7Ta3i0wZWbGRP8esVaOJ9K5+JnDZoaK5XlDxejZYVR7J0lbRBICHObD68
Gu1jaYyprmuDRybU3QFcNSh5E2d+4lAbXP7KxqsoV4ue5lFBwqbboJDf8UJY
Vy0q/vJ5q/fPNrjvqTum/7AONRLrnnpE0g7nHmvqTKbUo85++0/0adth6K3f
g+9qDWjQjNC2Kms75FAvf1rbbUCrw18zXhJsh6XtNqda4yaUi1RC9o9aOwhG
laJDjq2o9L3/GhbutgMVdjw5/WYbqp7/TmPEuB1EXw68nOZrR10fzpqXP2uH
2ZunbNHlDjSs9thGlns75Pt6dHeNdqJZZ6+5xL1tB6XPrRzNFl3oRHdYiEds
O+hw3Muof9iNbp2v5XRIbYfANuYM9rVulOHNaprZt3YwDZNicnXuQeVkFKuV
GttB/5iH7M+oXjTq884y02o7SDh6WtMeH0Bz9/idSHfawfrvRKR15QDaoqNJ
sUHWAZZ2J+e3rQbRv7TppwdOdIDA98mjbBNDKLPp4JdGrg64sjnLRBozjApV
kl8qFu6AYvNwrzzjEVTXTv9G9LUO0E/KVbhIOobatPv0vFfsOLzf+kppD4+h
PufyDVw1O2DHXuzgX+E4WjjKYG9k1gGXoiV0v/pOoicIlXGC/h1wvO8knXTN
FHohZun86fAOKKM4oqWuPI0qbJ8spPvcAXZye5tvh6ZRhwyb9pX8DlAzr0dX
Dr6j76g+6RIrD+vNlI3diZxBE/9r/t7d3AGjUdLVj67Oon2sPH/zxjuA2BH2
7eybOfSn1S2vpPkO0BsnEaaRmEcpmp2Phq93QCIFb5vE/Dx6+VWvwAvKThij
eI+vGSyiQbOeWqhoJ/SfcsotCvyJ7qQYoHTSnWBd/yfP0n0Z/e+J5MV+rBNG
lX/VHzxfQS9szNM+1O0EtvHWDiNkDQ0tqNoWN+6Edw9KWGua1tA9p4i5PctO
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
z1OtiCD8Z5MjZlmTYGH7jvS5ExHyP32VHgi8Tbg12ppw/iURzJmk3M8p6RAk
rtMpTLoQYYWB/MQHqjuEAzY/PwVPIozvchBtQ3QJM6+bRf6+IUKoGl/HXdO7
hJaf1J2ZvkRQ/xj68ZK8HiGsypvl+IdDfzvFY2LI9AkvhRvzmwIP6w1l1GSv
6ROMQqh0X4YQQbnp6LeUOQOCqIVX9PcIIjgc/Xf0wdJ9Qh2TB39uIhGoX4fd
W7poREhzqmk0TSbC6Fj2bfcWI0LAd9JHp9KIwCsQ63b1kTHhXqFblls2EdiE
ZByrik0ICHeVukTuYT8wLGz8eGhKEHh78Gs+jwhF9zy5VznNCL8MXaTUSoiQ
INx/UTXGnDDUVD5MVn7YH4argUzmFoRy8f0XBZVEWLXTrX0p+ZDgQ/Wy6mw9
EfovxsjJ/XhE4MxyUvrZSQQv6jcX9tOtCBRsxUuxPUQoZyK3LcyxJvxw336v
1U+Et3fmrzLctyEU3H7WUzJCBPbEqFFSZ1tCdGWBvdU4ET4lmGkHMT4luAtt
neAhEiGa1XnjWMpTgsq+/T3fWSLcv4wTvX/YEcTN8/blFojQJb+mNRBsT2Dr
3ohd+0GEKuV1jTrMgfA98enMnTUiSJWWtEKuI8FZxcZSYJcIIYGMzTrjToTT
669H0/eJQHNVR0EtzZlQHBqqdIlkCr6WFFrEvXpB2J4o4ZejnAK3S+cfnZR+
RQj3aA+uPjIFoSMh8UmcLgQpQSLpDdopEJkk3njA6EpwtKWc0GCaAs+pkQMO
dzfCiRNsKoPHpkDx7ie/JXJ3Qn6JcIk+6xTEf/47UefnTtgkVw8zPzUFyESc
BueX1wS7sMhbr3inIOhAsk3yqBeBWTazjExgCkIkMgIECr0IuZOVwj6CU/Dq
5KdY1PgN4ZfgLFWw6NShP4WdMa3ehKD2P/ZsYlNQYVNXJenjQ7j0lPb7J/Ep
mGT3/l/D1R2OZRfGy45IKJGKklBkRhp3eM55K0JWRmRFISEioiRSSomkbBnJ
SqQkyshMSSjjK+8eLVtWvvfP33U/575+6zzXdZ7mH75O+NfufPNYjwwjpi47
m8g3CHEXIzV1AzIwdltX9FTHE+V8NmmVe8mwvqRHPfzuTeL3kbCQekMyZJSF
/D3tnED4jjTv7DUhg25qoqb/tkRiZcyXDHszLt8+uptXeSJRrMIR+W7BPX+t
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0.0001, 1}, {0., 9.529331158677029*^34}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.664116814338825*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"(", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"100", " ", "x"}]], ")"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.664116930512045*^9, 3.6641169407175474`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
aPixou5gOLGiPsDUp4YDlf1i56md4cT/IrLDvg==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {0., 1.7283497236728993`*^36}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6641169432737155`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"10", "x"}]], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "10"}]], "\[Times]", 
    FractionBox["1", 
     SuperscriptBox["x", "3"]]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.00001", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6641170975899134`*^9, 3.6641171203529086`*^9}, {
  3.6641171762127457`*^9, 3.664117277767685*^9}, {3.6641173470824127`*^9, 
  3.6641173959341593`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
r+VlNio36Ob8//k/38sb1A==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0.00001, 1}, {0., 1.0235031506733212`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6641171247907887`*^9, {3.6641171786664505`*^9, 3.6641172800686655`*^9}, {
   3.6641173529851017`*^9, 3.6641173985871053`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Sinh", "[", 
      RowBox[{"100", " ", "x"}], "]"}], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "100"}]], "\[Times]", 
     FractionBox["1", 
      SuperscriptBox["x", "3"]]}], ")"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.00001", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.664117534695468*^9, 3.664117577834716*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0.00001, 1}, {0., 5.72092223784149*^-8}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.664117542619318*^9, 3.6641175803854027`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.664117902576846*^9, 3.664117918681014*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"Sinh", "[", 
       RowBox[{"100", "x"}], "]"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"100", "x"}], ")"}], "2"]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "100"}]]}], "-", 
    RowBox[{
     FractionBox[
      RowBox[{"Cosh", "[", 
       RowBox[{"100", " ", "x"}], "]"}], 
      RowBox[{"100", "x"}]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "100"}]]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.00001", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6641179887039194`*^9, 3.6641180341873355`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
SlwZAyWfYzXX9s3j/wAvvrFV
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0.00001, 1}, {-4.05412415917944*^-10, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6641180133718224`*^9, 3.6641180372525897`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["a", "3"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}], "2"]]}], "-", 
    FractionBox[
     SuperscriptBox["a", "4"], 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}], "2"]}]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["a", "4"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"2", " ", "a"}], "-", 
        RowBox[{"2", " ", "b"}]}]]}], 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}], "2"]}]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["a", "4"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"2", " ", "a"}], "-", 
        RowBox[{"2", " ", "b"}]}]]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}], "2"], " ", "b"}]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["a", "2"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "a"}]], " ", "H"}], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}]}]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["a", "3"], " ", 
      SuperscriptBox["\[ExponentialE]", "a"], " ", "H"}], 
     RowBox[{"1", "+", "a"}]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["a", "2"], " ", "b", " ", 
      SuperscriptBox["\[ExponentialE]", "a"], " ", "H"}], 
     RowBox[{"1", "+", "a"}]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["a", "2"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"a", "-", 
        RowBox[{"2", " ", "b"}]}]], " ", "H"}], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}]}]], "+", 
    FractionBox[
     SuperscriptBox["H", "2"], 
     RowBox[{"2", " ", "a"}]], "+", 
    FractionBox[
     RowBox[{"a", " ", 
      SuperscriptBox["H", "2"]}], "2"], "-", 
    FractionBox[
     SuperscriptBox["H", "2"], 
     RowBox[{"2", " ", "b"}]], "-", 
    FractionBox[
     RowBox[{"b", " ", 
      SuperscriptBox["H", "2"]}], "2"], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["a", "2"], " ", "H", " ", 
      RowBox[{"Cosh", "[", "a", "]"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}], "2"]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["a", "3"], " ", "H", " ", 
      RowBox[{"Cosh", "[", "a", "]"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}], "2"]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["a", "3"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"2", " ", "a"}], "-", 
        RowBox[{"2", " ", "b"}]}]], " ", "H", " ", 
      RowBox[{"Cosh", "[", "a", "]"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}], "2"]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["a", "3"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"2", " ", "a"}], "-", 
        RowBox[{"2", " ", "b"}]}]], " ", "H", " ", 
      RowBox[{"Cosh", "[", "a", "]"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}], "2"], " ", "b"}]], "+", 
    FractionBox[
     RowBox[{"a", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "a"}]], " ", 
      SuperscriptBox["H", "2"], " ", 
      RowBox[{"Cosh", "[", "a", "]"}]}], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}]}]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["a", "2"], " ", 
      SuperscriptBox["\[ExponentialE]", "a"], " ", 
      SuperscriptBox["H", "2"], " ", 
      RowBox[{"Cosh", "[", "a", "]"}]}], 
     RowBox[{"1", "+", "a"}]], "+", 
    FractionBox[
     RowBox[{"a", " ", "b", " ", 
      SuperscriptBox["\[ExponentialE]", "a"], " ", 
      SuperscriptBox["H", "2"], " ", 
      RowBox[{"Cosh", "[", "a", "]"}]}], 
     RowBox[{"1", "+", "a"}]], "-", 
    FractionBox[
     RowBox[{"a", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"a", "-", 
        RowBox[{"2", " ", "b"}]}]], " ", 
      SuperscriptBox["H", "2"], " ", 
      RowBox[{"Cosh", "[", "a", "]"}]}], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}]}]], "-", 
    FractionBox[
     RowBox[{"a", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Cosh", "[", "a", "]"}], "2"]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}], "2"]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["a", "2"], " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Cosh", "[", "a", "]"}], "2"]}], 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}], "2"]}]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["a", "2"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"2", " ", "a"}], "-", 
        RowBox[{"2", " ", "b"}]}]], " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Cosh", "[", "a", "]"}], "2"]}], 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}], "2"]}]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["a", "2"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"2", " ", "a"}], "-", 
        RowBox[{"2", " ", "b"}]}]], " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Cosh", "[", "a", "]"}], "2"]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}], "2"], " ", "b"}]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["H", "2"], " ", 
      RowBox[{"Cosh", "[", 
       RowBox[{"2", " ", "a"}], "]"}]}], 
     RowBox[{"2", " ", "a"}]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["H", "2"], " ", 
      RowBox[{"Cosh", "[", 
       RowBox[{"2", " ", "b"}], "]"}]}], 
     RowBox[{"2", " ", "b"}]], "+", 
    FractionBox[
     RowBox[{"2", " ", "a", " ", "H", " ", 
      RowBox[{"Sinh", "[", "a", "]"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}], "2"]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["a", "2"], " ", "H", " ", 
      RowBox[{"Sinh", "[", "a", "]"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}], "2"]], "-", 
    FractionBox[
     RowBox[{"2", " ", "a", " ", "H", " ", 
      RowBox[{"Sinh", "[", "a", "]"}]}], 
     RowBox[{"1", "+", "a"}]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["a", "2"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"2", " ", "a"}], "-", 
        RowBox[{"2", " ", "b"}]}]], " ", "H", " ", 
      RowBox[{"Sinh", "[", "a", "]"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}], "2"]], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["a", "2"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"2", " ", "a"}], "-", 
        RowBox[{"2", " ", "b"}]}]], " ", "H", " ", 
      RowBox[{"Sinh", "[", "a", "]"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}], "2"], " ", "b"}]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "a"}]], " ", 
      SuperscriptBox["H", "2"], " ", 
      RowBox[{"Sinh", "[", "a", "]"}]}], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}]}]], "+", 
    FractionBox[
     RowBox[{"a", " ", 
      SuperscriptBox["\[ExponentialE]", "a"], " ", 
      SuperscriptBox["H", "2"], " ", 
      RowBox[{"Sinh", "[", "a", "]"}]}], 
     RowBox[{"1", "+", "a"}]], "-", 
    FractionBox[
     RowBox[{"b", " ", 
      SuperscriptBox["\[ExponentialE]", "a"], " ", 
      SuperscriptBox["H", "2"], " ", 
      RowBox[{"Sinh", "[", "a", "]"}]}], 
     RowBox[{"1", "+", "a"}]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"a", "-", 
        RowBox[{"2", " ", "b"}]}]], " ", 
      SuperscriptBox["H", "2"], " ", 
      RowBox[{"Sinh", "[", "a", "]"}]}], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}]}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["H", "2"], " ", 
      RowBox[{"Cosh", "[", "a", "]"}], " ", 
      RowBox[{"Sinh", "[", "a", "]"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}], "2"]], "+", 
    FractionBox[
     RowBox[{"a", " ", 
      SuperscriptBox["H", "2"], " ", 
      RowBox[{"Cosh", "[", "a", "]"}], " ", 
      RowBox[{"Sinh", "[", "a", "]"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}], "2"]], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["H", "2"], " ", 
      RowBox[{"Cosh", "[", "a", "]"}], " ", 
      RowBox[{"Sinh", "[", "a", "]"}]}], 
     RowBox[{"1", "+", "a"}]], "-", 
    FractionBox[
     RowBox[{"a", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"2", " ", "a"}], "-", 
        RowBox[{"2", " ", "b"}]}]], " ", 
      SuperscriptBox["H", "2"], " ", 
      RowBox[{"Cosh", "[", "a", "]"}], " ", 
      RowBox[{"Sinh", "[", "a", "]"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}], "2"]], "-", 
    FractionBox[
     RowBox[{"2", " ", "a", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"2", " ", "a"}], "-", 
        RowBox[{"2", " ", "b"}]}]], " ", 
      SuperscriptBox["H", "2"], " ", 
      RowBox[{"Cosh", "[", "a", "]"}], " ", 
      RowBox[{"Sinh", "[", "a", "]"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}], "2"], " ", "b"}]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sinh", "[", "a", "]"}], "2"]}], 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}], "2"]}]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sinh", "[", "a", "]"}], "2"]}], 
     RowBox[{"a", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}], "2"]}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sinh", "[", "a", "]"}], "2"]}], 
     RowBox[{"a", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}]}]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"2", " ", "a"}], "-", 
        RowBox[{"2", " ", "b"}]}]], " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sinh", "[", "a", "]"}], "2"]}], 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}], "2"]}]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"2", " ", "a"}], "-", 
        RowBox[{"2", " ", "b"}]}]], " ", 
      SuperscriptBox["H", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sinh", "[", "a", "]"}], "2"]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}], "2"], " ", "b"}]], "+", 
    RowBox[{
     FractionBox["1", "4"], " ", 
     SuperscriptBox["H", "2"], " ", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", " ", "a"}], "]"}]}], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["a", "2"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"a", "-", "b"}]], " ", "H", " ", 
      RowBox[{"Sinh", "[", "b", "]"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}], " ", "b"}]], "+", 
    FractionBox[
     RowBox[{"2", " ", "a", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"a", "-", "b"}]], " ", 
      SuperscriptBox["H", "2"], " ", 
      RowBox[{"Cosh", "[", "a", "]"}], " ", 
      RowBox[{"Sinh", "[", "b", "]"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}], " ", "b"}]], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"a", "-", "b"}]], " ", 
      SuperscriptBox["H", "2"], " ", 
      RowBox[{"Sinh", "[", "a", "]"}], " ", 
      RowBox[{"Sinh", "[", "b", "]"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}], " ", "b"}]], "-", 
    RowBox[{
     FractionBox["1", "4"], " ", 
     SuperscriptBox["H", "2"], " ", 
     RowBox[{"Sinh", "[", 
      RowBox[{"2", " ", "b"}], "]"}]}]}], ",", " ", "H"}], "]"}]], "Input",
 CellChangeTimes->{{3.664120880354757*^9, 3.6641208984977446`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox["a", "3"], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], "2"]]}], "-", 
  FractionBox[
   SuperscriptBox["a", "4"], 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["a", "4"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"2", " ", "a"}], "-", 
      RowBox[{"2", " ", "b"}]}]]}], 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["a", "4"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"2", " ", "a"}], "-", 
      RowBox[{"2", " ", "b"}]}]]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], "2"], " ", "b"}]], "+", 
  RowBox[{"H", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "a"}]]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}]}]], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["a", "3"], " ", 
       SuperscriptBox["\[ExponentialE]", "a"]}], 
      RowBox[{"1", "+", "a"}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["a", "2"], " ", "b", " ", 
       SuperscriptBox["\[ExponentialE]", "a"]}], 
      RowBox[{"1", "+", "a"}]], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"a", "-", 
         RowBox[{"2", " ", "b"}]}]]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}]}]], "-", 
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox["a", "2"], " ", 
       RowBox[{"Cosh", "[", "a", "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}], "2"]], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["a", "3"], " ", 
       RowBox[{"Cosh", "[", "a", "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}], "2"]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["a", "3"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"2", " ", "a"}], "-", 
         RowBox[{"2", " ", "b"}]}]], " ", 
       RowBox[{"Cosh", "[", "a", "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}], "2"]], "+", 
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox["a", "3"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"2", " ", "a"}], "-", 
         RowBox[{"2", " ", "b"}]}]], " ", 
       RowBox[{"Cosh", "[", "a", "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "a"}], ")"}], "2"], " ", "b"}]], "+", 
     FractionBox[
      RowBox[{"2", " ", "a", " ", 
       RowBox[{"Sinh", "[", "a", "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}], "2"]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       RowBox[{"Sinh", "[", "a", "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}], "2"]], "-", 
     FractionBox[
      RowBox[{"2", " ", "a", " ", 
       RowBox[{"Sinh", "[", "a", "]"}]}], 
      RowBox[{"1", "+", "a"}]], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"2", " ", "a"}], "-", 
         RowBox[{"2", " ", "b"}]}]], " ", 
       RowBox[{"Sinh", "[", "a", "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}], "2"]], "-", 
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"2", " ", "a"}], "-", 
         RowBox[{"2", " ", "b"}]}]], " ", 
       RowBox[{"Sinh", "[", "a", "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "a"}], ")"}], "2"], " ", "b"}]], "+", 
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"a", "-", "b"}]], " ", 
       RowBox[{"Sinh", "[", "b", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}], " ", "b"}]]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["H", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "a"}]], "+", 
     FractionBox["a", "2"], "-", 
     FractionBox["1", 
      RowBox[{"2", " ", "b"}]], "-", 
     FractionBox["b", "2"], "+", 
     FractionBox[
      RowBox[{"a", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "a"}]], " ", 
       RowBox[{"Cosh", "[", "a", "]"}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}]}]], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", "a"], " ", 
       RowBox[{"Cosh", "[", "a", "]"}]}], 
      RowBox[{"1", "+", "a"}]], "+", 
     FractionBox[
      RowBox[{"a", " ", "b", " ", 
       SuperscriptBox["\[ExponentialE]", "a"], " ", 
       RowBox[{"Cosh", "[", "a", "]"}]}], 
      RowBox[{"1", "+", "a"}]], "-", 
     FractionBox[
      RowBox[{"a", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"a", "-", 
         RowBox[{"2", " ", "b"}]}]], " ", 
       RowBox[{"Cosh", "[", "a", "]"}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}]}]], "-", 
     FractionBox[
      RowBox[{"a", " ", 
       SuperscriptBox[
        RowBox[{"Cosh", "[", "a", "]"}], "2"]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}], "2"]], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cosh", "[", "a", "]"}], "2"]}], 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "a"}], ")"}], "2"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"2", " ", "a"}], "-", 
         RowBox[{"2", " ", "b"}]}]], " ", 
       SuperscriptBox[
        RowBox[{"Cosh", "[", "a", "]"}], "2"]}], 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "a"}], ")"}], "2"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"2", " ", "a"}], "-", 
         RowBox[{"2", " ", "b"}]}]], " ", 
       SuperscriptBox[
        RowBox[{"Cosh", "[", "a", "]"}], "2"]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "a"}], ")"}], "2"], " ", "b"}]], "-", 
     FractionBox[
      RowBox[{"Cosh", "[", 
       RowBox[{"2", " ", "a"}], "]"}], 
      RowBox[{"2", " ", "a"}]], "+", 
     FractionBox[
      RowBox[{"Cosh", "[", 
       RowBox[{"2", " ", "b"}], "]"}], 
      RowBox[{"2", " ", "b"}]], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "a"}]], " ", 
       RowBox[{"Sinh", "[", "a", "]"}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}]}]], "+", 
     FractionBox[
      RowBox[{"a", " ", 
       SuperscriptBox["\[ExponentialE]", "a"], " ", 
       RowBox[{"Sinh", "[", "a", "]"}]}], 
      RowBox[{"1", "+", "a"}]], "-", 
     FractionBox[
      RowBox[{"b", " ", 
       SuperscriptBox["\[ExponentialE]", "a"], " ", 
       RowBox[{"Sinh", "[", "a", "]"}]}], 
      RowBox[{"1", "+", "a"}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"a", "-", 
         RowBox[{"2", " ", "b"}]}]], " ", 
       RowBox[{"Sinh", "[", "a", "]"}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}]}]], "+", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"Cosh", "[", "a", "]"}], " ", 
       RowBox[{"Sinh", "[", "a", "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}], "2"]], "+", 
     FractionBox[
      RowBox[{"a", " ", 
       RowBox[{"Cosh", "[", "a", "]"}], " ", 
       RowBox[{"Sinh", "[", "a", "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}], "2"]], "-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"Cosh", "[", "a", "]"}], " ", 
       RowBox[{"Sinh", "[", "a", "]"}]}], 
      RowBox[{"1", "+", "a"}]], "-", 
     FractionBox[
      RowBox[{"a", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"2", " ", "a"}], "-", 
         RowBox[{"2", " ", "b"}]}]], " ", 
       RowBox[{"Cosh", "[", "a", "]"}], " ", 
       RowBox[{"Sinh", "[", "a", "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}], "2"]], "-", 
     FractionBox[
      RowBox[{"2", " ", "a", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"2", " ", "a"}], "-", 
         RowBox[{"2", " ", "b"}]}]], " ", 
       RowBox[{"Cosh", "[", "a", "]"}], " ", 
       RowBox[{"Sinh", "[", "a", "]"}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "a"}], ")"}], "2"], " ", "b"}]], "-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"Sinh", "[", "a", "]"}], "2"], 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "a"}], ")"}], "2"]}]], "-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"Sinh", "[", "a", "]"}], "2"], 
      RowBox[{"a", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "a"}], ")"}], "2"]}]], "+", 
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"Sinh", "[", "a", "]"}], "2"]}], 
      RowBox[{"a", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"2", " ", "a"}], "-", 
         RowBox[{"2", " ", "b"}]}]], " ", 
       SuperscriptBox[
        RowBox[{"Sinh", "[", "a", "]"}], "2"]}], 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "a"}], ")"}], "2"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"2", " ", "a"}], "-", 
         RowBox[{"2", " ", "b"}]}]], " ", 
       SuperscriptBox[
        RowBox[{"Sinh", "[", "a", "]"}], "2"]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "a"}], ")"}], "2"], " ", "b"}]], "+", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"Sinh", "[", 
       RowBox[{"2", " ", "a"}], "]"}]}], "+", 
     FractionBox[
      RowBox[{"2", " ", "a", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"a", "-", "b"}]], " ", 
       RowBox[{"Cosh", "[", "a", "]"}], " ", 
       RowBox[{"Sinh", "[", "b", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}], " ", "b"}]], "-", 
     FractionBox[
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"a", "-", "b"}]], " ", 
       RowBox[{"Sinh", "[", "a", "]"}], " ", 
       RowBox[{"Sinh", "[", "b", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}], " ", "b"}]], "-", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"Sinh", "[", 
       RowBox[{"2", " ", "b"}], "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.6641209017166457`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%1", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"8", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], "2"], " ", "b"}]], 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", "b"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "a", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", "b"}], ")"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"4", " ", "a"}]]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "b"}], ")"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"4", " ", "b"}]]}]}], ")"}], " ", 
      SuperscriptBox["H", "2"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", "b"}], ")"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"4", " ", "a"}]]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "b"}], ")"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"4", " ", "b"}]]}], "-", 
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["b", "2"]}], ")"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"a", "+", "b"}], ")"}]}]]}]}], ")"}], " ", 
      SuperscriptBox["H", "2"]}], "+", 
     RowBox[{
      SuperscriptBox["a", "2"], " ", "H", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", "b"}], ")"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"3", " ", "a"}]]}], "+", 
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"3", " ", "b"}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["b", "2"]}]}], ")"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"a", "+", 
           RowBox[{"2", " ", "b"}]}]]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", "b"}], ")"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"4", " ", "a"}]], " ", "H"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "b"}], ")"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"4", " ", "b"}]], " ", "H"}], "+", 
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["b", "2"]}], ")"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"a", "+", "b"}], ")"}]}]], " ", "H"}]}], ")"}]}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["a", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", "b"}], ")"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "a"}]]}], "-", 
        RowBox[{"b", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "b"}]]}], "-", 
        RowBox[{"2", " ", "b", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"a", "+", 
           RowBox[{"2", " ", "b"}]}]], " ", "H"}]}], ")"}]}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["a", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         SuperscriptBox["b", "2"], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"a", "+", 
           RowBox[{"2", " ", "b"}]}]], " ", "H"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[ExponentialE]", "a"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", "a"}]], "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", "b"}]]}], ")"}], " ", "H"}], "-", 
        RowBox[{"b", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", "b"}]]}], "-", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"3", " ", "a"}]], " ", "H"}], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"a", "+", 
              RowBox[{"2", " ", "b"}]}]], " ", "H"}], "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"a", "+", "b"}], ")"}]}]], " ", 
            SuperscriptBox["H", "2"]}]}], ")"}]}]}], ")"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.664120917014241*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", " ", "a"}]], "+", 
   FractionBox["a", "2"], "-", 
   FractionBox["1", 
    RowBox[{"2", " ", "b"}]], "-", 
   FractionBox["b", "2"], "+", 
   FractionBox[
    RowBox[{"a", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "a"}]], " ", 
     RowBox[{"Cosh", "[", "a", "]"}]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}]}]], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     SuperscriptBox["\[ExponentialE]", "a"], " ", 
     RowBox[{"Cosh", "[", "a", "]"}]}], 
    RowBox[{"1", "+", "a"}]], "+", 
   FractionBox[
    RowBox[{"a", " ", "b", " ", 
     SuperscriptBox["\[ExponentialE]", "a"], " ", 
     RowBox[{"Cosh", "[", "a", "]"}]}], 
    RowBox[{"1", "+", "a"}]], "-", 
   FractionBox[
    RowBox[{"a", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"a", "-", 
       RowBox[{"2", " ", "b"}]}]], " ", 
     RowBox[{"Cosh", "[", "a", "]"}]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}]}]], "-", 
   FractionBox[
    RowBox[{"a", " ", 
     SuperscriptBox[
      RowBox[{"Cosh", "[", "a", "]"}], "2"]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], "2"]], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Cosh", "[", "a", "]"}], "2"]}], 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}], "2"]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "a"}], "-", 
       RowBox[{"2", " ", "b"}]}]], " ", 
     SuperscriptBox[
      RowBox[{"Cosh", "[", "a", "]"}], "2"]}], 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}], "2"]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "a"}], "-", 
       RowBox[{"2", " ", "b"}]}]], " ", 
     SuperscriptBox[
      RowBox[{"Cosh", "[", "a", "]"}], "2"]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}], "2"], " ", "b"}]], "-", 
   FractionBox[
    RowBox[{"Cosh", "[", 
     RowBox[{"2", " ", "a"}], "]"}], 
    RowBox[{"2", " ", "a"}]], "+", 
   FractionBox[
    RowBox[{"Cosh", "[", 
     RowBox[{"2", " ", "b"}], "]"}], 
    RowBox[{"2", " ", "b"}]], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "a"}]], " ", 
     RowBox[{"Sinh", "[", "a", "]"}]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}]}]], "+", 
   FractionBox[
    RowBox[{"a", " ", 
     SuperscriptBox["\[ExponentialE]", "a"], " ", 
     RowBox[{"Sinh", "[", "a", "]"}]}], 
    RowBox[{"1", "+", "a"}]], "-", 
   FractionBox[
    RowBox[{"b", " ", 
     SuperscriptBox["\[ExponentialE]", "a"], " ", 
     RowBox[{"Sinh", "[", "a", "]"}]}], 
    RowBox[{"1", "+", "a"}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"a", "-", 
       RowBox[{"2", " ", "b"}]}]], " ", 
     RowBox[{"Sinh", "[", "a", "]"}]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}]}]], "+", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"Cosh", "[", "a", "]"}], " ", 
     RowBox[{"Sinh", "[", "a", "]"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], "2"]], "+", 
   FractionBox[
    RowBox[{"a", " ", 
     RowBox[{"Cosh", "[", "a", "]"}], " ", 
     RowBox[{"Sinh", "[", "a", "]"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], "2"]], "-", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"Cosh", "[", "a", "]"}], " ", 
     RowBox[{"Sinh", "[", "a", "]"}]}], 
    RowBox[{"1", "+", "a"}]], "-", 
   FractionBox[
    RowBox[{"a", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "a"}], "-", 
       RowBox[{"2", " ", "b"}]}]], " ", 
     RowBox[{"Cosh", "[", "a", "]"}], " ", 
     RowBox[{"Sinh", "[", "a", "]"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], "2"]], "-", 
   FractionBox[
    RowBox[{"2", " ", "a", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "a"}], "-", 
       RowBox[{"2", " ", "b"}]}]], " ", 
     RowBox[{"Cosh", "[", "a", "]"}], " ", 
     RowBox[{"Sinh", "[", "a", "]"}]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}], "2"], " ", "b"}]], "-", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"Sinh", "[", "a", "]"}], "2"], 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}], "2"]}]], "-", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"Sinh", "[", "a", "]"}], "2"], 
    RowBox[{"a", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}], "2"]}]], "+", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"Sinh", "[", "a", "]"}], "2"]}], 
    RowBox[{"a", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "a"}], "-", 
       RowBox[{"2", " ", "b"}]}]], " ", 
     SuperscriptBox[
      RowBox[{"Sinh", "[", "a", "]"}], "2"]}], 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}], "2"]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "a"}], "-", 
       RowBox[{"2", " ", "b"}]}]], " ", 
     SuperscriptBox[
      RowBox[{"Sinh", "[", "a", "]"}], "2"]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}], "2"], " ", "b"}]], "+", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"Sinh", "[", 
     RowBox[{"2", " ", "a"}], "]"}]}], "+", 
   FractionBox[
    RowBox[{"2", " ", "a", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"a", "-", "b"}]], " ", 
     RowBox[{"Cosh", "[", "a", "]"}], " ", 
     RowBox[{"Sinh", "[", "b", "]"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], " ", "b"}]], "-", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"a", "-", "b"}]], " ", 
     RowBox[{"Sinh", "[", "a", "]"}], " ", 
     RowBox[{"Sinh", "[", "b", "]"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], " ", "b"}]], "-", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"Sinh", "[", 
     RowBox[{"2", " ", "b"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6641209378706894`*^9, 3.664120952556883*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", "b"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "a"}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", "b"}], ")"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"4", " ", "a"}]]}], "-", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "b"}], ")"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"4", " ", "b"}]]}], "-", 
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         SuperscriptBox["a", "3"], " ", "b"}], "+", 
        SuperscriptBox["b", "2"], "-", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["b", "2"]}], ")"}]}]}], ")"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"a", "+", "b"}], ")"}]}]]}]}], ")"}]}], 
  RowBox[{"8", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "a"}], ")"}], "2"], " ", "b"}]]], "Output",
 CellChangeTimes->{3.664120955525772*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "a"}]]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}]}]], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "3"], " ", 
     SuperscriptBox["\[ExponentialE]", "a"]}], 
    RowBox[{"1", "+", "a"}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "2"], " ", "b", " ", 
     SuperscriptBox["\[ExponentialE]", "a"]}], 
    RowBox[{"1", "+", "a"}]], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"a", "-", 
       RowBox[{"2", " ", "b"}]}]]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}]}]], "-", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["a", "2"], " ", 
     RowBox[{"Cosh", "[", "a", "]"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], "2"]], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "3"], " ", 
     RowBox[{"Cosh", "[", "a", "]"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], "2"]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "3"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "a"}], "-", 
       RowBox[{"2", " ", "b"}]}]], " ", 
     RowBox[{"Cosh", "[", "a", "]"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], "2"]], "+", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["a", "3"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "a"}], "-", 
       RowBox[{"2", " ", "b"}]}]], " ", 
     RowBox[{"Cosh", "[", "a", "]"}]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}], "2"], " ", "b"}]], "+", 
   FractionBox[
    RowBox[{"2", " ", "a", " ", 
     RowBox[{"Sinh", "[", "a", "]"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], "2"]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     RowBox[{"Sinh", "[", "a", "]"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], "2"]], "-", 
   FractionBox[
    RowBox[{"2", " ", "a", " ", 
     RowBox[{"Sinh", "[", "a", "]"}]}], 
    RowBox[{"1", "+", "a"}]], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "a"}], "-", 
       RowBox[{"2", " ", "b"}]}]], " ", 
     RowBox[{"Sinh", "[", "a", "]"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], "2"]], "-", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["a", "2"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "a"}], "-", 
       RowBox[{"2", " ", "b"}]}]], " ", 
     RowBox[{"Sinh", "[", "a", "]"}]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}], "2"], " ", "b"}]], "+", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["a", "2"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"a", "-", "b"}]], " ", 
     RowBox[{"Sinh", "[", "b", "]"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "a"}], ")"}], " ", "b"}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.6641209798345537`*^9, 3.6641210006569576`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"a", "-", 
     RowBox[{"2", " ", "b"}]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", "b"}], ")"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "a"}]]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "-", 
        RowBox[{"3", " ", "b"}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["a", "2"], " ", "b"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["b", "2"]}], "+", 
        RowBox[{"a", " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"3", " ", "b"}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["b", "2"]}]}], ")"}]}]}], ")"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "b"}]]}]}], ")"}]}], 
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "a"}], ")"}], "2"], " ", "b"}]]], "Output",
 CellChangeTimes->{3.6641210029383135`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["a", "3"], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}], "2"]]}], "-", 
   FractionBox[
    SuperscriptBox["a", "4"], 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}], "2"]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "4"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "a"}], "-", 
       RowBox[{"2", " ", "b"}]}]]}], 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}], "2"]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "4"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "a"}], "-", 
       RowBox[{"2", " ", "b"}]}]]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "a"}], ")"}], "2"], " ", "b"}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.664121016972518*^9, 3.664121058182448*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["a", "3"], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", "b"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "b", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "b"}]]}], "+", 
     RowBox[{"a", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "+", "b"}], ")"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "a"}]]}], "-", 
        RowBox[{"b", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "b"}]]}]}], ")"}]}]}], ")"}]}], 
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "a"}], ")"}], "2"], " ", "b"}]]], "Output",
 CellChangeTimes->{3.664121060635689*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"(", 
    FractionBox[
     RowBox[{"Sin", "[", 
      RowBox[{"1000", " ", "x"}], "]"}], 
     SqrtBox[
      RowBox[{"1000", " ", "x"}]]], ")"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.0001", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.66412754559334*^9, 3.6641275610732374`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[{{0.03952934918216824, 0.1516509885652532}, {
     0.03967441663982231, 0.1459486478563527}, {0.04000687862491399, 
     0.11707452176753994`}, {0.04033934061000567, 0.07567270574762973}, {
     0.04067180259509735, 0.026358515456477313`}, {
     0.04100426458018904, -0.025428732502621752`}, {
     0.041314694872706614`, -0.07101200373789539}, {
     0.041625125165224194`, -0.10949197513229883`}, {
     0.041935555457741774`, -0.13725941678836145`}, {
     0.042238867592355706`, -0.15141855546127284`}}], LineBox[CompressedData["
1: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
CcbUDdT1Ch3wdLkXysmdBC7aU5J/1DogLS2EnXwhENO91fhFpwO0+qnTkidv
4VKh9+URgw584uJ52CETQIy3lL5pu9+BvHdPn4vdSyD2Jp+NKp90QJlmaMtl
+gwSUrftV7bjmr0e84kkiRySvVfaLs6rAzs2PX8V2EoljU9MmQKCO2Cu8Nvn
szmVvOsJCXKO7cCPx5JNV/izyPzhuv2P0zvA5J90PLsxhbC4/cwwzO8AV/Ct
EZP0KMI7xnlau7IDR+tSnvJdcyJSEoo1Sk0d6JS+2+gp7QbNIKsLkj0dYLmZ
Md9/KwZmP+KGjox2QGhLYcGEaSpcFDv0933ugNSgTf+JNTyOTPj7fcvPDuj9
2z796wEVect8z2j/doBtKdfGJpaK1ivq9L/oOrH83so6MygbH6l2vuPMnQgs
O7JwjSsdixszOQbZOmFuQp201I9f48dDyU1cnVBW0bqpe8APgmTd8dJDnRgc
7i+dS3tAZHYLV2Sc6kQc88I567RQov3o+vko6U7YsP8r3B+y9n51ePS+UuzE
uMoGxfePMonHwcIb9uqdqLA9sCW4I4fEOX74YnG9E+ULRFI4lkqKR1ms9A07
cYRmw7x7cg7pFJFY1bDoBEvpgyI9wUwy4WvoKW/TCfnZ5ht5J5PIyteAnaIu
nZC8FfthXXcIYZMjcQI+nSjW/XzrnqIJORbz7TBHWCdsrbt/GNb4QWFhV/Gm
hE50sEWkD/rE46a6nOy/zE4sTZZUue1Px2OKRcePwk68PGPz0Fw/G94M0dpj
pBMW7PFBKeZUJN1q+dTT0ol9iQJp7oepqCibM6/r68SPncN+P99Q0M/KvVjw
thMKXDtHDtWkYNpc1TVlshNqoqvKXfzRoG+x2Rr2Xyd4lJ4qbFV1wR6e1MiX
S524SZuRt2TvTE6+6OO3Xd+FHZPiZbkVUUR5aDXXbEsXCqNXhqtephD940fO
3NzdBR328cm4RAqx8dJuVuPpAvV93O11W6gk4LOLxtmjXfh4nCtMUpNK/qbd
OLtJrAtnn/R6nxnLIrfMTgsNyK757/3n+flTKmkS2rI39mIXVkJ963bmxZBj
vyY3mmh34fdw8reLWS4kuKh64YRBF5pi7EnvSTcsPwufWL7fhekvz2fXqcfC
4MzD/sanXTCzaHU/uSMNrTQqtX7Oa+dX6PaPjmfheD0P9ZrPWr7fReSfgoow
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
MdGd6IXlk33vaG9kQ6nwWYu1aC8E+F6GjLVRwF6j//KbVC/ee162KtiWhsl2
FaVbsr040pQzrV4Qh6LXp5gGzvdiXcHDJLHNPnAd39uidLEX/lfXXwn7/oho
zjC8rFLvhdEEAxm/F0a4l38qntTuxWcZ+1ymoCTy34ZhxrQbvXg+mzDDn5VB
qnfUNu8x6MXpY7M5LweziM/+TA9/4174lBzaIlySRW4cDlJkMO+FuNw5LuMr
GeSI6AtG20dr/oK73CW3JZElWcPmn097cdA1Scn/ZChpVVXzuGPXC0fpSXOb
b/dJ+DUxxWHnXjx4+GqSfY8fjA0PMKq+7EXG6dMaVjvjIfpwY3OtTy8+FEwZ
zIqngcHul7toUC/ir5+eVs6nYODlm/OU8F50SCVyONJnIym4YcOB2F50jVlY
2DBR8Cg+uyk4aU2/0yFkdDEFslmh7hszetEZ59pu0hWDbaUO5+1zevFxWHW4
I8QDY/UmG34X9OKf0iWLyyftSE63epNxWS+c+Wt2b/Bam583ku5vSS/Cblfy
1F5IJhe/8J5Xb+hFSBvf1MfFDLLnN8uGptZeVO8I85+gZpFvq/ONkt29+GZV
9/oRTxYp2zTmRh3oxZPBljvrDdKJx64WBb7RXrSEOX5YHU4gV3nyGCLGekE7
NyTT6xhE+IUiGzdP9ML8JhdD29nL5LeEi5vzt15EOOiMqT0MQJ3CfYWFmV5U
cBfkys3HI0D9CsP9+bX/61Dx+qniNNy+icYPS73gFBDSKqumQNhUwO0KbR94
zBg8d8RlYfXxNoU2hj6cqHgjd1U6E52Oi+tlmPtgwbEsa/I+GdGvPjUUbOtD
4ol6jbOno2AW3u4quKsPDQONQptPOEMyuVA+Zs+av7I9T+7udiEbc2PW7+Du
Q93U8+kLAVFkuMK9wf1gH0r0NrUU/Ekmac0WrstH+nBkdMDPWSKTPOnXkbc8
0Yfki6UhN+yyiMKY7PoJ0T54nZJYeeBCITunDzdcO9MHpy80uuwmaWT8D6tr
l2wfLp87YpwVF0/y163IySn24W3fibMY8CdOWybpSy/2gXnRqUHEShuXObvr
j2r04Z3bQ4sr+UHgOljqkqDdh/yWcqsNrQn4cSJBbtfNPmTrxhS0H0xHpbQX
vbdBH4ToD8yFrtXLW9mqnsakD/887x7YIZyFa1duuDw278MdsXNln0wzIKiv
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
PL83NljguocUFPGyEP4HkF+pVg==
     "]], 
    LineBox[{{0.008951211980387766, 0.1516509885652532}, {
     0.008993358479837574, 0.139438339046301}, {0.009300025309965682, 
     0.040801922683419825`}, {0.009606692140093789, -0.05836891662715041}, {
     0.009913358970221896, -0.14907610973825516`}, {
     0.00992303001863977, -0.15141855546127284`}}], 
    LineBox[{{0.024277049469654623`, -0.15141855546127284`}, {
     0.024381165325604904`, -0.13828037480980904`}, {
     0.02471362731069659, -0.08186044662157033}, {
     0.02504608929578827, -0.01729277413042691}, {0.02537855128087995, 
     0.04830408395690324}, {0.025711013265971635`, 0.10779344373530411`}, {
     0.026021247091010048`, 0.1516509885652532}}], 
    LineBox[{{0.0334654193215909, 0.1516509885652532}, {0.033690100908172024`,
      0.13139557565446056`}, {0.034022562893263705`, 0.08740157332960938}, {
     0.034355024878355386`, 0.03431197060692822}, {
     0.03468748686344707, -0.022005213408380256`}, {
     0.03501994884853875, -0.07538722079826823}, {
     0.03535241083363043, -0.12004927864002565`}, {
     0.03568487281872212, -0.15120991911821052`}, {
     0.03568969257006018, -0.15141855546127284`}}], 
    LineBox[{{0.021205341022370133`, 0.1516509885652532}, {
     0.021389007459779757`, 0.12247129370714549`}, {0.021721469444871442`, 
     0.057164416333035616`}, {
     0.022053931429963126`, -0.013360192127307597`}, {
     0.022386393415054807`, -0.08137803517535044}, {
     0.02271885540014649, -0.13955078772238147`}, {
     0.022812435743175336`, -0.15141855546127284`}}], 
    LineBox[{{0.012010067720008783`, -0.15141855546127284`}, {
     0.012060026781118652`, -0.1396537048832027}, {
     0.01236669361124676, -0.05640420101338709}, {0.012673360441374867`, 
     0.029996302657470844`}, {0.012980027271502975`, 0.11156945390247441`}, {
     0.013157156482609114`, 0.1516509885652532}}], 
    LineBox[{{0.02735428439678997, 0.1516509885652532}, {0.02737332319143005, 
     0.14983981963895684`}, {0.02770578517652173, 0.1022886841267196}, {
     0.028038247161613412`, 0.04417272926967212}, {
     0.028370709146705097`, -0.01806583239603154}, {
     0.02870317113179678, -0.07761287494236947}, {
     0.029035633116888462`, -0.12802563774166004`}, {
     0.029252259983702913`, -0.15141855546127284`}}], 
    LineBox[{{0.03651130842972173, -0.15141855546127284`}, {
     0.03668225877399717, -0.1404184670075296}, {
     0.03701472075908885, -0.10391259056585044`}, {
     0.03734718274418053, -0.056405842604871116`}, {
     0.03767964472927221, -0.003171178855980426}, {0.03801210671436389, 
     0.04994154229773756}, {0.03834456869945558, 0.09714702657499182}, {
     0.03867703068454727, 0.13335340924258599`}, {0.03896186849961995, 
     0.1516509885652532}}], 
    LineBox[{{0.030417301633342785`, -0.15141855546127284`}, {
     0.030697943042346874`, -0.11873634313847238`}, {
     0.03103040502743856, -0.06750611508443286}, {
     0.03136286701253024, -0.009470036826551549}, {0.031695328997621924`, 
     0.04898546472820939}, {0.032027790982713605`, 0.10149552541663927`}, {
     0.032360252967805286`, 0.14240782850636163`}, {0.032483264789284566`, 
     0.1516509885652532}}], 
    LineBox[{{0.0059054292590405184`, -0.15141855546127284`}, {
     0.005926690178556496, -0.1433537994020123}, {
     0.0062333570086846035`, -0.019949652101975465`}, {0.006540023838812711, 
     0.09933108716831149}, {0.006693111842011899, 0.1516509885652532}}], 
    LineBox[{{0.015073465897171246`, 0.1516509885652532}, {
     0.015126695082399728`, 0.14117798805130982`}, {0.015433361912527838`, 
     0.06902406936875319}, {0.015740028742655947`, -0.008080914047473855}, {
     0.016046695572784053`, -0.08295196638074205}, {
     0.016353362402912158`, -0.14874576863124644`}, {
     0.01636948680444955, -0.15141855546127284`}}], 
    LineBox[{{0.018143008693026173`, -0.15141855546127284`}, {
     0.018193363383680806`, -0.14303679375407158`}, {
     0.018500030213808916`, -0.0796184616169216}, {
     0.018806697043937025`, -0.009879877571205443}, {0.01911336387406513, 
     0.059644465879313845`}, {0.019420030704193236`, 0.12254463539194195`}, {
     0.01959651383046408, 0.1516509885652532}}], 
    LineBox[{{0.0028817721079722023`, 0.1516509885652532}, {
     0.0031666887074035263`, -0.014101235381723889`}, {
     0.00342879145923522, -0.15141855546127284`}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{894., Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0.0001, 1}, {-0.15141855546127284`, 0.1516509885652532}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.664127548530978*^9, 3.6641275646359043`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", " ", 
     RowBox[{"Cos", "[", "x", "]"}]}], "-", 
    RowBox[{"Sin", "[", "x", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.664129468575201*^9, 3.664129470684703*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwd1Ak4VdsXAPAThZd4ypAp0+OKTBnKEzYNSpQ5Q+jKWDQoJVLImCmEJIk8
KpUpU2GvayhDke5NpDIlSepShory3/7n+853vt+31trrnLXPObIHj1l7clAU
9ZOcS9fdnmMvGJ/sDKn/HwK1H4v3HRwQ00YEypm0gnoR3u6kB2Lbl9zGR+uu
f4jP+wXS9hLT7073TNWr/StUcF3MdsmnWxVWYErw0+VFacelfPneQiH8YqL+
ghvNlfh2YEePLLZyb6txy3AjZpgF2qlgvS6t0lQxD2IB4wIFHfyPQc6tpmwv
4tZlQpKGeFURz41p6UPEMhvqCrfjaZGTGQr5vkv11nkhZvhdxLvEfbSjxI9Y
NT1W2P1HfmOT7XFi86ITJftwj5qjoXOGP7GPkZOdMzb35H803XOC+DCrwM8N
M6416SSKBRC/PJWi4Im1mWfKFPafIv61ytXlEL7Do6aKs08TD2f/lDiKpdD7
2/v6A4knBO9U+OPUU5nybOkgYr2eosIAzHVvT26MWzBx9dqfHwNx8DCHpEz+
WeJGVlzIWfxVtOZKzUjIUpzH3icUu1scEbSinSc+6ljUE457o+QuffIOJb7v
Va8ciWn9visabMOIhZToJdGYHmSyLXFmydzrkrwv4iwh2XDHjHBiY7zVLgG/
LJnHCpsvEPfFBAVfwvxmrxamepYs+SvDLwVHhMefiROLJM7vOK+QjrGkV9W+
R8Rhl95zb7yCf1QbTcvtjyJerDVxuYr9vs4cq82OJtbLeyuRgwsvdt2PMYhB
lFFJylqHXDwof/ezTf+SnZSuVORh2/107wnpi4hiuD9PK/wPJ83qFdQwlnwj
Q8CgELemCL+PdIsj/dVo/R9vYYPWdtd1+fGkfgff4ZC7+Ix7QfanbQnEdyVo
3vdx+Z/QvsoRYkqcru5Tgmk6Ovv20pKIx4JTe8owvevvNPEW4rDBc9zz5fia
7/iLUe9LiMqN6spVrsA8L54Xgm0yWW9grWFJFS6Qqn+sUEBMVX1gLK/BW/2K
RuJniBkhlZ7eD3EId5ScQ0YKsROvoF0dFrM7YYxHicNMD2UN1uOqmwfo8ptT
iVlnjIMBTxro5Uz2ENONVU/7NWCPALbYRbE0RA06HLNWeIy1OFODy48TMw7x
iho8wRyp2m/etBBTdeX2ri34RklQttrpdFJ/tm60vg0fNZT8bd+RvjTvz9EL
7Vi/A7uEy2cQv6vfuuMZ7hvnlH7JJJbp+1A804lvBxWG/la6gqguFc5etS4c
yGM6SAtfcoTG5rEuLERLygtSzyT5zSoHfZnYwk1UXjrhKrGKem5lN5aafBS5
6z3xcXOVpxmv8MR5lw/+elmIKl10mD3Xg+OybxY2jxFPNvDkuL7GzT0qSod3
ZCMqWVnTx/cdvuz1/OLlbGLLKcn28/344Iz/eN13YmpTc0fmAF5cU33375vX
yXono6MmB7HeXmO1yj85JF/Y3/Tge8zz7n1Sv90NMh9PrmzuEdzjG83mvk/s
Y2+QXDqCHzV7OtxXzSX9uiej+Eaxw3CRGPWWuEtfoGF6DIPSQlsadx5Z/7vt
lppPmOa/J1hJi3jQYv5W6DieWWT3WccRC4w/DROfwKnrdLILdG+Sef9ebRbO
xr88os31PIiNOkMeak5it3s9C52XiAevL34tnMQaW4JdfowSizYMMtOncIcD
SJml55N+E7a8Sd8xT5pp3uTUf2R+djx3JubwvO7QfJ54Abn/Fila0A/89d2Z
fTbbiB2WsZu5f2KW4m3eqjTisRVKZzb8wjm1XKfPbi4kz28/p5i4gLXfN+3m
OneL9BvderOfAsXY/QXVBcT6NhMjm5aBuOr3RZ9O4swAU8fkZbB4Wq7yqfRt
RGmssB0w4YD2leHSKY3EIW/WZTVyAl3TcFqCpwhRscqCGbNcYNPTvbdDg9jS
Y8P4QW4wCTly57wjcc2O9uQubtjwJNt1qIi4VbnrXQkPzDrOtxbuuYsoyTqf
0vMrISG85vrGy/fI/P1lOA/wQyjN8sdwLfF6WvWpIX448fSjddoIMV0tf7/n
32AvvJZnTuc+ophyPc26AiB359SJul5i7cO/WHtWQ3WX5s6dUiXEQ8rO2YKQ
9Glil4oJsdGzSfkxQfDiuLV79VHinG8fS7SFQERbYu+beuJeGxOBLiGofRpe
VK1WSvYrrU1YQAQk1A+XmXUSy0cJrqoShegtOzUNh4lDKmp9+cXg2075Bxqz
xL2XVlz3FoN2en+FsFQZour+djojKQ7BqdY1A0eI6dw8qskS0DejByf5ykn+
8DmvXCkw4RA18pIlLo1dsOGShnL+GYaDDrEHxMkdkYY4xZJGAxfigHMOD6Rk
QM/xnyfc94n1xwRspmXgah1vxzXzB+R9OPfIr1IOHCLe9jXFV5D9OKngk0oD
gUGaince8as9P+df06BN3//cympiriNeNDlF0JtdIWM1TNweFW5coQgSh9Q9
+3UrESXy50vewHro33uB/eMDMb1OPd1mA3iIr1+uZlSNqOXvinc5aYBk4Am7
F3bEfKv8hWI1oJtVVxjgS1zzyUqnSgNMEq1MazOIJ/PvBApuBEXqbNKuL8SK
ASbczI0w/qFD1D2rhsw34G3GAS04VnZSNXP6IaLWTh7Nxpvgq/4Qq43nEdnv
ecz8vgn8WvcGz0sSR6Dq/UqbwWdAqcV1B7GuxA2v9M1A5xukK2QQf8/d6u2v
C5aHzNPKN9ci6saBi2b/6oGGrML8s+A6RBUlu7msNITie6l5f5KIL6lTHrsN
QUWX2qWRT5xyUO9xnCGst3iTdvkp8dfC0MxVCGTOpag5SdajMMaG3O0rjWD1
699uH+vrETW3POODuDF8S37VumwZoLDZ1PNPDmyDOr8yNCJCLKX5eSB2G8Ts
Sqh6ogKIEkvR1SrfBpLU1v/iHYg1x0RiV2yHHcfuhwqXEi9DZuzi7fCMtvVa
mjoDUW/evX61ygRkVohZ3+4ntj93TX52F6w4GZ149ROx6/rNrTRTGB/83ho3
TVxdVVdkbwqVdZ3oyMoGRN31pKk+MoXdAZGqmpuI2Zp9Gy7shoD3bJ66ROKF
+1NaUubQ2vAEnus3IqogUjo2xgIKny2MJO4kDizm2AMWENWjudLcmnjjlwM2
cxaw9UuObas38QH95DXallAnGviJkUrcL338eKEllB5TFCwfa0RhEtk7jqRY
Qea6WK+0tCYUtk1rih1mA6fX43jrG8TfDgF/ng3YaU2XChQ1Icpp2R3LBhtY
Y0qfTwASv7YgZshhCwkBuslR48TSZZENUbYQ9nTs4WmjZhTW38l99rIdHAoy
5XOcaEaUuxRl0G4PRRKrXVxnSVxI5m+/CXuYqO+95049RlRze1UtvwMc5fAx
PypEvN+Cr97GAQLio+Mj9B+jsBt+EaYDDhB6vemv4gQSD3eZyVhwhPQGAy5O
1Sfk//fiw1FLZ2j4S3Px3pEWxBB4la9dSof1thrVcWdakFHqoNvhFjok56gd
84kg8WMBsZX9dKBrbRj45ypx+JxOAp8b/HGWh6zmFhRGT5PV93MDvVKR0FiJ
VsR4fORBsepBqNg3/8e9rRUZcWuelGtwh8L85j/iCu0obKF4kK7iDcejbIeQ
ejsy8pPSstrpDVu8R5o8/m1HlEXMzn0HvaFLefnF4j3EXTHdOZne8LNsm+DW
0yS/eoWbMpcPmDMaFQ+1tCOGsyKv5gcf+P6WYVl96CkKm7u2U+/BYTASqb9p
U/yM1Cc7DScfBdWWtzVPlJ8jqvGs3l+ZJ+Glkc3XO1+7UFjkbscwiSDwW+nL
7NZgIiPXjHptsVB42mtfz5/EQrlQYYp3R4CNicPQyMhL8r2UJ0SExcCm3Hj7
XPlXiL5zdUcbOx4G/1x+6RPagyYdd04WFSXDB9Pn+SJNvYgeXsl7P+gylF4d
CHoh24cmFW/Dq9cZUBDLeVEp+A1ivNhldSwyC2bcnca9at+i4wf8ddW25wDv
9mjrsrX9KDZy2kvRKQ9CBD6sGnIeQAI/7F/JXMuHVXgD1bNnEGUG9het+FMA
Bqctfjf9GkTJlf6fZdpuQ/Z/Cfn/ZA8hRlXs441X7oKrnXbHX2bDyDJd0Oh0
XzFUdntexrPDKE0iXfiLfBn8+6yUYzTjPZL5fHJwR185yOzwmrm8fQTRg0+4
cbEqQEdbJ6VidASFWWqMnmupgoFviW35UR9QsgVHjlJnDUxoWUWJaY4io5Qj
vPyytUD7rDq+jDWKWksTNz87XA/N8qeYx8M/IpnDxzWnOBlw6WW3u7X8GBrk
cuLONW8Atg0jhaN5DP33T8gJ95xGKLcT3vav/ydUs2VNnadUM+R3RFwfXjOO
JAc7bNPTH8Nci/PZNY3jyHJL4toHhi0wmAIzAkc/o5rPutN831th9sUWsQv8
E2iV4qgiutYOx9PkGEF1E8hjLvKZcPAzWNshJzDi+gVpvFbIXW7WCTbd9xYk
/3xBkrJDom9Wd8G3A3l+b4u+otSYntBOiRcA9JIofnM2GnsTWzcnyYRHz/3M
+vey0WE1i+cxskyoMlReXWzFRuWSksmiNCbckyzI3mPPRnE2PRL66kzI6s16
kHCQjQq1NzrHGzPhlGX00MogNpJxdozY7cWEDUYuBtyFbDS6TuiCWSkTaCXi
nD232ShLi9N5qoIJclK9rYV32Sjn5IGRKw+ZILpgbWtSxkYi53ypj41M4KrZ
5RtVx0ZCjgpeid1MGFLXvsrJYiOP6Afjv34x4W3OlCurm42srXvv3V1kQi9f
iXx+LxtxiV1d57KcBZ2flUq39rORz/DPlY18LKi7Jd0S/omNKp5HC6fJsKBG
5F2C1QQb6U29Nt+twIIHUVnWsmw2MrQf0FymzIIid+F+xjQbPXnLy+uvxYIC
JjM/eY6N3h7W/a2ky4Jc4+RD9F9slCwul/NenwXZpXvUNX6z0e1rT79cN2bB
FWnemcVFNvqVtXnCwYQF/wNJNXyH
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {-0.30116866176687973`, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.664129473544186*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"y", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"C", "\[Times]", 
     SqrtBox[
      FractionBox["2", 
       RowBox[{"\[Pi]", "\[Times]", "x"}]]], "\[Times]", 
     RowBox[{"Sin", "[", "x", "]"}]}], "+", 
    RowBox[{"D", "\[Times]", 
     SqrtBox[
      FractionBox["2", 
       RowBox[{"\[Pi]", "\[Times]", "x"}]]], "\[Times]", 
     RowBox[{"Cos", "[", "x", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"-", "1"}], "2"], "\[Times]", 
    SuperscriptBox["x", 
     FractionBox[
      RowBox[{"-", "3"}], "2"]], "\[Times]", 
    RowBox[{"y", "[", "x", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["x", 
     FractionBox[
      RowBox[{"-", "1"}], "2"]], "\[Times]", 
    RowBox[{
     RowBox[{"y", "'"}], "[", "x", "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.664190309774428*^9, 3.6641904232907853`*^9}, {
  3.6641904537278895`*^9, 3.664190524229046*^9}, {3.6641905761641755`*^9, 
  3.6641906488693476`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"D", " ", 
     SqrtBox[
      FractionBox["2", "\[Pi]"]], " ", 
     SqrtBox[
      FractionBox["1", "x"]], " ", 
     RowBox[{"Cos", "[", "x", "]"}]}], 
    SuperscriptBox["x", 
     RowBox[{"3", "/", "2"}]]]}], "+", 
  FractionBox[
   RowBox[{"C", " ", 
    SqrtBox[
     FractionBox["2", "\[Pi]"]], " ", 
    SqrtBox[
     FractionBox["1", "x"]], " ", 
    RowBox[{"Cos", "[", "x", "]"}]}], 
   SqrtBox["x"]], "-", 
  FractionBox[
   RowBox[{"C", " ", 
    SqrtBox[
     FractionBox["2", "\[Pi]"]], " ", 
    SqrtBox[
     FractionBox["1", "x"]], " ", 
    RowBox[{"Sin", "[", "x", "]"}]}], 
   SuperscriptBox["x", 
    RowBox[{"3", "/", "2"}]]], "-", 
  FractionBox[
   RowBox[{"D", " ", 
    SqrtBox[
     FractionBox["2", "\[Pi]"]], " ", 
    SqrtBox[
     FractionBox["1", "x"]], " ", 
    RowBox[{"Sin", "[", "x", "]"}]}], 
   SqrtBox["x"]]}]], "Output",
 CellChangeTimes->{3.66419065254025*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"D", " ", 
      SqrtBox[
       FractionBox["2", "\[Pi]"]], " ", 
      SqrtBox[
       FractionBox["1", "x"]], " ", 
      RowBox[{"Cos", "[", "x", "]"}]}], 
     SuperscriptBox["x", 
      RowBox[{"3", "/", "2"}]]]}], "+", 
   FractionBox[
    RowBox[{"C", " ", 
     SqrtBox[
      FractionBox["2", "\[Pi]"]], " ", 
     SqrtBox[
      FractionBox["1", "x"]], " ", 
     RowBox[{"Cos", "[", "x", "]"}]}], 
    SqrtBox["x"]], "-", 
   FractionBox[
    RowBox[{"C", " ", 
     SqrtBox[
      FractionBox["2", "\[Pi]"]], " ", 
     SqrtBox[
      FractionBox["1", "x"]], " ", 
     RowBox[{"Sin", "[", "x", "]"}]}], 
    SuperscriptBox["x", 
     RowBox[{"3", "/", "2"}]]], "-", 
   FractionBox[
    RowBox[{"D", " ", 
     SqrtBox[
      FractionBox["2", "\[Pi]"]], " ", 
     SqrtBox[
      FractionBox["1", "x"]], " ", 
     RowBox[{"Sin", "[", "x", "]"}]}], 
    SqrtBox["x"]]}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SqrtBox[
     FractionBox["2", "\[Pi]"]], " ", 
    SqrtBox[
     FractionBox["1", "x"]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"D", "-", 
         RowBox[{"C", " ", "x"}]}], ")"}], " ", 
       RowBox[{"Cos", "[", "x", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"C", "+", 
         RowBox[{"D", " ", "x"}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}], 
   SuperscriptBox["x", 
    RowBox[{"3", "/", "2"}]]]}]], "Output",
 CellChangeTimes->{3.664190660062254*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", "-", 
        RowBox[{"c", " ", "a"}]}], ")"}], "\[Times]", 
      RowBox[{"Cos", "[", "a", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"c", "+", 
        RowBox[{"d", " ", "a"}]}], ")"}], "\[Times]", 
      RowBox[{"Sin", "[", "a", "]"}]}]}], "\[Equal]", 
    SuperscriptBox["a", "2"]}], ",", " ", "d"}], "]"}]], "Input",
 CellChangeTimes->{{3.664191578326674*^9, 3.6641916807625237`*^9}, {
  3.6641918797860174`*^9, 3.664191880355041*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"d", "\[Rule]", 
    FractionBox[
     RowBox[{
      SuperscriptBox["a", "2"], "+", 
      RowBox[{"a", " ", "c", " ", 
       RowBox[{"Cos", "[", "a", "]"}]}], "-", 
      RowBox[{"c", " ", 
       RowBox[{"Sin", "[", "a", "]"}]}]}], 
     RowBox[{
      RowBox[{"Cos", "[", "a", "]"}], "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", "a", "]"}]}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.664191656948868*^9, 3.6641916851846128`*^9}, 
   3.6641918971982603`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", "-", 
        RowBox[{"c", " ", "a"}]}], ")"}], "\[Times]", 
      RowBox[{"Cos", "[", "a", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"c", "+", 
        RowBox[{"d", " ", "a"}]}], ")"}], "\[Times]", 
      RowBox[{"Sin", "[", "a", "]"}]}]}], "\[Equal]", 
    SuperscriptBox["a", "2"]}], ",", " ", "c"}], "]"}]], "Input",
 CellChangeTimes->{{3.6641917012142134`*^9, 3.664191701542358*^9}, {
  3.664191939971043*^9, 3.664191940557172*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"c", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["a", "2"]}], "+", 
      RowBox[{"d", " ", 
       RowBox[{"Cos", "[", "a", "]"}]}], "+", 
      RowBox[{"a", " ", "d", " ", 
       RowBox[{"Sin", "[", "a", "]"}]}]}], 
     RowBox[{
      RowBox[{"a", " ", 
       RowBox[{"Cos", "[", "a", "]"}]}], "-", 
      RowBox[{"Sin", "[", "a", "]"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.664191704308113*^9, 3.6641919429269714`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"d", "=", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "2"], "+", 
     RowBox[{"a", " ", "c", " ", 
      RowBox[{"Cos", "[", "a", "]"}]}], "-", 
     RowBox[{"c", " ", 
      RowBox[{"Sin", "[", "a", "]"}]}]}], 
    RowBox[{
     RowBox[{"Cos", "[", "a", "]"}], "+", 
     RowBox[{"a", " ", 
      RowBox[{"Sin", "[", "a", "]"}]}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Expand", "[", 
  FractionBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", "-", 
        RowBox[{"c", " ", "x"}]}], ")"}], "\[Times]", 
      RowBox[{"Cos", "[", "x", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"c", "+", 
        RowBox[{"d", " ", "x"}]}], ")"}], "\[Times]", 
      RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}], 
   SuperscriptBox["x", "2"]], "]"}]}], "Input",
 CellChangeTimes->{{3.6641918226656065`*^9, 3.664191861686351*^9}, {
  3.6641919514853163`*^9, 3.664192022260189*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"c", " ", 
     RowBox[{"Cos", "[", "x", "]"}]}], "x"]}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    RowBox[{"Cos", "[", "x", "]"}]}], 
   RowBox[{
    SuperscriptBox["x", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", "a", "]"}], "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{"a", " ", "c", " ", 
    RowBox[{"Cos", "[", "a", "]"}], " ", 
    RowBox[{"Cos", "[", "x", "]"}]}], 
   RowBox[{
    SuperscriptBox["x", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", "a", "]"}], "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{"c", " ", 
    RowBox[{"Cos", "[", "x", "]"}], " ", 
    RowBox[{"Sin", "[", "a", "]"}]}], 
   RowBox[{
    SuperscriptBox["x", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", "a", "]"}], "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{"c", " ", 
    RowBox[{"Sin", "[", "x", "]"}]}], 
   SuperscriptBox["x", "2"]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    RowBox[{"Sin", "[", "x", "]"}]}], 
   RowBox[{"x", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", "a", "]"}], "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{"a", " ", "c", " ", 
    RowBox[{"Cos", "[", "a", "]"}], " ", 
    RowBox[{"Sin", "[", "x", "]"}]}], 
   RowBox[{"x", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", "a", "]"}], "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{"c", " ", 
    RowBox[{"Sin", "[", "a", "]"}], " ", 
    RowBox[{"Sin", "[", "x", "]"}]}], 
   RowBox[{"x", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", "a", "]"}], "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{3.6641920477296963`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%10", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Global`c", " ", 
     RowBox[{"(", 
      RowBox[{"Global`a", "-", "Global`x"}], ")"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"Global`a", "-", "Global`x"}], "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["Global`a", "2"], " ", 
     RowBox[{"Cos", "[", "Global`x", "]"}]}], "-", 
    RowBox[{"Global`c", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"Global`a", "-", "Global`x"}], "]"}]}], "-", 
    RowBox[{"Global`a", " ", "Global`c", " ", "Global`x", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"Global`a", "-", "Global`x"}], "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["Global`a", "2"], " ", "Global`x", " ", 
     RowBox[{"Sin", "[", "Global`x", "]"}]}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["Global`x", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", "Global`a", "]"}], "+", 
      RowBox[{"Global`a", " ", 
       RowBox[{"Sin", "[", "Global`a", "]"}]}]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.664192082995367*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{"%10", ",", 
     RowBox[{"{", 
      RowBox[{"Global`x", ",", 
       RowBox[{"-", "8"}], ",", "8"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"Global`a", ",", "0", ",", "100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Global`c", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.66419216660536*^9, 3.664192191750564*^9}},
 NumberMarks->False],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 87.2, $CellContext`c$$ = 
    1.7800000000000002`, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 100}, {
      Hold[$CellContext`c$$], -2, 2}}, Typeset`size$$ = {360., {110., 113.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$23915$$ = 0, $CellContext`c$23916$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 0, $CellContext`c$$ = -2}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$23915$$, 0], 
        Hold[$CellContext`c$$, $CellContext`c$23916$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[((-$CellContext`c$$)/$CellContext`x) 
         Cos[$CellContext`x] + ($CellContext`a$$^2 $CellContext`x^(-2)) (
          Cos[$CellContext`x]/(
          Cos[$CellContext`a$$] + $CellContext`a$$ 
           Sin[$CellContext`a$$])) + ((($CellContext`a$$ $CellContext`c$$) \
$CellContext`x^(-2)) Cos[$CellContext`a$$]) (Cos[$CellContext`x]/(
          Cos[$CellContext`a$$] + $CellContext`a$$ 
           Sin[$CellContext`a$$])) - (($CellContext`c$$ $CellContext`x^(-2)) 
         Cos[$CellContext`x]) (Sin[$CellContext`a$$]/(
         Cos[$CellContext`a$$] + $CellContext`a$$ 
          Sin[$CellContext`a$$])) + ($CellContext`c$$ $CellContext`x^(-2)) 
         Sin[$CellContext`x] + (($CellContext`a$$^2/$CellContext`x)/(
          Cos[$CellContext`a$$] + $CellContext`a$$ Sin[$CellContext`a$$])) 
         Sin[$CellContext`x] + (((($CellContext`a$$ \
$CellContext`c$$)/$CellContext`x) Cos[$CellContext`a$$])/(
          Cos[$CellContext`a$$] + $CellContext`a$$ Sin[$CellContext`a$$])) 
         Sin[$CellContext`x] - ((($CellContext`c$$/$CellContext`x) 
          Sin[$CellContext`a$$])/(
         Cos[$CellContext`a$$] + $CellContext`a$$ Sin[$CellContext`a$$])) 
        Sin[$CellContext`x], {$CellContext`x, -8, 8}], 
      "Specifications" :> {{$CellContext`a$$, 0, 100}, {$CellContext`c$$, -2, 
         2}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {169., 176.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6641920573625526`*^9, {3.6641921729219117`*^9, 3.664192194927243*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"c", " ", 
      RowBox[{"Cos", "[", "x", "]"}]}], "x"]}], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     RowBox[{"Cos", "[", "x", "]"}]}], 
    RowBox[{
     SuperscriptBox["x", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", "a", "]"}], "+", 
       RowBox[{"a", " ", 
        RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]], "+", 
   FractionBox[
    RowBox[{"a", " ", "c", " ", 
     RowBox[{"Cos", "[", "a", "]"}], " ", 
     RowBox[{"Cos", "[", "x", "]"}]}], 
    RowBox[{
     SuperscriptBox["x", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", "a", "]"}], "+", 
       RowBox[{"a", " ", 
        RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]], "-", 
   FractionBox[
    RowBox[{"c", " ", 
     RowBox[{"Cos", "[", "x", "]"}], " ", 
     RowBox[{"Sin", "[", "a", "]"}]}], 
    RowBox[{
     SuperscriptBox["x", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", "a", "]"}], "+", 
       RowBox[{"a", " ", 
        RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]], "+", 
   FractionBox[
    RowBox[{"c", " ", 
     RowBox[{"Sin", "[", "x", "]"}]}], 
    SuperscriptBox["x", "2"]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     RowBox[{"Sin", "[", "x", "]"}]}], 
    RowBox[{"x", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", "a", "]"}], "+", 
       RowBox[{"a", " ", 
        RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]], "+", 
   FractionBox[
    RowBox[{"a", " ", "c", " ", 
     RowBox[{"Cos", "[", "a", "]"}], " ", 
     RowBox[{"Sin", "[", "x", "]"}]}], 
    RowBox[{"x", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", "a", "]"}], "+", 
       RowBox[{"a", " ", 
        RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]], "-", 
   FractionBox[
    RowBox[{"c", " ", 
     RowBox[{"Sin", "[", "a", "]"}], " ", 
     RowBox[{"Sin", "[", "x", "]"}]}], 
    RowBox[{"x", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", "a", "]"}], "+", 
       RowBox[{"a", " ", 
        RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.6641921243259134`*^9, 3.664192133822745*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"c", " ", 
    RowBox[{"(", 
     RowBox[{"a", "-", "x"}], ")"}], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"a", "-", "x"}], "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    RowBox[{"Cos", "[", "x", "]"}]}], "-", 
   RowBox[{"c", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"a", "-", "x"}], "]"}]}], "-", 
   RowBox[{"a", " ", "c", " ", "x", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"a", "-", "x"}], "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["a", "2"], " ", "x", " ", 
    RowBox[{"Sin", "[", "x", "]"}]}]}], 
  RowBox[{
   SuperscriptBox["x", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", "a", "]"}], "+", 
     RowBox[{"a", " ", 
      RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.6641922405978947`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"c", " ", 
       RowBox[{"Cos", "[", "x", "]"}]}], "x"]}], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["a", "2"], " ", 
      RowBox[{"Cos", "[", "x", "]"}]}], 
     RowBox[{
      SuperscriptBox["x", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", "a", "]"}], "+", 
        RowBox[{"a", " ", 
         RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]], "+", 
    FractionBox[
     RowBox[{"a", " ", "c", " ", 
      RowBox[{"Cos", "[", "a", "]"}], " ", 
      RowBox[{"Cos", "[", "x", "]"}]}], 
     RowBox[{
      SuperscriptBox["x", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", "a", "]"}], "+", 
        RowBox[{"a", " ", 
         RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]], "-", 
    FractionBox[
     RowBox[{"c", " ", 
      RowBox[{"Cos", "[", "x", "]"}], " ", 
      RowBox[{"Sin", "[", "a", "]"}]}], 
     RowBox[{
      SuperscriptBox["x", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", "a", "]"}], "+", 
        RowBox[{"a", " ", 
         RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]], "+", 
    FractionBox[
     RowBox[{"c", " ", 
      RowBox[{"Sin", "[", "x", "]"}]}], 
     SuperscriptBox["x", "2"]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["a", "2"], " ", 
      RowBox[{"Sin", "[", "x", "]"}]}], 
     RowBox[{"x", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", "a", "]"}], "+", 
        RowBox[{"a", " ", 
         RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]], "+", 
    FractionBox[
     RowBox[{"a", " ", "c", " ", 
      RowBox[{"Cos", "[", "a", "]"}], " ", 
      RowBox[{"Sin", "[", "x", "]"}]}], 
     RowBox[{"x", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", "a", "]"}], "+", 
        RowBox[{"a", " ", 
         RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]], "-", 
    FractionBox[
     RowBox[{"c", " ", 
      RowBox[{"Sin", "[", "a", "]"}], " ", 
      RowBox[{"Sin", "[", "x", "]"}]}], 
     RowBox[{"x", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", "a", "]"}], "+", 
        RowBox[{"a", " ", 
         RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]]}], ",", "c"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6641922798832035`*^9, 3.664192287236302*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    RowBox[{"Cos", "[", "x", "]"}]}], 
   RowBox[{
    SuperscriptBox["x", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", "a", "]"}], "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["a", "2"], " ", 
    RowBox[{"Sin", "[", "x", "]"}]}], 
   RowBox[{"x", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", "a", "]"}], "+", 
      RowBox[{"a", " ", 
       RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]], "+", 
  RowBox[{"c", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"Cos", "[", "x", "]"}], "x"]}], "+", 
     FractionBox[
      RowBox[{"a", " ", 
       RowBox[{"Cos", "[", "a", "]"}], " ", 
       RowBox[{"Cos", "[", "x", "]"}]}], 
      RowBox[{
       SuperscriptBox["x", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", "a", "]"}], "+", 
         RowBox[{"a", " ", 
          RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]], "-", 
     FractionBox[
      RowBox[{
       RowBox[{"Cos", "[", "x", "]"}], " ", 
       RowBox[{"Sin", "[", "a", "]"}]}], 
      RowBox[{
       SuperscriptBox["x", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", "a", "]"}], "+", 
         RowBox[{"a", " ", 
          RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]], "+", 
     FractionBox[
      RowBox[{"Sin", "[", "x", "]"}], 
      SuperscriptBox["x", "2"]], "+", 
     FractionBox[
      RowBox[{"a", " ", 
       RowBox[{"Cos", "[", "a", "]"}], " ", 
       RowBox[{"Sin", "[", "x", "]"}]}], 
      RowBox[{"x", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", "a", "]"}], "+", 
         RowBox[{"a", " ", 
          RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]], "-", 
     FractionBox[
      RowBox[{
       RowBox[{"Sin", "[", "a", "]"}], " ", 
       RowBox[{"Sin", "[", "x", "]"}]}], 
      RowBox[{"x", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", "a", "]"}], "+", 
         RowBox[{"a", " ", 
          RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.664192289729679*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     RowBox[{"Cos", "[", "x", "]"}]}], 
    RowBox[{
     SuperscriptBox["x", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", "a", "]"}], "+", 
       RowBox[{"a", " ", 
        RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     RowBox[{"Sin", "[", "x", "]"}]}], 
    RowBox[{"x", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", "a", "]"}], "+", 
       RowBox[{"a", " ", 
        RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.6641923257134275`*^9, 3.6641923286280413`*^9}},
 NumberMarks->False],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], "+", 
     RowBox[{"x", " ", 
      RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}], 
  RowBox[{
   SuperscriptBox["x", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", "a", "]"}], "+", 
     RowBox[{"a", " ", 
      RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.664192314558923*^9, 3.6641923315639763`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"Cos", "[", "x", "]"}], "x"]}], "+", 
   FractionBox[
    RowBox[{"a", " ", 
     RowBox[{"Cos", "[", "a", "]"}], " ", 
     RowBox[{"Cos", "[", "x", "]"}]}], 
    RowBox[{
     SuperscriptBox["x", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", "a", "]"}], "+", 
       RowBox[{"a", " ", 
        RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], " ", 
     RowBox[{"Sin", "[", "a", "]"}]}], 
    RowBox[{
     SuperscriptBox["x", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", "a", "]"}], "+", 
       RowBox[{"a", " ", 
        RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]], "+", 
   FractionBox[
    RowBox[{"Sin", "[", "x", "]"}], 
    SuperscriptBox["x", "2"]], "+", 
   FractionBox[
    RowBox[{"a", " ", 
     RowBox[{"Cos", "[", "a", "]"}], " ", 
     RowBox[{"Sin", "[", "x", "]"}]}], 
    RowBox[{"x", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", "a", "]"}], "+", 
       RowBox[{"a", " ", 
        RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"Sin", "[", "a", "]"}], " ", 
     RowBox[{"Sin", "[", "x", "]"}]}], 
    RowBox[{"x", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", "a", "]"}], "+", 
       RowBox[{"a", " ", 
        RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]]}], "]"}]], "Input",
 CellChangeTimes->{3.664192362247361*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"a", "-", "x"}], ")"}], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"a", "-", "x"}], "]"}]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"a", " ", "x"}]}], ")"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"a", "-", "x"}], "]"}]}]}], 
  RowBox[{
   SuperscriptBox["x", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", "a", "]"}], "+", 
     RowBox[{"a", " ", 
      RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.664192365768117*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", "x", "]"}], "+", 
      RowBox[{"x", " ", 
       RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}], 
    RowBox[{
     SuperscriptBox["x", "2"], " "}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.0001", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6641925525068164`*^9, 3.6641926313630586`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[{{5.693012704292618, -0.0722428356515292}, {
     6.077882031154189, -0.007040011574408266}, {
     6.108319132675856, -0.0020892522115871543`}, {6.1387562341975235`, 
     0.0028142357193432716`}, {6.199630437240858, 0.012465183604620587`}, {
     6.321378843327527, 0.031047374759557312`}, {6.351815944849195, 
     0.03552392577998067}, {6.382253046370861, 0.0399266518299476}, {
     6.4431272494141965`, 0.0484988222710551}, {6.564875655500865, 
     0.06463213857331947}, {6.5953127570225325`, 0.06843963080833881}, {
     6.6257498585442, 0.07215193529121565}, {6.635631818434679, 
     0.07330939082301033}}], LineBox[CompressedData["
1:eJwBgQF+/iFib1JlAgAAABcAAAACAAAAzm7afmxCIUA2ExN8Z8SyPyqXItFU
XyFAU3JEdz1VsT8lhbwq86IhQIqKUNiEr6s/GmHw3S8qIkBwo524uiiaP5jc
VnQXOyJAYyyz3W52lj8XWL0K/0siQPpRXkDfxJI/FE+KN85tIkBlV37Eqs+G
Pw89JJFssSJA3y/jQzL6aL+OuIonVMIiQDjK9UsIxHq/DDTxvTvTIkB3gV+m
BnWEvworvuoK9SJArAZsHlMxkb8EGVhEqTgjQGkBVy9zlp6/g5S+2pBJI0Am
uzfpRuegvwIQJXF4WiNA3zJ45Op7or//BvKdR3wjQOq/0Zx9jaW/foJYNC+N
I0DSnqhftgmnv/z9vsoWniNA7TgT/hl9qL/69Iv35b8jQJ+lJKQUSKu/eHDy
jc3QI0CivjxvDJ+sv/frWCS14SNAEHe6vPDrrb/04iVRhAMkQPFfDQMxM7C/
79C/qiJHJEDoh086aGuyvxfKfnSpSSRA7l1+qIF+sr+M8a6R
     "]], LineBox[CompressedData["
1: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
MuiCh3+JxoOZK7jnRnS0CpcuTH9qlDY7AzjLkBBrpaJLua/+fXoxxQONDfkN
aSBdSP7PU6b31w3EpNVCJ6CpS9kPmtjvmPigSGW+uGU9yjm71p5hyx+5C27H
hVjogn0tIbHrbxiqK5V7YndJFyYEB1kPM0egWe7r+0m2uvAj1nMrhycSWR16
d4vFSRcuG+h0CEtEI71dXfElfroQ8t+9+Am6W2hNv8R0IkgXhCZiMkm741Fx
Ziw3a7gu+Dy6/3B6LR79Fj3fFHlLF9xaWeKSehNRqY+6b3eSLjhZ25OF85OQ
0cOTGuupujCUsd244ZKMys1+jV3Jo/DzPypr8iMj45LJvOIiXTj7YTe/zksy
+vu11/5tmS4czR7pOyiSgirla8UPVutCh8th2PJPQWfCUtb16nXhdodMx/JA
Ctp66osjmnXh6hTx9jhjKqpms46936YLg2m8J0uNU9FZG50zax26UOwz7AkJ
qWi7ToJTolsX5gbv+5T2paKa9cOfHB/qQoCuf2TXWioy1fhXV/SIUjffcA48
noaoEj57vXmsC3rBwYHvddNQ3fhTtQMjuiDTzx7z0jkNmR27Tas3pgu0Bs3T
F2LTELVL7mj4OKXeVG13pSgNNbSHZd+b0IXmd2wef5rTkPmuaza/pnThFNz6
sa87De02OC0i/kmXkufXzuX2paHGTIVVhzldCBabTq/pT0MWH3nuF37VhX2Z
DqeUHqShPWK0Ua+/U/qXjYoYtKehZp8lQ5ZfulDjs3NgrjINWT58yab7Rxdq
zflWmVPT0F6G+x/CtnSBVTrQauRmGmo1K6vuotKD1Z9fLomapyGrklseqzR6
YNTTFSolk4bovnkoi+3TA/Hn/v3f6NJQm/yF3Q6MetCvsFnkRMnby2EwXHBA
D6hCpTY6y1PR/mHBjPHDejByO/fYV6dU1M7GfImZUw9EqdFzZrFUxFD//nvo
cT0AYmB0WFEKurve39EpoAd8lY1P/pxJQbYa9WE/RfTgZEYHbccOGXWO+7Pa
y+jB7fMeIh6GZGR/zPZdvoIeeObFcaPJZMTiolvxSkUPOs501fw7mIwcd7Er
6GjpgYFJyVb8tUR0wGBnJ4SkB2aC3wxfxyag+5mzQx0GejDQKGcaUByPWMXu
WIic0wOiC0fqZGccemBmEszoqAcX6MekH+dHoaP1CY9exOjBUUvClsCIL1JN
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
It3F/7gvV1HBS1b7rK4mD1leep70QJ4K5d/POCUI81GPo/nlCkUq+NZz6/xc
+MhBszL7mhIVyH2Sb+638NHYd7WCNBUqvDn2W3r/egHyqU66EadKhY+75haL
BgqQUOSC8nB1KohLGnWPNAtQrJVHtZcGFX5u3fu9RzoKrZZ5g09qUsF603or
TItCOS8PPLbdSIXHal1GaRei0Ja8+2022lSg0hkCZnMUqnbb1IO2UOHHdGXg
5z9RaN/2tAFdHSoMLXNqsVaLRk9nRd+u16WCkx7jxjmLaHT4sd/IGn0qVN+Z
7Dp0IhqNxI98WWZABZVeJ5eR4GjkyaT/nDOkgjctQ21rfDSaVW78+2MHFd7v
Md604XI0EnzUFfqwiwqKbk+3tGdGo5WlVxf376FCulL34XUZ0Sg7QEqiFVHB
Q+DouD4lGm00DZOpM6FCYFToiVfcaFS19Jtc6V4qvGqXWmNN9HOTniMqeWYE
vwWumX6MaNSW3qpxyYIKk/MXU89sj0as4zs3R++ngshf7bUbJaPRO+0ivRBr
4r688fqHb4n9+dfqnR4HqCDImeCY3oxC/2p54HyICqmWwa/KifmPy/tlziBT
4bp29DUN/Sgkdej4gf1UKjRPCG29/k2AMlb3UHfTqeBny1eh5gpQWeFtJ1Vb
KhRMLXhmN81HUyy/6+gwFRJMjPgdqXy0Q8x46og9gd9+rV0Nm/io/kxrzKWj
VOgslrhUaMpDi+ST+iqcqSD0MEHyTSMXmbew1nWfoMK0OJJZa8JF7RtHqsRd
qJAWp3RtvyYHSb28sWCjGxWCo/RXRyWzES3Gy8bCnQoGjSL4/N9I9OKz0HCE
JxX27ctr/l4ZgT7eUJD4HUiFqWa5JVe+hqBN9sPMlSFUyNAi1fzwD0buEkU5
28KoEF5/wvzqTCD6ddbAyI1NhSRXkyWt3/zQwq1k56EYQk+MS/e50efR2lJe
dWsGFZpU0kss15CQ09EDwp+yqDDaPVvYdtoU5UmvPLT4KhXKYnR7PIJU0UbP
q+8hnwpG9VYJql/MsZHe/eVVN6mQfMcr+dkRZxz0LtKu5xbBl3zqiUN3T+K6
5P3530up0Or3rvOuuAs2m+zbuamKCs8zn+TSD3pgSuWPE1fqqGBeVWn7NdsX
p564e7u2ngpvyfF9Ter+eEA2bPpFAxX+LokMvpATgJ18xS/INlFheOQAkPjB
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
UR97VwrtdPbG/wMLVhN+
     "]], 
    LineBox[{{2.5956828024025165`, 0.07330939082301033}, {2.6279538814099177`,
      0.060856275024583274`}, {2.7609518422578816`, 0.012765509291005091`}, {
     2.7942013324698727`, 0.001410297155613471}, {
     2.8274508226818638`, -0.009678984636782293}, {
     2.8939498031058455`, -0.03106045905542533}, {
     3.0269477639538094`, -0.07063325747934646}, {
     3.0327477252274986`, -0.0722428356515292}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0.0001, 100}, {-0.0722428356515292, 0.07330939082301033}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.664192587909382*^9, 3.6641926338050528`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"a", "-", "x"}], ")"}], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"a", "-", "x"}], "]"}]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"a", " ", "x"}]}], ")"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"a", "-", "x"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6641929252261147`*^9, 3.664192943149332*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"a", "-", "x"}], "]"}]}], "-", 
  RowBox[{"x", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"a", "-", "x"}], "]"}]}], "-", 
  RowBox[{"Sin", "[", 
   RowBox[{"a", "-", "x"}], "]"}], "-", 
  RowBox[{"a", " ", "x", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"a", "-", "x"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.6641929458206577`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"10", 
      RowBox[{"(", 
       RowBox[{"1", "-", "x"}], ")"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"10", "\[Times]", 
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}]}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         SuperscriptBox["10", "2"], "x"}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"10", "\[Times]", 
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}]}], "]"}]}]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", "x", ")"}], "2"], " "}]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.0001", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.664193023280773*^9, 3.6641931050137606`*^9}, {
  3.6641994416332607`*^9, 3.6641995261066813`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[{{5.989586868082213, -7.3021735356221305`}, {
     6.015789825516168, -3.165840379035119}, {6.046835928335179, 
     1.9856749219377616`}, {6.077882031154189, 6.895774703609739}, {
     6.080642030803899, 7.270415311740501}}], 
    LineBox[{{10.037984340819033`, 7.270415311740501}, {10.039885745892411`, 
     7.160366863392589}, {10.07290261830801, 4.491152849712518}, {
     10.105919490723608`, 1.3559041000163883`}, {
     10.138936363139207`, -1.9048908669230222`}, {
     10.169749848161825`, -4.75076572525658}, {
     10.200563333184444`, -7.133370889876339}, {
     10.203625762964652`, -7.3021735356221305`}}], 
    LineBox[{{11.90001212365374, 7.270415311740501}, {11.926118494451057`, 
     5.961484631923234}, {11.956931979473676`, 3.864473803022356}, {
     11.987745464496294`, 1.415202938664306}, {
     12.018558949518912`, -1.1544583396702492`}, {
     12.049372434541532`, -3.602522044100376}, {
     12.08018591956415, -5.699657661020091}, {
     12.110999404586767`, -7.250663205210547}, {
     12.112910812953606`, -7.3021735356221305`}}], LineBox[CompressedData["
1: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
GlZg14klCkuf7VGngs7xxmcFt1NxvKdwsb8mFUbGL1t9XmhF2zYfbP+ylQoL
P/a43B0dQYV/fQXEdKkgsXjHktxrE4gTnrOWuZMKp2uv1mR5z6BO0uTeiD1U
0G4weGXuOIs85/T+a0JU0Hhr/UfZYBqJvne9pGxIhXZazB7e+nEUdSrtoR2J
CrrmZ4w0PfuR5pr+jy+oVGj7Ldd1kVSLPn/fWDfEpALsnql/5FKD6QF2XN0j
VKhqi9SVFuvHfw0SpS8do8Le533SlUM87DL4e2ueFRUCTN7YHhOZxkJPFGiL
TlLhk5BdvzLM4vCjZmdJp6hgza5+wPpvBquJhd+87UiFtFNdrisuTOAMXP28
xpkKwneFMoL4I5jkLlEid4HgcZCy6dfuNtykYdppeZEKfz2pTd6Bz9DZ34FC
T3yo8LSyxntdfgeavV+k8s+PCoNbRYqipkfRHWMBpBVAhcaFss235CaRysxe
K9dgKvyUi/YQvzWD3r255JMRSoXLU5e5d3gz6KBdRtTMPSp8tQmctSBPobrV
Y5kQQQX7xMTYpJ9jKODS9TbXKCrElOmEC2X2IL2m5WJP46jQnN6i9z6mAnXu
TtKrSyTq4/37wApaPY6I0bMWTqbChttWu2zQADaeLQ7Sf0mFGx4ZMl6bxjHf
8sg7hzQqqF1KfZk4OoWTc7uaHr2ngr7bUeOv/Bl8dK3n4rIMKry81qlZIjSD
l/gt2TrziQphSYadp7cRvP5GmmlhKpwhac979ozgU7DxqlURFV7ojUpPpbZh
ucTMl3e+UsHcNol9rSAAlQqS6nA5FbTKq5zGDduR18mGuZHvVCjjRmjaqYwi
jaLTG9fXUcELpJS1TCdQg+oUk9NABZeTif6fJqdRcMBN74AWKtgujnNKKp1B
Bl3ySR9bqVAUxHNOSZpCPUYvK7s7qSD/7WRv41ceikrePSHXSwWZhdLVgc79
yFSkXIU8SAX1ga/r0qvq0LTDf6beo1SQmhsJsvtVhV+W9l94NU7o12LzUvnZ
Hmyx6XJcyxQVutaZi/SUjeFlIeJfJeapEPd8et2RmUn8qS92ZL8QDaj6JqmV
12awI2WLgssSGiiEo9tUpRlifss9lLiMBv3+IYVu9RO4Qpx+rkaSBjoGQfJ6
ooQfz/2JXLScWFsv17Z70om1qpzz9eRo0CaAglv2ZuGWrQu99mtoME/zGFpU
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
CeeGb8UZreVi7Z/hiFeMhLGGdB9jdt4PUMzOXCNOAs+jhPeHYsdwnXXDjh0S
JMSjnKj+CxwsHj3x9pgkCTeuu9RnDvVh044lCuekSNDvzfJsfv0DR63dHO22
gYShntphw/BkPMQcknohQ8L82rc3d2rVIOVA0+B3ciQ85+au17ToRk4VN1aX
y5NQ4RXdv/fECMoWevqoV4GEciUpBUuhMcR3KHUxzzYWL611Shl/xpC2W7m3
mBIJ7SevNIx1cFFAVj+fynZ2fyA+73zxMKr7zXdLdwcJHPXt6ftCu5D4dslp
y10kNBm9/ibiU43M7NSu3NpNgv3nxcJnbmbg6FiK+0yNBPlf0u+z1rbgoa6L
Nql7SZi9rHXtsn0/Vpb07/2K2PO6Z4Zq/DjYyTjGrGc/CXxKMv9+vxzD2Y/z
mv9pkKDVFCGb+HYM81W3MKKHSEhqulq4v5CDtRdNfVPWIuFlA/qQu2EAB2it
0NPRZvFxOSpU3d+K6zwUSyx0SOjkscZqx3KwOD6qefMYCca+wQdtHCuR2ZRl
ztPjJOzmc5g//roTxexwV0sxYPHCgejNryE0bB+cXkqQQBtqld5+wkXK8RlK
3RQJaVLJpmPsPO/U+y1+liGhjbe03ngh239IjcquNiah8nzpj8iUEcRnIhSh
dJKEbfvQlaJ5PUj72UaJo6dIiHE73R0jVIcCauCZuSm7XrFgjfCNcFy35MRy
1zMkiOQz0rUWjVj86NX7TyxIOCwfqOv0rReb3XkolHyWhEVHVqyK7B3FMbkJ
niVWJJiMD0m/PzKGR/4Wz+myJmGNevVx3vgxvF21y3nGlsXPSSTt+VIufgcG
zWMXSCjjt/SW+T6IVY7k7Ou7SIJvslqu2mQHTtPfGtZ8iQTDBKrnQ1Il3vnf
S55vjiTIVDivjTubgd6bCZ0pvkpC36IZLYNjP5CqtVP+p2skFPYavf860os+
XOrZmOpMgkX+13cBzqNozw3CK8aF/V/59RObF42hj7c/9wXfZM8f0jXpTmTr
o7+i9iM3Em7N55uLArnoU1DIm7seJEgk37wamDSM9oUsXOTqSYLfiNxIgWM3
wlHX7S55kVAanphGu9YhSOqrOOdNwqDuxRhTUUmc+55SMvEl4XbnhZ6VrnX4
QE7+Q0N/Ep4sWkCEXOjGecXKE1r3SbiuDB0hYcP4YFUYue8BCeEL1otVeXFx
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
yJtj5uWNOHtdVVC4PQ3+PrENLV09+M/zQetsBxq2eLb03R4YxiorBQ40Xmb5
bn/+aVgTB9s/kFz96woNO+pESU8uB8cvVBtZdo0GK+uGD9VWI7jXi8zf4kyD
66odQx1verHUXPvnR1xoiPZsHG4t/IFNXH3sLW6y/O/lb1h1Ows//xN5yM2N
hqKhLy/sfcpR7WUsHuxBw+nbR0LceTrQUk7DWIYnDa+qhYsr7AaQjvVEcY0X
DTMHuufa8nCQV8/iUI43Dd+MzoQdFmbnD9NNjgv9WLx+8/qM6HDQ7A+No3L3
WP1IFiS2+A+i3YzJ+oMBNLhs+tsm69eJLn9z+n3qIQ1/J/fPN+usRm+PPSpz
DqTh8WjR2LukODz4JSHiyWMaWk++inLd1oBlNIuvpT6lwfDv7alG2R5sltOh
V/GcxWs1V1mDGMbBajMbB1/SELFUO3SM7V/q01f9FQilYX5ahbFlBwcvV1au
lnpFgzmzQLP3/gg+nqATsy+Chq06nwqlhfuwr9xZ1/9es/xVvTQVOtOMCyPc
iCvRNHyxe3biH+Ri3nUv5R/G0pD9IWkoXqcU7XuePifxDQ1/Tv39l6Lajq6t
qKr7kkADNaerQ+1zP3oXMBjfnUSDxNRZ08Weo4izQMCDJ4X1U82JhXe4HKTg
JWm09h0Nn0+nZVXpctBZXrVtu9PZ/XUKX95WD6JwF5KfzKDh5LEfPA8WdqGW
yQtN9pk0sK1DbQyqQWKXfZL9slg+8k+mWKu/xORopFdMNg0iHdun0h9+xwHn
8cn8HBpix6vDTc9346/dDdvbPrP/ixN3XZ41hOebTgj+zWf1m1krnHCdgzV+
LG5bVUTDrzqL7D1VHOxKb0rf/oUGUfOvD62SR3BmtYafXikN76Is/L5f6sM/
dU3MrMtomPe1a+1RhVas+MVJ1auChqio1+kB2/OxzcFHiyOqaLiwX7Jv68pi
FI0TurK/0aDPn1+hZt+GOvYUZzbWsvWgcpei6/J+JJHeEfDrOw2NX+oXvucb
RUZKM5bCjaz+fe4PcMo5KDB+1d6tP2i4qn197R2WX5WyyiLaLTRYXwxV7RUe
QgsidPot2mioLBq4E3q3Cx2SOIvdOtj3ux/xiA+sRe7P3IKCu9j4t5+891vP
Gmcvf2n9oYcGhcUfx7dP1uI/99P31/ax98+On/GO78IqC6pWcQdoeF7hI7dU
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
txr/D04L1LY=
     "]], 
    LineBox[{{5.054585655053998, 7.270415311740501}, {5.084406740945855, 
     1.5136878509602083`}, {5.115452843764865, -4.550513591988665}, {
     5.130820704553145, -7.3021735356221305`}}], 
    LineBox[{{10.969662942657553`, -7.3021735356221305`}, {
     10.970900458749897`, -7.246649797835184}, {
     11.001713943772515`, -5.191285493081129}, {
     11.032527428795133`, -2.6598382579915407`}, {11.06334091381775, 
     0.10732127375484692`}, {11.094154398840368`, 2.8490296988491823`}, {
     11.124967883862986`, 5.307963306672096}, {11.155781368885604`, 
     7.25477352862286}, {11.15616551000508, 7.270415311740501}}], 
    LineBox[{{13.131574459159596`, 7.270415311740501}, {13.146190337999801`, 
     6.985091129592922}, {13.179583593916352`, 5.566848007317215}, {
     13.212976849832902`, 3.54238046402944}, {13.24637010574945, 
     1.137793801824739}, {13.279763361666, -1.3800712883224227`}, {
     13.31315661758255, -3.733236496146486}, {
     13.3465498734991, -5.663261662273926}, {
     13.379943129415649`, -6.959614890942716}, {
     13.401814918097275`, -7.3021735356221305`}}], 
    LineBox[{{8.481492038638054, -7.3021735356221305`}, {
     8.488092742359274, -6.736387072765539}, {
     8.521109614774874, -3.203564628201475}, {8.554126487190473, 
     0.6466202350868205}, {8.58714335960607, 4.39763412064913}, {
     8.61633547822003, 7.270415311740501}}], 
    LineBox[{{12.518004322000131`, 7.270415311740501}, {12.545111731501912`, 
     6.172067327172788}, {12.57850498741846, 4.146225870321002}, {
     12.611898243335009`, 1.6743132663097484`}, {
     12.64529149925156, -0.9690081029773673}, {
     12.67868475516811, -3.491645982927145}, {
     12.712078011084659`, -5.616339123676096}, {
     12.745471267001207`, -7.11111523131376}, {
     12.754540464658378`, -7.3021735356221305`}}], 
    LineBox[{{11.589855247320926`, -7.3021735356221305`}, {
     11.617983644224877`, -5.738946230969192}, {
     11.648797129247495`, -3.49646631721045}, {
     11.679610614270114`, -0.9373748639940859}, {11.710424099292732`, 
     1.6963030381625692`}, {11.74123758431535, 4.15681104795967}, {
     11.772051069337968`, 6.213955170072606}, {11.794307074073165`, 
     7.270415311740501}}], 
    LineBox[{{6.3012917588590645`, 7.270415311740501}, {6.321378843327527, 
     4.350353710188756}, {6.351815944849195, -0.4296943203964452}, {
     6.382253046370861, -5.124856174167102}, {
     6.398100073253036, -7.3021735356221305`}}], 
    LineBox[{{8.170293689598788, 7.270415311740501}, {8.190940890618887, 
     5.167350366770032}, {8.223957763034486, 1.2755530354202693`}, {
     8.256974635450085, -2.7223201634872702`}, {
     8.289991507865683, -6.395526820159072}, {
     8.300117807687952, -7.3021735356221305`}}], 
    LineBox[{{10.347712087849036`, -7.3021735356221305`}, {
     10.354630758297533`, -6.904911531345693}, {
     10.385444243320151`, -4.497755450205475}, {
     10.416257728342769`, -1.6824916814929822`}, {10.447071213365387`, 
     1.2741562339584283`}, {10.477884698388007`, 4.093765690929631}, {
     10.508698183410624`, 6.512414650214427}, {10.521725102491525`, 
     7.270415311740501}}], 
    LineBox[{{12.209141633242714`, -7.3021735356221305`}, {
     12.211179172336415`, -7.247231577064306}, {
     12.244572428252965`, -5.553324306342829}, {
     12.277965684169516`, -3.256857296515779}, {
     12.311358940086064`, -0.614058336529995}, {12.344752196002613`, 
     2.082090678103132}, {12.378145451919163`, 4.534316511326702}, {
     12.411538707835714`, 6.4738144624946115`}, {12.433416721737697`, 
     7.270415311740501}}], 
    LineBox[{{7.236285075064001, -7.3021735356221305`}, {
     7.264928990499213, -3.6697232090045633`}, {7.295366092020879, 
     0.4937397261521324}, {7.325803193542547, 4.577422492695984}, {
     7.348377456059724, 7.270415311740501}}], 
    LineBox[{{11.280588641550615`, 7.270415311740501}, {11.309848793998697`, 
     5.48264855700247}, {11.340662279021315`, 3.0952329219794197`}, {
     11.371475764043932`, 0.4300252710853391}, {
     11.40228924906655, -2.261169404679645}, {
     11.433102734089168`, -4.72546626114047}, {
     11.463916219111786`, -6.7326490387500275`}, {
     11.476781951341023`, -7.3021735356221305`}}], 
    LineBox[{{8.793127875528095, 7.270415311740501}, {8.818261466515262, 
     4.911557857939422}, {8.851278338930861, 1.3074945687960866`}, {
     8.884295211346458, -2.4104620953543696`}, {
     8.917312083762058, -5.841526559555483}, {
     8.93467701594032, -7.3021735356221305`}}], 
    LineBox[{{12.823945599822487`, -7.3021735356221305`}, {
     12.845651034750857`, -6.649855819449083}, {
     12.879044290667405`, -4.9188122088697055`}, {
     12.912437546583956`, -2.6547687862628804`}, {
     12.945830802500506`, -0.10990164998869204`}, {12.979224058417055`, 
     2.433979574926539}, {13.012617314333603`, 4.696623466170978}, {
     13.046010570250154`, 6.4301966117438}, {13.073620421524142`, 
     7.270415311740501}}], 
    LineBox[{{3.8065787858429756`, 7.270415311740501}, {3.8249355290415927`, 
     2.584985310860264}, {3.858185019253584, -6.035768987021595}, {
     3.8635704050652127`, -7.3021735356221305`}}], 
    LineBox[{{9.725578682030594, -7.3021735356221305`}, {
     9.742733894152023, -6.049625180327741}, {
     9.775750766567622, -3.0040921310675692`}, {9.80876763898322, 
     0.3442946628181973}, {9.841784511398819, 3.633155354960997}, {
     9.874801383814418, 6.5089448459117225`}, {9.886462602489651, 
     7.270415311740501}}], 
    LineBox[{{9.103604866032255, -7.3021735356221305`}, {
     9.115413318255648, -6.370206987293028}, {
     9.148430190671247, -3.0977101785329135`}, {9.181447063086846, 
     0.4845973292189961}, {9.214463935502444, 3.9890841454628254`}, {
     9.247480807918043, 7.03926546692299}, {9.250841455620826, 
     7.270415311740501}}], 
    LineBox[{{6.612598499065751, -7.3021735356221305`}, {
     6.6257498585442, -5.566753759220262}, {
     6.656186960065867, -1.0779098147064807`}, {6.686624061587534, 
     3.468663580401273}, {6.714253466575604, 7.270415311740501}}], 
    LineBox[{{10.659305318157825`, 7.270415311740501}, {10.662765608523715`, 
     7.093752292801389}, {10.693579093546333`, 4.863477673366221}, {
     10.724392578568951`, 2.1892838718507677`}, {
     10.755206063591569`, -0.6751871636711426}, {
     10.786019548614187`, -3.4598828713762546`}, {
     10.816833033636804`, -5.903782293882106}, {
     10.839807096055143`, -7.3021735356221305`}}], 
    LineBox[{{5.678097633483206, 7.270415311740501}, {5.7053287973260645`, 
     2.6805449057987727`}, {5.736374900145075, -2.750454733100257}, {
     5.764023077391264, -7.3021735356221305`}}], 
    LineBox[{{7.547672808836694, 7.270415311740501}, {7.569300005715885, 
     4.763289750625821}, {7.599737107237552, 0.8271635197378724}, {
     7.63017420875922, -3.1532705053286705`}, {
     7.660611310280887, -6.813448342865302}, {
     7.665557329143223, -7.3021735356221305`}}], 
    LineBox[{{4.430745678082235, 7.270415311740501}, {4.432438581746636, 
     6.9237867719876265`}, {4.463484684565646, -0.0013349855377620407`}, {
     4.494530787384656, -6.830657603122265}, {
     4.496935456067994, -7.3021735356221305`}}], 
    LineBox[{{9.415871502765624, 7.270415311740501}, {9.445582042411635, 
     4.688107748043371}, {9.478598914827234, 1.3338653099206181`}, {
     9.511615787242832, -2.140648972939051}, {
     9.544632659658431, -5.360732485338787}, {
     9.569089907186981, -7.3021735356221305`}}], 
    LineBox[{{2.8703333819361845`, -7.3021735356221305`}, {
     2.8939498031058455`, 0.862165981673434}, {2.9130760140243406`, 
     7.270415311740501}}], 
    LineBox[{{6.924663444238917, 7.270415311740501}, {6.930120873760872, 
     6.623751360490996}, {6.96055797528254, 2.4427279907230797`}, {
     6.990995076804207, -1.9253764037933854`}, {
     7.021432178325874, -6.079451550569352}, {
     7.031880344679412, -7.3021735356221305`}}], 
    LineBox[{{7.858644396539137, -7.3021735356221305`}, {
     7.873671020932558, -5.7274735856532715`}, {
     7.904108122454225, -2.038089688949567}, {7.934545223975892, 
     1.8095698983749933`}, {7.96498232549756, 5.462159219642916}, {
     7.982596096242379, 7.270415311740501}}], 
    LineBox[{{4.118587635337699, -7.3021735356221305`}, {
     4.1219775535565315`, -6.541904287276951}, {4.153023656375542, 
     0.9369129708190302}, {4.18003701124449, 7.270415311740501}}], 
    LineBox[{{2.5581584063887965`, 7.270415311740501}, {2.561454900985936, 
     6.025346267194103}, {2.5947043911979266`, -6.860526503435213}, {
     2.595946739194402, -7.3021735356221305`}}], 
    LineBox[{{5.366187747415945, -7.3021735356221305`}, {
     5.39486776913596, -2.1333843124795804`}, {5.42591387195497, 
     3.600472737678958}, {5.4473043597707855`, 7.270415311740501}}], 
    LineBox[{{3.182461325315993, 7.270415311740501}, {3.1931952150137644`, 
     4.005712903670522}, {3.226444705225755, -6.332062031061557}, {
     3.2298610257990483`, -7.3021735356221305`}}], 
    LineBox[{{4.742576394443452, -7.3021735356221305`}, {
     4.742899609936741, -7.24156092939781}, {
     4.773945712755751, -0.8079230521496518}, {4.804991815574761, 
     5.619258461942483}, {4.813812925807881, 7.270415311740501}}], 
    LineBox[{{2.2456740083007887`, -7.3021735356221305`}, {2.262209489078017, 
     0.01029159880142045}, {2.279117748054768, 7.270415311740501}}], 
    LineBox[{{1.620303088876819, -7.3021735356221305`}, {
     1.6255971646714433`, -4.050670406969101}, {1.644358197386491, 
     7.270415311740501}}], 
    LineBox[{{1.3070891056854554`, 7.270415311740501}, {
     1.3188999714908476`, -1.789107790856051}, {
     1.3264841088439332`, -7.3021735356221305`}}], 
    LineBox[{{3.494680708607935, -7.3021735356221305`}, {3.525690117133674, 
     1.5062905712318906`}, {3.546739219600749, 7.270415311740501}}], 
    LineBox[{{0.9929160278336715, -7.3021735356221305`}, {1.0074571157763133`,
      7.270415311740501}}], 
    LineBox[{{0.6763573000437795, 7.270415311740501}, {
     0.6866772494730481, -7.3021735356221305`}}], 
    LineBox[{{0.3521196852831487, -7.3021735356221305`}, {0.3574235427510166, 
     7.270415311740501}}], 
    LineBox[{{1.9332720762802165`, 7.270415311740501}, {
     1.9616639246188587`, -7.3021735356221305`}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{1118., Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0.0001, 100}, {-7.3021735356221305`, 7.270415311740501}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6641930411489677`*^9, 3.6641931144809556`*^9, {3.664199448266622*^9, 
   3.6641995290265245`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Integral]", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["F", "A"], "\[Times]", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a", "-", "x"}], ")"}], 
          RowBox[{"Cos", "[", 
           RowBox[{"a", "-", "x"}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"a", " ", "x"}]}], ")"}], 
          RowBox[{"Sin", "[", 
           RowBox[{"a", "-", "x"}], "]"}]}]}], 
        SuperscriptBox["x", "2"]]}], "+", 
      RowBox[{
       FractionBox["1", "A"], "\[Times]", 
       FractionBox[
        SuperscriptBox["a", "2"], 
        SuperscriptBox["x", "2"]], "\[Times]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", "x", "]"}], "+", 
         RowBox[{"x", " ", 
          RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}]}], ")"}], "2"], 
   "\[Times]", 
   SuperscriptBox["x", "2"], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.6642112068809395`*^9, 3.6642113685843534`*^9}, {
  3.6642114359907656`*^9, 3.6642114627451525`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"4", " ", 
    SuperscriptBox["A", "2"], " ", "x"}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     SuperscriptBox["a", "4"]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["F", "2"]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["a", "2"], " ", 
     SuperscriptBox["F", "2"]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["a", "4"], " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["F", "2"], " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["a", "2"], " ", 
     SuperscriptBox["F", "2"], " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["a", "3"], " ", "F", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["x", "2"]}], ")"}], " ", 
     RowBox[{"Cos", "[", "a", "]"}]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["a", "2"], " ", "F", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "a"}], "+", "x"}], ")"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"a", "-", 
       RowBox[{"2", " ", "x"}]}], "]"}]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["F", "2"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"a", "-", "x"}], ")"}]}], "]"}]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["a", "2"], " ", 
     SuperscriptBox["F", "2"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"a", "-", "x"}], ")"}]}], "]"}]}], "+", 
    RowBox[{"2", " ", "a", " ", 
     SuperscriptBox["F", "2"], " ", "x", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"a", "-", "x"}], ")"}]}], "]"}]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["a", "4"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "x"}], "]"}]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["a", "2"], " ", "F", " ", 
     RowBox[{"Sin", "[", "a", "]"}]}], "-", 
    RowBox[{"4", " ", 
     SuperscriptBox["a", "2"], " ", "F", " ", 
     SuperscriptBox["x", "2"], " ", 
     RowBox[{"Sin", "[", "a", "]"}]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["a", "2"], " ", "F", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"a", "-", 
       RowBox[{"2", " ", "x"}]}], "]"}]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["a", "3"], " ", "F", " ", "x", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"a", "-", 
       RowBox[{"2", " ", "x"}]}], "]"}]}], "+", 
    RowBox[{"4", " ", "a", " ", 
     SuperscriptBox["F", "2"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"a", "-", "x"}], ")"}]}], "]"}]}], "-", 
    RowBox[{
     SuperscriptBox["F", "2"], " ", "x", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"a", "-", "x"}], ")"}]}], "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     SuperscriptBox["F", "2"], " ", "x", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"a", "-", "x"}], ")"}]}], "]"}]}], "-", 
    RowBox[{
     SuperscriptBox["a", "4"], " ", "x", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "x"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.6642114655464106`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%6", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"4", " ", 
    SuperscriptBox["A", "2"], " ", "x"}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     SuperscriptBox["a", "4"]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["F", "2"]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["a", "2"], " ", 
     SuperscriptBox["F", "2"]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["a", "4"], " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["F", "2"], " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["a", "2"], " ", 
     SuperscriptBox["F", "2"], " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["a", "3"], " ", "F", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["x", "2"]}], ")"}], " ", 
     RowBox[{"Cos", "[", "a", "]"}]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["a", "2"], " ", "F", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "a"}], "+", "x"}], ")"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"a", "-", 
       RowBox[{"2", " ", "x"}]}], "]"}]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["F", "2"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"a", "-", "x"}], ")"}]}], "]"}]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["a", "2"], " ", 
     SuperscriptBox["F", "2"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"a", "-", "x"}], ")"}]}], "]"}]}], "+", 
    RowBox[{"2", " ", "a", " ", 
     SuperscriptBox["F", "2"], " ", "x", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"a", "-", "x"}], ")"}]}], "]"}]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["a", "4"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "x"}], "]"}]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["a", "2"], " ", "F", " ", 
     RowBox[{"Sin", "[", "a", "]"}]}], "-", 
    RowBox[{"4", " ", 
     SuperscriptBox["a", "2"], " ", "F", " ", 
     SuperscriptBox["x", "2"], " ", 
     RowBox[{"Sin", "[", "a", "]"}]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["a", "2"], " ", "F", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"a", "-", 
       RowBox[{"2", " ", "x"}]}], "]"}]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["a", "3"], " ", "F", " ", "x", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"a", "-", 
       RowBox[{"2", " ", "x"}]}], "]"}]}], "+", 
    RowBox[{"4", " ", "a", " ", 
     SuperscriptBox["F", "2"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"a", "-", "x"}], ")"}]}], "]"}]}], "-", 
    RowBox[{
     SuperscriptBox["F", "2"], " ", "x", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"a", "-", "x"}], ")"}]}], "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     SuperscriptBox["F", "2"], " ", "x", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"a", "-", "x"}], ")"}]}], "]"}]}], "-", 
    RowBox[{
     SuperscriptBox["a", "4"], " ", "x", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "x"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.664211476967611*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "b", "a"], 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["F", "A"], "\[Times]", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a", "-", "x"}], ")"}], 
          RowBox[{"Cos", "[", 
           RowBox[{"a", "-", "x"}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"a", " ", "x"}]}], ")"}], 
          RowBox[{"Sin", "[", 
           RowBox[{"a", "-", "x"}], "]"}]}]}], 
        SuperscriptBox["x", "2"]]}], "+", 
      RowBox[{
       FractionBox["1", "A"], "\[Times]", 
       FractionBox[
        SuperscriptBox["a", "2"], 
        SuperscriptBox["x", "2"]], "\[Times]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", "x", "]"}], "+", 
         RowBox[{"x", " ", 
          RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}]}], ")"}], "2"], 
   "\[Times]", 
   SuperscriptBox["x", "2"], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.664211550296196*^9, 3.6642115679288073`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     SuperscriptBox["A", "2"]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox["a", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"]}]}], ")"}], " ", "F", " ", 
          RowBox[{"Cos", "[", "a", "]"}]}], "+", 
         RowBox[{"2", " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["a", "2"], "+", 
            SuperscriptBox["F", "2"], "-", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "a"}], "]"}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"3", " ", "F"}], "+", 
               RowBox[{"a", " ", 
                RowBox[{"Cos", "[", "a", "]"}]}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]}], ")"}]}], "-", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", " ", "b"}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["a", "4"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["a", "4"], " ", 
          SuperscriptBox["b", "2"]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["F", "2"]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox["F", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["b", "2"], " ", 
          SuperscriptBox["F", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox["b", "2"], " ", 
          SuperscriptBox["F", "2"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["a", "3"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["b", "2"]}], ")"}], " ", "F", " ", 
          RowBox[{"Cos", "[", "a", "]"}]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["a", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a"}], "-", "b"}], ")"}], " ", "F", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"a", "-", 
            RowBox[{"2", " ", "b"}]}], "]"}]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["F", "2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"2", " ", "a"}], "-", 
            RowBox[{"2", " ", "b"}]}], "]"}]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox["F", "2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"2", " ", "a"}], "-", 
            RowBox[{"2", " ", "b"}]}], "]"}]}], "+", 
         RowBox[{"2", " ", "a", " ", "b", " ", 
          SuperscriptBox["F", "2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"2", " ", "a"}], "-", 
            RowBox[{"2", " ", "b"}]}], "]"}]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["a", "4"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "b"}], "]"}]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["a", "2"], " ", "F", " ", 
          RowBox[{"Sin", "[", "a", "]"}]}], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox["b", "2"], " ", "F", " ", 
          RowBox[{"Sin", "[", "a", "]"}]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["a", "2"], " ", "F", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"a", "-", 
            RowBox[{"2", " ", "b"}]}], "]"}]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["a", "3"], " ", "b", " ", "F", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"a", "-", 
            RowBox[{"2", " ", "b"}]}], "]"}]}], "+", 
         RowBox[{"4", " ", "a", " ", 
          SuperscriptBox["F", "2"], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"2", " ", "a"}], "-", 
            RowBox[{"2", " ", "b"}]}], "]"}]}], "-", 
         RowBox[{"b", " ", 
          SuperscriptBox["F", "2"], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"2", " ", "a"}], "-", 
            RowBox[{"2", " ", "b"}]}], "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", "b", " ", 
          SuperscriptBox["F", "2"], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"2", " ", "a"}], "-", 
            RowBox[{"2", " ", "b"}]}], "]"}]}], "-", 
         RowBox[{
          SuperscriptBox["a", "4"], " ", "b", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "b"}], "]"}]}]}], ")"}]}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"b", "\[NotEqual]", "0"}], "&&", 
      RowBox[{
       RowBox[{"a", " ", "b"}], "\[NotEqual]", 
       SuperscriptBox["b", "2"]}], "&&", 
      RowBox[{
       RowBox[{"Re", "[", 
        FractionBox["b", 
         RowBox[{"a", "-", "b"}]], "]"}], "\[GreaterEqual]", "0"}]}], ")"}], "||", 
    RowBox[{
     RowBox[{"Re", "[", 
      FractionBox["b", 
       RowBox[{"a", "-", "b"}]], "]"}], "<", 
     RowBox[{"-", "1"}]}], "||", 
    RowBox[{
     FractionBox["b", 
      RowBox[{"a", "-", "b"}]], "\[NotElement]", "Reals"}]}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.6642115920172925`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   FractionBox["1", 
    SuperscriptBox["A", "2"]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      FractionBox["1", "4"], " ", 
      SuperscriptBox["a", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["a", "2"]}]}], ")"}], " ", "F", " ", 
         RowBox[{"Cos", "[", "a", "]"}]}], "+", 
        RowBox[{"2", " ", "a", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["a", "2"], "+", 
           SuperscriptBox["F", "2"], "-", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "a"}], "]"}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"3", " ", "F"}], "+", 
              RowBox[{"a", " ", 
               RowBox[{"Cos", "[", "a", "]"}]}]}], ")"}], " ", 
            RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]}], ")"}]}], "-", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"4", " ", "b"}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         SuperscriptBox["a", "4"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["a", "4"], " ", 
         SuperscriptBox["b", "2"]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["F", "2"]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox["F", "2"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["b", "2"], " ", 
         SuperscriptBox["F", "2"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox["b", "2"], " ", 
         SuperscriptBox["F", "2"]}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["a", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["b", "2"]}], ")"}], " ", "F", " ", 
         RowBox[{"Cos", "[", "a", "]"}]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["a", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "a"}], "-", "b"}], ")"}], " ", "F", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"a", "-", 
           RowBox[{"2", " ", "b"}]}], "]"}]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["F", "2"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"2", " ", "a"}], "-", 
           RowBox[{"2", " ", "b"}]}], "]"}]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox["F", "2"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"2", " ", "a"}], "-", 
           RowBox[{"2", " ", "b"}]}], "]"}]}], "+", 
        RowBox[{"2", " ", "a", " ", "b", " ", 
         SuperscriptBox["F", "2"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"2", " ", "a"}], "-", 
           RowBox[{"2", " ", "b"}]}], "]"}]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["a", "4"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "b"}], "]"}]}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["a", "2"], " ", "F", " ", 
         RowBox[{"Sin", "[", "a", "]"}]}], "-", 
        RowBox[{"4", " ", 
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox["b", "2"], " ", "F", " ", 
         RowBox[{"Sin", "[", "a", "]"}]}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["a", "2"], " ", "F", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"a", "-", 
           RowBox[{"2", " ", "b"}]}], "]"}]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["a", "3"], " ", "b", " ", "F", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"a", "-", 
           RowBox[{"2", " ", "b"}]}], "]"}]}], "+", 
        RowBox[{"4", " ", "a", " ", 
         SuperscriptBox["F", "2"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"2", " ", "a"}], "-", 
           RowBox[{"2", " ", "b"}]}], "]"}]}], "-", 
        RowBox[{"b", " ", 
         SuperscriptBox["F", "2"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"2", " ", "a"}], "-", 
           RowBox[{"2", " ", "b"}]}], "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", "b", " ", 
         SuperscriptBox["F", "2"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"2", " ", "a"}], "-", 
           RowBox[{"2", " ", "b"}]}], "]"}]}], "-", 
        RowBox[{
         SuperscriptBox["a", "4"], " ", "b", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "b"}], "]"}]}]}], ")"}]}]}], ")"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6642116275271997`*^9, 3.6642116446898837`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"4", " ", 
    SuperscriptBox["A", "2"]}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["a", "2"]}]}], ")"}], " ", "F", " ", 
        RowBox[{"Cos", "[", "a", "]"}]}], "+", 
       RowBox[{"2", " ", "a", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["a", "2"], "+", 
          SuperscriptBox["F", "2"], "-", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "a"}], "]"}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", "F"}], "+", 
             RowBox[{"a", " ", 
              RowBox[{"Cos", "[", "a", "]"}]}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
    RowBox[{
     FractionBox["1", "b"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["a", "4"]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["b", "2"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["F", "2"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["F", "2"]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["b", "2"], " ", 
        SuperscriptBox["F", "2"]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["b", "2"], " ", 
        SuperscriptBox["F", "2"]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["a", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["b", "2"]}], ")"}], " ", "F", " ", 
        RowBox[{"Cos", "[", "a", "]"}]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["a", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "a"}], "-", "b"}], ")"}], " ", "F", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"a", "-", 
          RowBox[{"2", " ", "b"}]}], "]"}]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["F", "2"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"a", "-", "b"}], ")"}]}], "]"}]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["F", "2"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"a", "-", "b"}], ")"}]}], "]"}]}], "-", 
       RowBox[{"2", " ", "a", " ", "b", " ", 
        SuperscriptBox["F", "2"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"a", "-", "b"}], ")"}]}], "]"}]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["a", "4"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "b"}], "]"}]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["a", "2"], " ", "F", " ", 
        RowBox[{"Sin", "[", "a", "]"}]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["b", "2"], " ", "F", " ", 
        RowBox[{"Sin", "[", "a", "]"}]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["a", "2"], " ", "F", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"a", "-", 
          RowBox[{"2", " ", "b"}]}], "]"}]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["a", "3"], " ", "b", " ", "F", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"a", "-", 
          RowBox[{"2", " ", "b"}]}], "]"}]}], "-", 
       RowBox[{"4", " ", "a", " ", 
        SuperscriptBox["F", "2"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"a", "-", "b"}], ")"}]}], "]"}]}], "+", 
       RowBox[{"b", " ", 
        SuperscriptBox["F", "2"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"a", "-", "b"}], ")"}]}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", "b", " ", 
        SuperscriptBox["F", "2"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"a", "-", "b"}], ")"}]}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["a", "4"], " ", "b", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "b"}], "]"}]}]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.6642116529651794`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     SuperscriptBox["A", "2"]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox["a", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["a", "2"]}]}], ")"}], " ", "F", " ", 
          RowBox[{"Cos", "[", "a", "]"}]}], "+", 
         RowBox[{"2", " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["a", "2"], "+", 
            SuperscriptBox["F", "2"], "-", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "a"}], "]"}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"3", " ", "F"}], "+", 
               RowBox[{"a", " ", 
                RowBox[{"Cos", "[", "a", "]"}]}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]}], ")"}]}], "-", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", " ", "b"}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["a", "4"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["a", "4"], " ", 
          SuperscriptBox["b", "2"]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["F", "2"]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox["F", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["b", "2"], " ", 
          SuperscriptBox["F", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox["b", "2"], " ", 
          SuperscriptBox["F", "2"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["a", "3"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["b", "2"]}], ")"}], " ", "F", " ", 
          RowBox[{"Cos", "[", "a", "]"}]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["a", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a"}], "-", "b"}], ")"}], " ", "F", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"a", "-", 
            RowBox[{"2", " ", "b"}]}], "]"}]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["F", "2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"2", " ", "a"}], "-", 
            RowBox[{"2", " ", "b"}]}], "]"}]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox["F", "2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"2", " ", "a"}], "-", 
            RowBox[{"2", " ", "b"}]}], "]"}]}], "+", 
         RowBox[{"2", " ", "a", " ", "b", " ", 
          SuperscriptBox["F", "2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"2", " ", "a"}], "-", 
            RowBox[{"2", " ", "b"}]}], "]"}]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["a", "4"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "b"}], "]"}]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["a", "2"], " ", "F", " ", 
          RowBox[{"Sin", "[", "a", "]"}]}], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox["b", "2"], " ", "F", " ", 
          RowBox[{"Sin", "[", "a", "]"}]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["a", "2"], " ", "F", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"a", "-", 
            RowBox[{"2", " ", "b"}]}], "]"}]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["a", "3"], " ", "b", " ", "F", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"a", "-", 
            RowBox[{"2", " ", "b"}]}], "]"}]}], "+", 
         RowBox[{"4", " ", "a", " ", 
          SuperscriptBox["F", "2"], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"2", " ", "a"}], "-", 
            RowBox[{"2", " ", "b"}]}], "]"}]}], "-", 
         RowBox[{"b", " ", 
          SuperscriptBox["F", "2"], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"2", " ", "a"}], "-", 
            RowBox[{"2", " ", "b"}]}], "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", "b", " ", 
          SuperscriptBox["F", "2"], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"2", " ", "a"}], "-", 
            RowBox[{"2", " ", "b"}]}], "]"}]}], "-", 
         RowBox[{
          SuperscriptBox["a", "4"], " ", "b", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "b"}], "]"}]}]}], ")"}]}]}], ")"}]}], ",", " ", 
   "F"}], "]"}]], "Input",
 CellChangeTimes->{{3.664211669074153*^9, 3.664211699104603*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"F", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["a", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["a", "2"]}]}], ")"}], " ", 
       RowBox[{"Cos", "[", "a", "]"}]}], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["b", "2"]}], ")"}], " ", 
        RowBox[{"Cos", "[", "a", "]"}]}], "b"], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "a"}], "-", "b"}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"a", "-", 
          RowBox[{"2", " ", "b"}]}], "]"}]}], 
       RowBox[{"2", " ", "b"}]], "-", 
      RowBox[{
       FractionBox["3", "2"], " ", 
       SuperscriptBox["a", "3"], " ", 
       RowBox[{"Sin", "[", "a", "]"}]}], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        RowBox[{"Sin", "[", "a", "]"}]}], "b"], "+", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", "b", " ", 
       RowBox[{"Sin", "[", "a", "]"}]}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["a", "3"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"a", "-", 
         RowBox[{"2", " ", "b"}]}], "]"}]}], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"a", "-", 
          RowBox[{"2", " ", "b"}]}], "]"}]}], "b"]}], ")"}]}], 
   SuperscriptBox["A", "2"]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["F", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       SuperscriptBox["a", "3"], "2"], "+", 
      FractionBox["1", 
       RowBox[{"2", " ", "b"}]], "+", 
      FractionBox[
       SuperscriptBox["a", "2"], 
       RowBox[{"2", " ", "b"}]], "-", 
      FractionBox["b", "2"], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "2"], " ", "b"}], "2"], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", "a", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"2", " ", "a"}], "-", 
         RowBox[{"2", " ", "b"}]}], "]"}]}], "-", 
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"2", " ", "a"}], "-", 
         RowBox[{"2", " ", "b"}]}], "]"}], 
       RowBox[{"2", " ", "b"}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"2", " ", "a"}], "-", 
          RowBox[{"2", " ", "b"}]}], "]"}]}], 
       RowBox[{"2", " ", "b"}]], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"2", " ", "a"}], "-", 
         RowBox[{"2", " ", "b"}]}], "]"}]}], "-", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox["a", "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"2", " ", "a"}], "-", 
         RowBox[{"2", " ", "b"}]}], "]"}]}], "-", 
      FractionBox[
       RowBox[{"a", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"2", " ", "a"}], "-", 
          RowBox[{"2", " ", "b"}]}], "]"}]}], "b"]}], ")"}]}], 
   SuperscriptBox["A", "2"]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["a", "3"], "2"]}], "+", 
    FractionBox[
     SuperscriptBox["a", "5"], "2"], "+", 
    FractionBox[
     SuperscriptBox["a", "4"], 
     RowBox[{"2", " ", "b"}]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["a", "4"], " ", "b"}], "2"], "-", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     SuperscriptBox["a", "3"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "a"}], "]"}]}], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["a", "4"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "b"}], "]"}]}], 
     RowBox[{"2", " ", "b"}]], "-", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     SuperscriptBox["a", "4"], " ", 
     RowBox[{"Cos", "[", "a", "]"}], " ", 
     RowBox[{"Sin", "[", "a", "]"}]}], "+", 
    RowBox[{
     FractionBox["1", "4"], " ", 
     SuperscriptBox["a", "4"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "b"}], "]"}]}]}], 
   SuperscriptBox["A", "2"]]}]], "Output",
 CellChangeTimes->{3.6642117024182854`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   FractionBox[
    SuperscriptBox["a", "3"], "2"], "+", 
   FractionBox["1", 
    RowBox[{"2", " ", "b"}]], "+", 
   FractionBox[
    SuperscriptBox["a", "2"], 
    RowBox[{"2", " ", "b"}]], "-", 
   FractionBox["b", "2"], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "2"], " ", "b"}], "2"], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", "a", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{
      RowBox[{"2", " ", "a"}], "-", 
      RowBox[{"2", " ", "b"}]}], "]"}]}], "-", 
   FractionBox[
    RowBox[{"Cos", "[", 
     RowBox[{
      RowBox[{"2", " ", "a"}], "-", 
      RowBox[{"2", " ", "b"}]}], "]"}], 
    RowBox[{"2", " ", "b"}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{
       RowBox[{"2", " ", "a"}], "-", 
       RowBox[{"2", " ", "b"}]}], "]"}]}], 
    RowBox[{"2", " ", "b"}]], "+", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      RowBox[{"2", " ", "a"}], "-", 
      RowBox[{"2", " ", "b"}]}], "]"}]}], "-", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    SuperscriptBox["a", "2"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      RowBox[{"2", " ", "a"}], "-", 
      RowBox[{"2", " ", "b"}]}], "]"}]}], "-", 
   FractionBox[
    RowBox[{"a", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"2", " ", "a"}], "-", 
       RowBox[{"2", " ", "b"}]}], "]"}]}], "b"]}], "]"}]], "Input",
 CellChangeTimes->{{3.664211757721681*^9, 3.6642117719929047`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["a", "2"], "+", 
      RowBox[{
       SuperscriptBox["a", "3"], " ", "b"}], "-", 
      SuperscriptBox["b", "2"], "-", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["b", "2"]}]}], ")"}]}], "+", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["a", "2"], "-", 
      RowBox[{"a", " ", "b"}]}], ")"}], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"a", "-", "b"}], ")"}]}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], " ", "a"}], "+", "b", "-", 
      RowBox[{
       SuperscriptBox["a", "2"], " ", "b"}]}], ")"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"a", "-", "b"}], ")"}]}], "]"}]}]}], 
  RowBox[{"4", " ", "b"}]]], "Output",
 CellChangeTimes->{3.6642117768293204`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox["a", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "3"}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["a", "2"]}]}], ")"}], " ", 
    RowBox[{"Cos", "[", "a", "]"}]}], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "3"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["b", "2"]}], ")"}], " ", 
     RowBox[{"Cos", "[", "a", "]"}]}], "b"], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "a"}], "-", "b"}], ")"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"a", "-", 
       RowBox[{"2", " ", "b"}]}], "]"}]}], 
    RowBox[{"2", " ", "b"}]], "-", 
   RowBox[{
    FractionBox["3", "2"], " ", 
    SuperscriptBox["a", "3"], " ", 
    RowBox[{"Sin", "[", "a", "]"}]}], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     RowBox[{"Sin", "[", "a", "]"}]}], "b"], "+", 
   RowBox[{
    SuperscriptBox["a", "2"], " ", "b", " ", 
    RowBox[{"Sin", "[", "a", "]"}]}], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox["a", "3"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"a", "-", 
      RowBox[{"2", " ", "b"}]}], "]"}]}], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "2"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"a", "-", 
       RowBox[{"2", " ", "b"}]}], "]"}]}], "b"]}], "]"}]], "Input",
 CellChangeTimes->{{3.6642117962274065`*^9, 3.664211825703724*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "b"}], "+", 
        RowBox[{"2", " ", "a", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"a", "-", "b"}], ")"}], " ", "b"}]}], ")"}]}]}], ")"}], 
      " ", 
      RowBox[{"Cos", "[", "a", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "a"}], "-", "b"}], ")"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"a", "-", 
        RowBox[{"2", " ", "b"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "-", 
        RowBox[{"3", " ", "a", " ", "b"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["b", "2"]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "a", "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"a", " ", "b"}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"a", "-", 
        RowBox[{"2", " ", "b"}]}], "]"}]}]}], ")"}]}], 
  RowBox[{"2", " ", "b"}]]], "Output",
 CellChangeTimes->{{3.6642118126950665`*^9, 3.6642118299877305`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["a", "3"], "2"]}], "+", 
   FractionBox[
    SuperscriptBox["a", "5"], "2"], "+", 
   FractionBox[
    SuperscriptBox["a", "4"], 
    RowBox[{"2", " ", "b"}]], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "4"], " ", "b"}], "2"], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox["a", "3"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "a"}], "]"}]}], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "4"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "b"}], "]"}]}], 
    RowBox[{"2", " ", "b"}]], "-", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox["a", "4"], " ", 
    RowBox[{"Cos", "[", "a", "]"}], " ", 
    RowBox[{"Sin", "[", "a", "]"}]}], "+", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    SuperscriptBox["a", "4"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "b"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.66421186700152*^9, 3.664211878993224*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["a", "3"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"a", "-", "b"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"a", " ", "b"}]}], ")"}]}], "-", 
     RowBox[{"2", " ", "b", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "a"}], "]"}]}], "+", 
     RowBox[{"2", " ", "a", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "b"}], "]"}]}], "+", 
     RowBox[{"a", " ", "b", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "a"}], "]"}]}], "+", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "b"}], "]"}]}], ")"}]}]}], ")"}]}], 
  RowBox[{"4", " ", "b"}]]], "Output",
 CellChangeTimes->{3.664211882124653*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"E2", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"a", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "t"}], ")"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"a", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "t"}], ")"}]}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", "t"}]}], ")"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"a", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "t"}], ")"}]}], "]"}]}]}], 
    RowBox[{
     SuperscriptBox["t", "2"], " ", 
     SuperscriptBox["a", "2"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", "a", "]"}], "+", 
       RowBox[{"a", " ", 
        RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Integral]", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "w", " ", "t"}]], 
   SuperscriptBox["t", 
    RowBox[{"2", " "}]], 
   SuperscriptBox["E2", "2"], 
   RowBox[{"\[DifferentialD]", "t"}]}]}]}], "Input",
 CellChangeTimes->{{3.6651393503054333`*^9, 3.6651395685930862`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"8", " ", 
    SuperscriptBox["a", "4"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", "a", "]"}], "+", 
       RowBox[{"a", " ", 
        RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}], "2"]}]], 
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      SuperscriptBox["a", "2"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "a", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "t"}], ")"}]}], "+", 
        RowBox[{"\[ImaginaryI]", " ", "t", " ", "w"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"4", " ", "\[ImaginaryI]", " ", "a"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "a", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", "a", " ", "t"}]]}], 
          ")"}]}], "+", "w", "-", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", "a", " ", "t"}]], " ", 
         "w"}]}], ")"}]}], 
     RowBox[{
      RowBox[{"4", " ", 
       SuperscriptBox["a", "2"]}], "-", 
      SuperscriptBox["w", "2"]}]], "-", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      SuperscriptBox["a", "4"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "a", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "t"}], ")"}]}], "+", 
        RowBox[{"\[ImaginaryI]", " ", "t", " ", "w"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"4", " ", "\[ImaginaryI]", " ", "a"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "a", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", "a", " ", "t"}]]}], 
          ")"}]}], "+", "w", "-", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", "a", " ", "t"}]], " ", 
         "w"}]}], ")"}]}], 
     RowBox[{
      RowBox[{"4", " ", 
       SuperscriptBox["a", "2"]}], "-", 
      SuperscriptBox["w", "2"]}]], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["a", "3"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "a", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "t"}], ")"}]}], "+", 
        RowBox[{"\[ImaginaryI]", " ", "t", " ", "w"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"4", " ", "\[ImaginaryI]", " ", "a"}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "a", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"4", " ", "\[ImaginaryI]", " ", "a", " ", "t"}]]}], 
          ")"}]}], "+", "w", "-", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"4", " ", "\[ImaginaryI]", " ", "a", " ", "t"}]], " ", 
         "w"}]}], ")"}]}], 
     RowBox[{
      RowBox[{"4", " ", 
       SuperscriptBox["a", "2"]}], "-", 
      SuperscriptBox["w", "2"]}]], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["a", "3"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "a", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "t"}], ")"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "t", " ", "w"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"4", " ", "\[ImaginaryI]", " ", "a"}]]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         RowBox[{"2", " ", "a"}], "-", "w"}]], "-", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"4", " ", "\[ImaginaryI]", " ", "a", " ", "t"}]], 
        RowBox[{
         RowBox[{"2", " ", "a"}], "+", "w"}]]}], ")"}]}], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     SuperscriptBox["a", "2"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "a", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "t"}], ")"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "t", " ", "w"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"4", " ", "\[ImaginaryI]", " ", "a"}]]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         RowBox[{"2", " ", "a"}], "-", "w"}]], "-", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"4", " ", "\[ImaginaryI]", " ", "a", " ", "t"}]], 
        RowBox[{
         RowBox[{"2", " ", "a"}], "+", "w"}]]}], ")"}]}], "-", 
    RowBox[{"\[ImaginaryI]", " ", 
     SuperscriptBox["a", "4"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "a", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "t"}], ")"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "t", " ", "w"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"4", " ", "\[ImaginaryI]", " ", "a"}]]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox["1", 
        RowBox[{
         RowBox[{"2", " ", "a"}], "-", "w"}]], "-", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"4", " ", "\[ImaginaryI]", " ", "a", " ", "t"}]], 
        RowBox[{
         RowBox[{"2", " ", "a"}], "+", "w"}]]}], ")"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "a"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "a"}], "-", "w"}], ")"}]}]], "t"]}], "-", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "t", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a"}], "+", "w"}], ")"}]}]], "t"], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "a"}], "+", "w"}], ")"}], " ", 
        RowBox[{"ExpIntegralEi", "[", 
         RowBox[{"\[ImaginaryI]", " ", "t", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a"}], "+", "w"}], ")"}]}], "]"}]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "a"}], "-", "w"}], ")"}], " ", 
        RowBox[{"ExpIntegralEi", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "a", " ", "t"}], 
          "+", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", "w"}]}], "]"}]}]}], ")"}]}],
     "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["a", "2"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "a"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "a"}], "-", "w"}], ")"}]}]], "t"]}], "-", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "t", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a"}], "+", "w"}], ")"}]}]], "t"], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "a"}], "+", "w"}], ")"}], " ", 
        RowBox[{"ExpIntegralEi", "[", 
         RowBox[{"\[ImaginaryI]", " ", "t", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a"}], "+", "w"}], ")"}]}], "]"}]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "a"}], "-", "w"}], ")"}], " ", 
        RowBox[{"ExpIntegralEi", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "a", " ", "t"}], 
          "+", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", "w"}]}], "]"}]}]}], ")"}]}],
     "-", 
    FractionBox[
     RowBox[{"4", " ", 
      RowBox[{"Cos", "[", "a", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "a"}], "+", "w"}], ")"}], " ", 
         RowBox[{"ExpIntegralEi", "[", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "a"}], "+", "w"}], ")"}]}], "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "a"}], "-", "w"}], ")"}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"4", " ", "\[ImaginaryI]", " ", "a", " ", "t"}]]}], 
             ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "a"}], "-", "w"}], ")"}]}]], " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "a"}], "-", "w"}], ")"}], " ", 
            RowBox[{"ExpIntegralEi", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "a", " ", "t"}],
               "+", 
              RowBox[{"\[ImaginaryI]", " ", "t", " ", "w"}]}], "]"}]}]}], 
          ")"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "a", "]"}]}], "t"], "+", 
    RowBox[{
     FractionBox["1", "t"], 
     RowBox[{"4", " ", "a", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "a"}], "+", "w"}], ")"}], " ", 
         RowBox[{"ExpIntegralEi", "[", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "a"}], "+", "w"}], ")"}]}], "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "a"}], "-", "w"}], ")"}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"4", " ", "\[ImaginaryI]", " ", "a", " ", "t"}]]}], 
             ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "a"}], "-", "w"}], ")"}]}]], " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "a"}], "-", "w"}], ")"}], " ", 
            RowBox[{"ExpIntegralEi", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "a", " ", "t"}],
               "+", 
              RowBox[{"\[ImaginaryI]", " ", "t", " ", "w"}]}], "]"}]}]}], 
          ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", "a", "]"}], "-", 
        RowBox[{"Sin", "[", "a", "]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", "a", "]"}], "+", 
        RowBox[{"Sin", "[", "a", "]"}]}], ")"}]}]}], "-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"t", " ", "w"}]], 
     RowBox[{"4", " ", "\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SuperscriptBox["a", "2"]}], ")"}]}], " ", "t", " ", 
         SuperscriptBox["w", "2"], " ", 
         RowBox[{"ExpIntegralEi", "[", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", "w"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[ImaginaryI]", "+", "a"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], "+", "a"}], ")"}], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", "w"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox["a", "2"], " ", "t"}], "-", 
              RowBox[{"\[ImaginaryI]", " ", "w"}]}], ")"}]}], "-", 
           RowBox[{"a", " ", 
            RowBox[{"(", 
             RowBox[{"\[ImaginaryI]", "+", "a"}], ")"}], " ", "t", " ", "w", 
            " ", 
            RowBox[{"ExpIntegralEi", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "a", " ", "t"}],
               "+", 
              RowBox[{"\[ImaginaryI]", " ", "t", " ", "w"}]}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "a"}], "]"}], "+", 
              RowBox[{"\[ImaginaryI]", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", "a"}], "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{"a", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], "+", "a"}], ")"}], "2"], " ", "t",
          " ", "w", " ", 
         RowBox[{"ExpIntegralEi", "[", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "a"}], "+", "w"}], ")"}]}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "a"}], "]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "a"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], "-", 
    RowBox[{"4", " ", "a", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "a"}], "-", "w"}], ")"}]}]], "t"]}], "-", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "t", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a"}], "+", "w"}], ")"}]}]], "t"], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "a"}], "+", "w"}], ")"}], " ", 
        RowBox[{"ExpIntegralEi", "[", 
         RowBox[{"\[ImaginaryI]", " ", "t", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a"}], "+", "w"}], ")"}]}], "]"}]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "a"}], "-", "w"}], ")"}], " ", 
        RowBox[{"ExpIntegralEi", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "a", " ", "t"}], 
          "+", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", "w"}]}], "]"}]}]}], ")"}], 
     " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "a"}], "]"}]}], "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["a", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"t", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "a"}], "+", "w"}], ")"}], " ", 
         RowBox[{"ExpIntegralEi", "[", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "a"}], "+", "w"}], ")"}]}], "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "a"}], "-", "w"}], ")"}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"4", " ", "\[ImaginaryI]", " ", "a", " ", "t"}]]}], 
             ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "a"}], "-", "w"}], ")"}]}]], " ", "t", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "a"}], "-", "w"}], ")"}], " ", 
            RowBox[{"ExpIntegralEi", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "a", " ", "t"}],
               "+", 
              RowBox[{"\[ImaginaryI]", " ", "t", " ", "w"}]}], "]"}]}]}], 
          ")"}]}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "a"}], "]"}]}], "t"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.665139546573213*^9, 3.66513957813523*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "b", "1"], 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "w", " ", "t"}]], 
   SuperscriptBox["t", 
    RowBox[{"2", " "}]], 
   SuperscriptBox["E2", "2"], 
   RowBox[{"\[DifferentialD]", "t"}]}]}]], "Input",
 CellChangeTimes->{{3.6651396019936094`*^9, 3.6651396250415993`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"4", " ", 
      SuperscriptBox["a", "4"], " ", "b", " ", "w", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         SuperscriptBox["a", "2"]}], "+", 
        SuperscriptBox["w", "2"]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", "a", "]"}], "+", 
         RowBox[{"a", " ", 
          RowBox[{"Sin", "[", "a", "]"}]}]}], ")"}], "2"]}]], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "a", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "b"}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"8", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["a", "4"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "b"}], ")"}]}], "+", "w"}], ")"}]}]]}], "+", 
       RowBox[{"8", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["a", "6"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "b"}], ")"}]}], "+", "w"}], ")"}]}]]}], "-", 
       RowBox[{"8", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["a", "4"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "b"}], ")"}]}], "+", 
            RowBox[{"b", " ", "w"}]}], ")"}]}]]}], "-", 
       RowBox[{"8", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["a", "6"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "b"}], ")"}]}], "+", 
            RowBox[{"b", " ", "w"}]}], ")"}]}]]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "b", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "a"}], "+", "w"}], ")"}]}]], " ", "w"}], "+", 
       RowBox[{"8", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "b", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "a"}], "+", "w"}], ")"}]}]], " ", "w"}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "b", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "a"}], "+", "w"}], ")"}]}]], " ", "w"}], "-", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["a", "3"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "b", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "a"}], "+", "w"}], ")"}]}]], " ", "w"}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["a", "4"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "b", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "a"}], "+", "w"}], ")"}]}]], " ", "w"}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["a", "5"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "b", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "a"}], "+", "w"}], ")"}]}]], " ", "w"}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["a", "4"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "b"}], ")"}]}], "+", "w"}], ")"}]}]], " ", 
        "w"}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "a"}], "+", 
            RowBox[{"b", " ", "w"}]}], ")"}]}]], " ", "w"}], "-", 
       RowBox[{"8", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "a"}], "+", 
            RowBox[{"b", " ", "w"}]}], ")"}]}]], " ", "w"}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "a"}], "+", 
            RowBox[{"b", " ", "w"}]}], ")"}]}]], " ", "w"}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["a", "3"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "a"}], "+", 
            RowBox[{"b", " ", "w"}]}], ")"}]}]], " ", "w"}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["a", "4"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "a"}], "+", 
            RowBox[{"b", " ", "w"}]}], ")"}]}]], " ", "w"}], "-", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["a", "5"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "a"}], "+", 
            RowBox[{"b", " ", "w"}]}], ")"}]}]], " ", "w"}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "b"}], ")"}]}], "+", 
            RowBox[{"b", " ", "w"}]}], ")"}]}]], " ", "w"}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["a", "4"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "b"}], ")"}]}], "+", 
            RowBox[{"b", " ", "w"}]}], ")"}]}]], " ", "w"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["a", "2"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "b", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "a"}], "+", "w"}], ")"}]}]], " ", 
        SuperscriptBox["w", "2"]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["a", "3"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "b", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "a"}], "+", "w"}], ")"}]}]], " ", 
        SuperscriptBox["w", "2"]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["a", "4"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "b", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "a"}], "+", "w"}], ")"}]}]], " ", 
        SuperscriptBox["w", "2"]}], "-", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["a", "2"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "b"}], ")"}]}], "+", "w"}], ")"}]}]], " ", 
        SuperscriptBox["w", "2"]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["a", "2"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "a"}], "+", 
            RowBox[{"b", " ", "w"}]}], ")"}]}]], " ", 
        SuperscriptBox["w", "2"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["a", "3"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "a"}], "+", 
            RowBox[{"b", " ", "w"}]}], ")"}]}]], " ", 
        SuperscriptBox["w", "2"]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["a", "4"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "a"}], "+", 
            RowBox[{"b", " ", "w"}]}], ")"}]}]], " ", 
        SuperscriptBox["w", "2"]}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["a", "2"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "b"}], ")"}]}], "+", 
            RowBox[{"b", " ", "w"}]}], ")"}]}]], " ", 
        SuperscriptBox["w", "2"]}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["a", "4"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "b"}], ")"}]}], "+", 
            RowBox[{"b", " ", "w"}]}], ")"}]}]], " ", 
        SuperscriptBox["w", "2"]}], "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "b", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "a"}], "+", "w"}], ")"}]}]], " ", 
        SuperscriptBox["w", "3"]}], "-", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "b", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "a"}], "+", "w"}], ")"}]}]], " ", 
        SuperscriptBox["w", "3"]}], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "b", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "a"}], "+", "w"}], ")"}]}]], " ", 
        SuperscriptBox["w", "3"]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["a", "2"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "b"}], ")"}]}], "+", "w"}], ")"}]}]], " ", 
        SuperscriptBox["w", "3"]}], "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "a"}], "+", 
            RowBox[{"b", " ", "w"}]}], ")"}]}]], " ", 
        SuperscriptBox["w", "3"]}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "a"}], "+", 
            RowBox[{"b", " ", "w"}]}], ")"}]}]], " ", 
        SuperscriptBox["w", "3"]}], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "a"}], "+", 
            RowBox[{"b", " ", "w"}]}], ")"}]}]], " ", 
        SuperscriptBox["w", "3"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "b"}], ")"}]}], "+", 
            RowBox[{"b", " ", "w"}]}], ")"}]}]], " ", 
        SuperscriptBox["w", "3"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "b"}], ")"}]}], "+", 
            RowBox[{"b", " ", "w"}]}], ")"}]}]], " ", 
        SuperscriptBox["w", "3"]}], "-", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["a", "2"]}], ")"}], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "b"}], ")"}]}]], " ", 
        SuperscriptBox["w", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox["a", "2"]}], "-", 
          SuperscriptBox["w", "2"]}], ")"}], " ", 
        RowBox[{"CosIntegral", "[", "w", "]"}]}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["a", "2"]}], ")"}], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "b"}], ")"}]}]], " ", 
        SuperscriptBox["w", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox["a", "2"]}], "-", 
          SuperscriptBox["w", "2"]}], ")"}], " ", 
        RowBox[{"CosIntegral", "[", 
         RowBox[{"b", " ", "w"}], "]"}]}], "+", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["a", "2"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "b"}]], " ", 
        SuperscriptBox["w", "2"], " ", 
        RowBox[{"CosIntegral", "[", 
         RowBox[{
          RowBox[{"2", " ", "a"}], "+", "w"}], "]"}]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["a", "3"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "b"}]], " ", 
        SuperscriptBox["w", "2"], " ", 
        RowBox[{"CosIntegral", "[", 
         RowBox[{
          RowBox[{"2", " ", "a"}], "+", "w"}], "]"}]}], "-", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["a", "4"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "b"}]], " ", 
        SuperscriptBox["w", "2"], " ", 
        RowBox[{"CosIntegral", "[", 
         RowBox[{
          RowBox[{"2", " ", "a"}], "+", "w"}], "]"}]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "b"}]], " ", 
        SuperscriptBox["w", "4"], " ", 
        RowBox[{"CosIntegral", "[", 
         RowBox[{
          RowBox[{"2", " ", "a"}], "+", "w"}], "]"}]}], "+", 
       RowBox[{"2", " ", "a", " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "b"}]], " ", 
        SuperscriptBox["w", "4"], " ", 
        RowBox[{"CosIntegral", "[", 
         RowBox[{
          RowBox[{"2", " ", "a"}], "+", "w"}], "]"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["a", "2"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "b"}]], " ", 
        SuperscriptBox["w", "4"], " ", 
        RowBox[{"CosIntegral", "[", 
         RowBox[{
          RowBox[{"2", " ", "a"}], "+", "w"}], "]"}]}], "-", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["a", "2"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "b"}]], " ", 
        SuperscriptBox["w", "2"], " ", 
        RowBox[{"CosIntegral", "[", 
         RowBox[{"b", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a"}], "+", "w"}], ")"}]}], "]"}]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["a", "3"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "b"}]], " ", 
        SuperscriptBox["w", "2"], " ", 
        RowBox[{"CosIntegral", "[", 
         RowBox[{"b", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a"}], "+", "w"}], ")"}]}], "]"}]}], "+", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["a", "4"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "b"}]], " ", 
        SuperscriptBox["w", "2"], " ", 
        RowBox[{"CosIntegral", "[", 
         RowBox[{"b", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a"}], "+", "w"}], ")"}]}], "]"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "b"}]], " ", 
        SuperscriptBox["w", "4"], " ", 
        RowBox[{"CosIntegral", "[", 
         RowBox[{"b", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a"}], "+", "w"}], ")"}]}], "]"}]}], "-", 
       RowBox[{"2", " ", "a", " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "b"}]], " ", 
        SuperscriptBox["w", "4"], " ", 
        RowBox[{"CosIntegral", "[", 
         RowBox[{"b", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a"}], "+", "w"}], ")"}]}], "]"}]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["a", "2"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "b"}]], " ", 
        SuperscriptBox["w", "4"], " ", 
        RowBox[{"CosIntegral", "[", 
         RowBox[{"b", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a"}], "+", "w"}], ")"}]}], "]"}]}], "+", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["a", "2"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", "b"}], ")"}]}]], " ", 
        SuperscriptBox["w", "2"], " ", 
        RowBox[{"ExpIntegralEi", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "a"}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "w"}]}], "]"}]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["a", "3"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", "b"}], ")"}]}]], " ", 
        SuperscriptBox["w", "2"], " ", 
        RowBox[{"ExpIntegralEi", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "a"}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "w"}]}], "]"}]}], "-", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["a", "4"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", "b"}], ")"}]}]], " ", 
        SuperscriptBox["w", "2"], " ", 
        RowBox[{"ExpIntegralEi", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "a"}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "w"}]}], "]"}]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", "b"}], ")"}]}]], " ", 
        SuperscriptBox["w", "4"], " ", 
        RowBox[{"ExpIntegralEi", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "a"}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "w"}]}], "]"}]}], "-", 
       RowBox[{"2", " ", "a", " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", "b"}], ")"}]}]], " ", 
        SuperscriptBox["w", "4"], " ", 
        RowBox[{"ExpIntegralEi", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "a"}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "w"}]}], "]"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["a", "2"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", "b"}], ")"}]}]], " ", 
        SuperscriptBox["w", "4"], " ", 
        RowBox[{"ExpIntegralEi", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "a"}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "w"}]}], "]"}]}], "-", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["a", "2"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", "b"}], ")"}]}]], " ", 
        SuperscriptBox["w", "2"], " ", 
        RowBox[{"ExpIntegralEi", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "a", " ", "b"}], 
          "+", 
          RowBox[{"\[ImaginaryI]", " ", "b", " ", "w"}]}], "]"}]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["a", "3"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", "b"}], ")"}]}]], " ", 
        SuperscriptBox["w", "2"], " ", 
        RowBox[{"ExpIntegralEi", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "a", " ", "b"}], 
          "+", 
          RowBox[{"\[ImaginaryI]", " ", "b", " ", "w"}]}], "]"}]}], "+", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["a", "4"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", "b"}], ")"}]}]], " ", 
        SuperscriptBox["w", "2"], " ", 
        RowBox[{"ExpIntegralEi", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "a", " ", "b"}], 
          "+", 
          RowBox[{"\[ImaginaryI]", " ", "b", " ", "w"}]}], "]"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", "b"}], ")"}]}]], " ", 
        SuperscriptBox["w", "4"], " ", 
        RowBox[{"ExpIntegralEi", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "a", " ", "b"}], 
          "+", 
          RowBox[{"\[ImaginaryI]", " ", "b", " ", "w"}]}], "]"}]}], "+", 
       RowBox[{"2", " ", "a", " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", "b"}], ")"}]}]], " ", 
        SuperscriptBox["w", "4"], " ", 
        RowBox[{"ExpIntegralEi", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "a", " ", "b"}], 
          "+", 
          RowBox[{"\[ImaginaryI]", " ", "b", " ", "w"}]}], "]"}]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["a", "2"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", "b"}], ")"}]}]], " ", 
        SuperscriptBox["w", "4"], " ", 
        RowBox[{"ExpIntegralEi", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "a", " ", "b"}], 
          "+", 
          RowBox[{"\[ImaginaryI]", " ", "b", " ", "w"}]}], "]"}]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["a", "2"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "b"}], ")"}]}]], " ", 
        SuperscriptBox["w", "2"], " ", 
        RowBox[{"SinIntegral", "[", "w", "]"}]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["a", "4"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "b"}], ")"}]}]], " ", 
        SuperscriptBox["w", "2"], " ", 
        RowBox[{"SinIntegral", "[", "w", "]"}]}], "-", 
       RowBox[{"2", " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "b"}], ")"}]}]], " ", 
        SuperscriptBox["w", "4"], " ", 
        RowBox[{"SinIntegral", "[", "w", "]"}]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["a", "2"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "b"}], ")"}]}]], " ", 
        SuperscriptBox["w", "4"], " ", 
        RowBox[{"SinIntegral", "[", "w", "]"}]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["a", "2"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "b"}], ")"}]}]], " ", 
        SuperscriptBox["w", "2"], " ", 
        RowBox[{"SinIntegral", "[", 
         RowBox[{"b", " ", "w"}], "]"}]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["a", "4"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "b"}], ")"}]}]], " ", 
        SuperscriptBox["w", "2"], " ", 
        RowBox[{"SinIntegral", "[", 
         RowBox[{"b", " ", "w"}], "]"}]}], "+", 
       RowBox[{"2", " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "b"}], ")"}]}]], " ", 
        SuperscriptBox["w", "4"], " ", 
        RowBox[{"SinIntegral", "[", 
         RowBox[{"b", " ", "w"}], "]"}]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["a", "2"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "b"}], ")"}]}]], " ", 
        SuperscriptBox["w", "4"], " ", 
        RowBox[{"SinIntegral", "[", 
         RowBox[{"b", " ", "w"}], "]"}]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["a", "2"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "b"}]], " ", 
        SuperscriptBox["w", "2"], " ", 
        RowBox[{"SinIntegral", "[", 
         RowBox[{
          RowBox[{"2", " ", "a"}], "+", "w"}], "]"}]}], "-", 
       RowBox[{"8", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["a", "3"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "b"}]], " ", 
        SuperscriptBox["w", "2"], " ", 
        RowBox[{"SinIntegral", "[", 
         RowBox[{
          RowBox[{"2", " ", "a"}], "+", "w"}], "]"}]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["a", "4"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "b"}]], " ", 
        SuperscriptBox["w", "2"], " ", 
        RowBox[{"SinIntegral", "[", 
         RowBox[{
          RowBox[{"2", " ", "a"}], "+", "w"}], "]"}]}], "+", 
       RowBox[{"b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "b"}]], " ", 
        SuperscriptBox["w", "4"], " ", 
        RowBox[{"SinIntegral", "[", 
         RowBox[{
          RowBox[{"2", " ", "a"}], "+", "w"}], "]"}]}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "b"}]], " ", 
        SuperscriptBox["w", "4"], " ", 
        RowBox[{"SinIntegral", "[", 
         RowBox[{
          RowBox[{"2", " ", "a"}], "+", "w"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "b"}]], " ", 
        SuperscriptBox["w", "4"], " ", 
        RowBox[{"SinIntegral", "[", 
         RowBox[{
          RowBox[{"2", " ", "a"}], "+", "w"}], "]"}]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["a", "2"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "b"}]], " ", 
        SuperscriptBox["w", "2"], " ", 
        RowBox[{"SinIntegral", "[", 
         RowBox[{"b", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a"}], "+", "w"}], ")"}]}], "]"}]}], "+", 
       RowBox[{"8", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox["a", "3"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "b"}]], " ", 
        SuperscriptBox["w", "2"], " ", 
        RowBox[{"SinIntegral", "[", 
         RowBox[{"b", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a"}], "+", "w"}], ")"}]}], "]"}]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["a", "4"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "b"}]], " ", 
        SuperscriptBox["w", "2"], " ", 
        RowBox[{"SinIntegral", "[", 
         RowBox[{"b", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a"}], "+", "w"}], ")"}]}], "]"}]}], "-", 
       RowBox[{"b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "b"}]], " ", 
        SuperscriptBox["w", "4"], " ", 
        RowBox[{"SinIntegral", "[", 
         RowBox[{"b", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a"}], "+", "w"}], ")"}]}], "]"}]}], "-", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "b"}]], " ", 
        SuperscriptBox["w", "4"], " ", 
        RowBox[{"SinIntegral", "[", 
         RowBox[{"b", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a"}], "+", "w"}], ")"}]}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["a", "2"], " ", "b", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "b"}]], " ", 
        SuperscriptBox["w", "4"], " ", 
        RowBox[{"SinIntegral", "[", 
         RowBox[{"b", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a"}], "+", "w"}], ")"}]}], "]"}]}]}], 
      ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"0", "<", 
     RowBox[{"Re", "[", "b", "]"}], "<", "1"}], "&&", 
    RowBox[{
     RowBox[{"Im", "[", "b", "]"}], "\[Equal]", "0"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.6651396185100236`*^9, 3.6651397329221225`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"a", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "t"}], " ", ")"}], 
      RowBox[{"Cos", "[", 
       RowBox[{"a", " ", "t"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         SuperscriptBox["a", "2"], " ", "t"}]}], ")"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"a", " ", "t"}], "]"}]}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"a", " ", "t"}], ")"}], "2"]], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6652264072450266`*^9, 3.6652265671901608`*^9}, {
  3.665227174838851*^9, 3.665227189756326*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
pNjwP/qo/TM=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{741., Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {0., 30.02949572357014}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.665226560427615*^9, 3.6652265702176065`*^9}, {
  3.665227182139549*^9, 3.6652271933472185`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"a", " ", "t"}], "]"}], "+", 
     RowBox[{"a", " ", "t", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"a", " ", "t"}], "]"}]}]}], 
    SuperscriptBox[
     RowBox[{"(", "t", ")"}], "2"]], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6652266226661434`*^9, 3.6652266375547895`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
woiehHKfxkfifxsLEhI=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{795., Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {-0.566632313713339, 90.70896851767131}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.665226642992985*^9, 3.6652271981034055`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"Cos", "[", 
     RowBox[{"a", " ", "t"}], "]"}], 
    SuperscriptBox[
     RowBox[{"(", "t", ")"}], "2"]], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6652267952945113`*^9, 3.665226795607031*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwV1nc8lt0bAHCkZJWWrCJUIqmMMnKdFEX2iCQqEcpq0JBVVigZvVmliHgl
9VYq49hkRHgiZIRn3B6eQQnhd//+uj/fz/nc5z73Odd1nWvLWV9rNz4eHp5Q
Xh6e/z817JOP6mwrB5e6vD3BKtZozfeFM7Tycjh73NwxzMMKcRO+NfLyYpC6
XnlW/ocFKrv4GkbFMfCZmm3Uf2mBoo7Gva/fieHUXcisuGWBZHgMcmIdMKRv
fPORIWuBDH1fhmwoxsD76bt5k4c5atlmkJ6sVgnOaaXBX4XN0OvkV98idCqh
9K+ofMWwKXrIt2ltoGElzG8Ky1kqMUVnBmaiT5yshGelrmW33EzR75SXAZuj
KiFaZHCtee0xJLdc0vrFQCWMZvhbRCWYoOWXI+NTGZVg63Yi9NQFE0QMTTXe
na4Eg5YLuTeNTNC7si/gLVQF1yrd2XELxsjkyh3VvVpVIPiD2sbyMUZXRlgr
y+LJ8fNT4XLOR1FjVT1u06sGDanVVqOeRii35e9o/JFqGKGs5Oc3M0IR3XuF
TK2r4cSceezx3UbIYOKxbeP5aoibET+QOGOIyiQCGZWJ1aBvlnvHPtoQFftu
X/eGXg32mw7Ff3hzGD3aFO2enFwDRhG7kwWVDqEApYpY6yc1cK79avw7sUPI
Tn26WKygBt57fWiLmjVAa41Pz8fhGrj5+N3PzGYDFHdlf0IEUQN7ymdPRvkb
oNBm+scAVAufahK3C9ceRJ7XjUVPMGuh75O+SV8YQgXSa045/64Fs8/Xg1f4
IcQs7yl05amDV1LeR445I+TD52Hqs74ObFYcp8jpInQlNjL2tl4dFP01OD4x
Digks0awKK4Olr1bYBkP6aOUqgMrlqnWg7x1kkgFoYe+uS4/vnJfPYSNnTFp
bdFDEitan4serAfJPbpSy1/poTQTJ0MJu3rg++lnNnFZD2V13rijeqsevMs5
ex8t6aJ/x0r4HFrr4aT25tvSm3VRleDepULvBtitGhG/NkAbKdnuLrl7rQGc
MztY9x21UcLjXb4etxvgn5cameqgjU6rqwwqpDZA88kWzFypjRadFHFabQPk
itxM2fx4P9IpFg+Jlm4EUys5QaO2fejt8flF18+N0EsD0UkTLSTzdPb9wa5G
cOr0SilR10K3x2d8ZAcb4c3mmP+eyGgh69Dpgd7pRlDIkfvRNKmJ2PkTFVZy
n+Fll41aVLImUl0YDIbAzxBgkB99YUwD5WbXLkptbQJR/uM6D9PVkV+E7TCo
NUHkxl1D8jHqSPf8aM057SZQtR9YXxegjtqV+WOKzJqAsFLINbZWR7OvD60z
CGiCHNNsioWQOjKtrN7u2dAEXsr9mRrBe9FUf6VliWczeFqZXo2/sgdVVFiq
919uhvsplgoJ5/ag6KyhDbzBzRAqW1SQY7sHyZzj6TNJbIb8ZyX9fJp7kNE4
uA18agbVd8fmE37vRmmzFdeXi7RA1A2LrQNBuxESL39mU9QCupdlnyqrqCH+
lA2+hh9awFnw55vO1WqocZ2P7r7qFjC26LqQOr0LWayR7ZL61gJBLz9p3qjY
hZxFwpb/XGiBQvFLjDibXegmn6GHn1krvFswzqOEq6L3ky2q8cxWyP22QeDP
tAq64b11Lvh3K2xLsvOc7FdB+sxb9X48X2BeZnHhb60KqmPscrFd/wWkhlbC
2RQV1DWakCCt9wVyPLhFxvtUELfXdio/9gvcXsHv5h+ijFQb+j/UK7fB2hVo
s73cDiQ+eWEiQbMNpIeeB5gK7kA8G+a3nERtQByLXO7IVUJdZyVjWXZtMClF
PVheq4SCFu1OSYS1wZL/tydZXkqoRbON16u7DTLin8xXfNqONDtOP19h0A57
vxQ4RFzYhrqQzWT+ZDtQ4ztbdwkqorknI5lvptqBz8tTKPiPAtqydNms9E87
2FYSPv00BeRTnlzYwvcVZpgWHvX1CkhA55sXS/wreFdW7TKLUEA66idoGvAV
luZPs8SXK6CsrS5D+P5XeJFfeXn7anl0UehCB2V3BxSGVfjRjeVQbrn4exOt
DmiOV64/pyuHBv2qU7FuB1w7/jF4cqccsu6WPJNv1AFKKR++7xCTQ/tzGllB
Th3Q8dp7KahIFvHrbxNVjO6AQzultHLaNqMM/+EjlwY7oHSd2JZAxU2ouce+
fNW9TqjkKVI/vFYKhffSNngldUJ3pVjWzXlJtL8/0KfuUSdc9o30qh+VRDmD
/8gGZXfChVxKXUqJJAqidocxPnSCvMZ5K0lnSaQ6bW9UO9IJvO+ruU+LJND9
1Q5t17W7wHgo697uUxuRjZHD8OhoF1xuYy6aMdejT+v2tI0wuuCq9A1zgb71
SH5YsPznZBdofs9Pav28HnFvlj4a+tMFza6CX0Lz1qOE15st+0Uo8EMj61Wo
63rUIjNW0alBgf6n90r7fqxDh6f8M6rvUMAhtu5SUd9apJUVa5+l+A18s8rc
L86KoeKqkOvCyt9A9L3t0S6GGFIZuZweoPYN7J6xjI72iiG5bU6DpjrfoFQg
+KJtqRgSLtx5ftbiG8SEH97w95YYGippDbC++Q2e/KszEbxcDMW2rX7I3/EN
hnbeogvrrEJDi0ldHiHdoH7EPO9DtxASYbbHBt7pht/pea9ysRDa/130UGRM
N/Av7rzwPE8IJfwX9To7qRue3N1X0xUohJDHzXsDed3wljHjMyshhJ5+PXvU
tr0bDq+WzTZ3FkRnc/aUwZYeEKN8HGyaFkBjxm3Z4jU9EGPPWmVivhwVpw5e
/7qlFywvA8XkMA96Hr0sZseNPnBpCkoY3f8Hfrk6Eu6l/eAbKKm47BkHhA9H
Wr/eOAApfawRjjgNgsTGRIadBqGXZVbl2NgLIhUqPN1mQ+Ags/pIcU8tHAiw
WKiZG4LSzw3nXOT+wxk5cdkKGcPwx20ks4Box852Gq2Cx35C03zMkZcK/fgd
xS2p4vdPSPkx0xFa+hNrtxTzUR+OgP0/mfsdLlKxzLObnzJSR8AivbJp7U0q
5rlmdMkmYwQC5c5Tq2OouFGhf7jy6QjIrWtsX5ZHxcdvClSlF45Ab2bTKsFh
Kr6k7BxiVT0CQrdBeJsNDRdGC/8tmxgBLBWo0K5Gx3KG7r+SDo/Cx8QEO6EW
Bu4PpQTKHBmFvbkuOaHdDPyo7PBcjvEopFYYzEz+ZOA1GgpL78xH4crj3g//
zTIwn8LQyh6HUWhWpG0c2EbgMR5HGRlvcjzx6bOPIQQuKDM7lJMyCoOUNc65
KuNYU0PzwVvqKDwy/EvIezPx7n/EzXczRiHF9IRZVAATK8/NCBWOj4KgY9HP
0RAmlqv8dCebPQohvJw3sYlMLGSKriXOjULalaMG0SVMPOR6zMVv1RhcVpr7
DjwT+G7SGdWdWmMQYBQQWhE3gQe58Z+zI8bg2oJnfVbiJB5dCsqyix6Dxe/K
iuvSJzFd5GKgQOwYaJt2uARnT2L2NpOtFxLGwFNnOhjeTmKekyvC9qaPwXjh
eMVFyiSWrwneX1U8Bif01awDxFnYPck3b6BvDOwdOytPJbEwU90qQnIvFbw2
l2ek67Hx59zRbZkaVKgeKRupATbOlbzWKLePCjcP373AMGDj00uPhZX0qND3
NcJgpzEbdzYxH2gZUaE0JHv3Azs2/nQm+rGNIxV+GATIffdm45j7uCQ+nAoC
EqvqPDPY2J3P5sSaCCrc+NUQpveEjQ2uUueSo6jgof79ucgzNv7rKKqfEUeF
2Zx8ped5bOy37WRtwUMqZP0bqF3yho0dyn+3NxRQIWV/aMzpRjbeNq5K8HZS
gRXs2NHGYWORlW3PSylUWMOXHhU1zcZTin5nrvZQYYrHzlFvho0rnd/00H9Q
gdev7lTmXzZ27NBqaKOT67t0atkBAQ6+9xFyMhepUDgnvTAlzcG/oqyctZVp
sDsieIvJIQ7uz+FKTu2kwVuzBzteGHJwdVUSpVCNBk/eqd9YdpR8f55iKqdJ
AyfmibnXphys5OuoK4BoUFrinjZpx8FOx10lKHY0aNVYf512noNrFa92+IXR
wHXmTcxQDAffzvvk8Pc2DUx8hnMaYjnYQJlnMCqSBt015XcK4zm4Si12/HEs
DaKHrj70fcDBFTpP+VtTaJAXHbap7xEHl1i2au0ooMGcmUvK0TwOLgjamj7c
QYOdvhsmb1dzsOeS1xZvCg3KekXCttaS6wsvzvvTTYMOdH2mto6Dc6N0367+
QQNMeCUuNHJwdqJV6wEaDbJli9Ls2jg448WtpdR5Grh3bal52sfB97sortaK
dOC9u6u9mMvBccHxil+30UHh0voSwWkOvqtkOGaxgw751ejN6V8cHBH01t1s
Fx0y/EvpK/9w8E3FJM+j++lw1+OYt8ECB5+/Yumrb0qH2Oc74hwFuBjWN99Q
vkLao7tBUYqL9SrCdfMD6OC1Ja3poDQX63jo/N1+nQ4SUq7zTjJcrFmWf2tr
MB2szLYT8Zu5WOVcdKhcNB0avA+u7ZXn4o1vDSPFM+gQ59SrLaPCxSybygd8
tXQwuGJ7wEyHi3/nRVwsqadDwe+zFYd1uXhx3uTIxc904J4c3qejx8UiOZS/
lC90eMzgbJTV52KlaeJ8/nc6rDZ+ntt+kItPJ2/Qt2TR4Zr51JfOo1x8nt4r
sZxLh9/Kwkf+NeZiH72sqY/TdHi75FMfasLFQaPK+QpzdFi1rHpgqykXP9JA
62f4GRCxcs19Bwsubu/yIjKlGGCjUvPhtB0XdyvtrrPexABxc5u1kse5eCDo
1xMBOQY40tLC2kgzFUPt/LcyQNCtP0fLgYtXXk2pPLybAQ+Oj4pPOnLxwQ2V
D8cNGVD3J8qb7zQXH/WM8M86yoDJrRvjMkhblpuY2h1jgPfGU180znCxsxuF
F1syYLQkuMrlLBffeEdcTDzJAJaLzI0n57j4jd2GQ9r+DEALsVP1HlycuDqE
ji+T8y0E+ul6cvGlz/R4owAG/DY2dywivedAWY/NTQZQ2vwD73txcbGiq49P
BAOuu8QR+he5OGGgZd2vKAYspdcO55L2e6T18eZdBnQlWxwT9eZiNREh/pj7
DPBzE7lGIV00VZyancoADVa3iY0vF997KQXKGQwoiXCmFZH2OX9ntPgxAyzz
4+dX+nGxap+9WkU2AwyEY+M/kC6sXqzteckAnivXvJZf4uKCB6Zs0WoGeLn9
TDt+hYvvHnufklzLgJ2nMU8aaa/lcrrSDQyYWvhI7yO94/pUhFILA+Zz0w+e
vMrFL06nSR/6xgAxtuCOowFcHC3FX/W5hwHL1dteh5D26PJ2t+xjwAr+jqp3
pLcfPfj61BADrKSkb2wK5OJcNbrRNYIBDyMDT/WRjmRYMReZDGi+R9sjcI2L
3bNLH0SwGFBZmp24h/TWjff7E6cZcKY0fD6MNP/XP2GSM+T3eaj8L0iP3j27
PWuWAb1m4pktpHMWNS+9XGTARV6noDXXufjOhycbNXgJsCt/VbuH9LlLguWf
lhHA3WX22JK0IrVfoHElARWLAwJ3SfNnGb00FyZgNn11ag7p0RPF1hRRAky8
+SrKSWe33s78uZaAOYucunHScXvmnZ5sICCOluTAd4OLA1IuyThJELDGo8Rg
I2mXWUafhDQBOT8od5RJHz11Jp2yiYDfs+9k9UjvrepxTJQj4MH6zetNSUtv
tZSyUCBguUrXWUfS/DEN34W3EaA2nClynvQkUz+1UYkAxzC09hLpbsv3DhEq
5Pf/hl65SbryraqEwS4C/iUUNG6TLpB43r24m4CyuxNWMaSTgmT+KVUnYEPN
0y/xpIOGko5f0yIgcwv/vwmk3Q8Li2tqEzDV1017QNriRTiFo0vAm7bBiP97
v8hccpE+ARnhAxH3SW/x87e9cJCAdvmH9FjSQl30dUqHCRCKaiyKJD2973Tn
qBEBLbv2fQ8h/SO9O/GpMQHpBtkegaTrl8ytnU0J2J3cesqbdLFr/RppCwIK
Hwd8PEM6teHA124rAtoinYNsSYervEtItiVARdowz5D0xfs7La3sCXDoYuho
krabyl69ypEcpwjvVyCtby/d1uREAJXwfLKatFJp4r0oFwK846v958jzWyMr
ZH74LAG3BjtfjZCeCw8T5XUj4HvRScdm0q0mfnE3vAig2dbOpJB+X0Q7ts+b
ADk5WeY10llrXYSnfQmQtB61cCR9qdfsrvdVAsy0HntIkHbSrzNWvkaA7QEh
2V9kfBo+0xOk3SBA3K7tSDtpCS+V6NOh5H61WEz9P755vzw7suk2uT/UkEAH
0sQeKYHeCAJWxnD9VEmXz66MtIklwMMyor6DzJ+zMdTbRg8JcHN7JCZM+tjE
qUPLUsn4DRK3oZD5p2FF4atMJwBnp4k9Ji0gWRum/ZQA7d6EJWXShS+ehuws
JOPfZ2vVXjK/H4pIAqOIAKnSehabzP8Qv4TF568J2Om+6clL0tb7Q27JlhDg
k1wWLk96psHp5tpqAqxVvf3nyPqy2cboanUtAZ2rzm8vIm00oOZ7qYGAw5PW
/qdJP5zmc+1oIaDU9VlNpT+5vi35JondBLDuBV3xI+vVpRu/JNdOEJB9Qjw1
jqx/acsH11WzCBDou9+/g3RVQqPoJS4BYZNnKurI+imWl87bMUOeX9MTl9kL
XPyq8yDjAd847JVyVbYk6y9z570PayTGYUu7im+ZOxev/xD4pkpqHFZqhYwe
Iq176Eyh/6ZxiGMf42tyI+vhCY2sr/LjYGrYrt1B1v8dkb1RD1THwYE9kd9B
3g/ug9vs1xwah6KZSYlkZy4eeoB/ifmMg7rJ5mubyPtrKNzsU6LfOFSZDG+K
tOXi4ct9wesvj0P1qqz8CRsu/mk3IyBxbRx69RaufLTm4hFJNSnZ8HEwdnxG
P2TJxdSnj/VVH46DZ4FzkeIxLh5/fSvKuGIcvr634ZFE5P88EzZtrhyHdXdT
LV2AdFKqmFnNODy4MZaSQ97XzKvvUi0bx+GQlBvvzgNkvdCe+Ne+Yxy0Lrd5
7CLvf3aVU7sbdRwUeLcM8mqQ/cBXXcnwVUywb7a4T93GxTze3TPaa5iAK8zZ
s1vJfF55+RtnHRMu+9koiZDerF+QdEaSCT70F7KqCmQ8F0isOqjIBKN763TP
yHJxcvgvPh4dJtCz87ISN3Kxuvor5i03Jti4w+wmst/xS5avvF7GhFtjBJ7+
ycHWKWc9l2EmBDWnRn0b5mDNh8/WxlcxYchdyKtkiIPn/pF3y6pnwslISmjA
ANlfpcsLNbQzoSsujpf4zsFpz+Rt148x4fb9poLcdrLfLJanF4lOwM8J8L1e
zsEbW+XFRp0noGGK8SMtmYNtKIV/ZRYnwDQmnOmsy8Fcl6cX+wsm4YIKp0jv
Cxvj068iVpmywEDzdYqGM9nvt108NmDOgoV+fpqKExu/11deU2TFgpMrf8fJ
O7JxoczzDDN7FvgHGvWIHmfjtJ60/+LOsuDnu6LAfjM2vmoZOSx0nQU2Fk/2
OB5gYxV06oBALgvenKGY9EqT/f0rqWXdL1jAa1HAKZNkY/nNPY25/7Lg4KeI
2ccb2Vjir7Wt0WsW+G3oUj2zjo1XfDh6IaKMBdQKV/UBITYeVtNIXdbJAuLc
KtGAKRbuf8xx7qSw4PvLScp2Fgv3iL5SzO5hwVDlj4s9BAt/Gd9RbDDAgs5H
gwJaP1m4LE+2IYzBgp2T2wRG2ln4g/iPOCsmC+I0NexiW1j4v4g06y0scj7Y
H7i3kYULXDcMVE6z4Gn5Op1bmIWfd3RkJ8yw4O3ms/1ypSycdTDB8/QcC8Q3
p9jVvGfhjGIztd0LLAhIOJ977g0L/yMr/GtpiVyPYHIbfxEL/w9PyYr4
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{596., Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {-1.1549243027091023`, 72.67957726844678}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.66522679869458*^9, 3.665227208936095*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"a", " ", "t", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"a", " ", "t"}], "]"}]}], 
    SuperscriptBox[
     RowBox[{"(", "t", ")"}], "2"]], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.6652268094038873`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{665., Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {0., 8.999999999999996}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6652268130839596`*^9, 3.665227213034979*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"a", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "t"}], " ", ")"}], 
       RowBox[{"Cos", "[", 
        RowBox[{"a", " ", "t"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox["a", "2"], " ", "t"}]}], ")"}], 
       RowBox[{"Sin", "[", 
        RowBox[{"a", " ", "t"}], "]"}]}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"a", " ", "t"}], ")"}], "2"]], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"a", " ", "t"}], "]"}], "+", 
      RowBox[{"a", " ", "t", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"a", " ", "t"}], "]"}]}]}], 
     SuperscriptBox[
      RowBox[{"(", "t", ")"}], "2"]]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6652271122408447`*^9, 3.6652271142867985`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
FHSfrUizl/gfS58RIQ==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{658., Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {-0.40983224062614404`, 120.73846424124143`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6652271176307306`*^9, 3.6652272160782747`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"20", 
     FractionBox[
      RowBox[{
       RowBox[{"a", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "t"}], " ", ")"}], 
        RowBox[{"Cos", "[", 
         RowBox[{"a", " ", "t"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SuperscriptBox["a", "2"], " ", "t"}]}], ")"}], 
        RowBox[{"Sin", "[", 
         RowBox[{"a", " ", "t"}], "]"}]}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"a", " ", "t"}], ")"}], "2"]]}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"a", " ", "t"}], "]"}], "+", 
      RowBox[{"a", " ", "t", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"a", " ", "t"}], "]"}]}]}], 
     SuperscriptBox[
      RowBox[{"(", "t", ")"}], "2"]]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.66522713406625*^9, 3.6652271617167454`*^9}, 
   3.6652272273805065`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
/B8fQws2
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{800., Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {0., 691.2988829890742}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.665227147288716*^9, {3.6652272190635223`*^9, 3.665227230490638*^9}}]
}, Open  ]]
},
WindowSize->{1264, 624},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (December 4, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 378, 10, 31, "Input"],
Cell[961, 34, 6097, 110, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7095, 149, 382, 11, 47, "Input"],
Cell[7480, 162, 2526, 52, 222, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10043, 219, 438, 13, 48, "Input"],
Cell[10484, 234, 4623, 86, 229, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15144, 325, 429, 13, 48, "Input"],
Cell[15576, 340, 166, 5, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15779, 350, 345, 11, 46, "Input"],
Cell[16127, 363, 140, 4, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16304, 372, 440, 13, 47, "Input"],
Cell[16747, 387, 4258, 80, 224, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21042, 472, 465, 14, 48, "Input"],
Cell[21510, 488, 631, 20, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22178, 513, 399, 12, 47, "Input"],
Cell[22580, 527, 645, 21, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23262, 553, 231, 7, 48, "Input"],
Cell[23496, 562, 127, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23660, 570, 3112, 97, 174, "Input"],
Cell[26775, 669, 12220, 411, 267, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39032, 1085, 153, 3, 31, "Input"],
Cell[39188, 1090, 2825, 86, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42050, 1181, 83, 2, 31, "Input"],
Cell[42136, 1185, 1108, 35, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43281, 1225, 343, 9, 31, "Input"],
Cell[43627, 1236, 35263, 588, 222, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78927, 1829, 292, 8, 31, "Input"],
Cell[79222, 1839, 35540, 593, 222, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114799, 2437, 368, 11, 54, "Input"],
Cell[115170, 2450, 34870, 582, 228, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150077, 3037, 299, 8, 33, "Input"],
Cell[150379, 3047, 35414, 591, 216, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185830, 3643, 529, 14, 47, "Input"],
Cell[186362, 3659, 8911, 157, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195310, 3821, 452, 13, 46, "Input"],
Cell[195765, 3836, 9099, 159, 226, "Output"]
}, Open  ]],
Cell[204879, 3998, 92, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[204996, 4003, 688, 22, 49, "Input"],
Cell[205687, 4027, 7247, 129, 207, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212971, 4161, 13102, 413, 309, "Input"],
Cell[226076, 4576, 11998, 380, 310, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238111, 4961, 83, 2, 31, "Input"],
Cell[238197, 4965, 4909, 143, 94, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[243143, 5113, 6927, 227, 181, "Input"],
Cell[250073, 5342, 1391, 45, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[251501, 5392, 3518, 116, 95, "Input"],
Cell[255022, 5510, 1176, 37, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[256235, 5552, 1086, 37, 52, "Input"],
Cell[257324, 5591, 871, 28, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[258232, 5624, 366, 11, 54, "Input"],
Cell[258601, 5637, 67904, 1124, 560, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[326542, 6766, 319, 9, 31, "Input"],
Cell[326864, 6777, 5935, 108, 223, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[332836, 6890, 1049, 32, 95, "Input"],
Cell[333888, 6924, 972, 37, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[334897, 6966, 1021, 38, 79, "Input"],
Cell[335921, 7006, 621, 22, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[336579, 7033, 589, 17, 33, "Input"],
Cell[337171, 7052, 542, 16, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[337750, 7073, 587, 17, 33, "Input"],
Cell[338340, 7092, 535, 16, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[338912, 7113, 977, 30, 88, "Input"],
Cell[339892, 7145, 2160, 73, 95, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[342089, 7223, 84, 2, 31, "Input"],
Cell[342176, 7227, 1061, 29, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343274, 7261, 489, 14, 31, "Input"],
Cell[343766, 7277, 3045, 56, 362, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[346848, 7338, 2289, 74, 90, "Input"],
Cell[349140, 7414, 836, 27, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[350013, 7446, 2386, 76, 90, "Input"],
Cell[352402, 7524, 2273, 74, 92, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[354712, 7603, 770, 25, 52, "Input"],
Cell[355485, 7630, 496, 16, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[356018, 7651, 1555, 51, 49, "Input"],
Cell[357576, 7704, 596, 21, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[358209, 7730, 432, 13, 48, "Input"],
Cell[358644, 7745, 39430, 656, 222, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[398111, 8406, 443, 14, 31, "Input"],
Cell[398557, 8422, 415, 13, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[399009, 8440, 870, 27, 53, "Input"],
Cell[399882, 8469, 68829, 1148, 707, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[468748, 9622, 1170, 36, 52, "Input"],
Cell[469921, 9660, 3409, 104, 92, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[473367, 9769, 83, 2, 31, "Input"],
Cell[473453, 9773, 3407, 104, 92, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[476897, 9882, 1147, 36, 52, "Input"],
Cell[478047, 9920, 5584, 156, 170, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[483668, 10081, 4855, 136, 168, "Input"],
Cell[488526, 10219, 4606, 132, 140, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[493169, 10356, 5012, 137, 168, "Input"],
Cell[498184, 10495, 4568, 148, 176, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[502789, 10648, 1566, 53, 50, "Input"],
Cell[504358, 10703, 1039, 35, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[505434, 10743, 1614, 53, 52, "Input"],
Cell[507051, 10798, 1283, 42, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[508371, 10845, 1075, 35, 50, "Input"],
Cell[509449, 10882, 850, 27, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[510336, 10914, 1169, 38, 91, "Input"],
Cell[511508, 10954, 18373, 507, 466, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[529918, 11466, 375, 10, 48, "Input"],
Cell[530296, 11478, 33127, 803, 456, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[563460, 12286, 805, 25, 75, "Input"],
Cell[564268, 12313, 4560, 86, 474, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[568865, 12404, 466, 14, 49, "Input"],
Cell[569334, 12420, 4531, 85, 507, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[573902, 12510, 339, 10, 49, "Input"],
Cell[574244, 12522, 8897, 156, 382, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[583178, 12683, 352, 11, 49, "Input"],
Cell[583533, 12696, 4190, 80, 427, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[587760, 12781, 993, 32, 53, "Input"],
Cell[588756, 12815, 4538, 85, 418, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[593331, 12905, 1056, 34, 53, "Input"],
Cell[594390, 12941, 4530, 86, 540, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
